// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_codeRepl11624_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_codeRepl11624_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_codeRepl11624_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state1 = "1";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state35 = "100";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state36 = "1000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state37 = "10000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state38 = "100000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state39 = "1000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state40 = "10000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state41 = "100000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state42 = "1000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state43 = "10000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state44 = "100000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state45 = "1000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state46 = "10000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state47 = "100000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state48 = "1000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state49 = "10000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state50 = "100000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state51 = "1000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state52 = "10000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state53 = "100000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state54 = "1000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state55 = "10000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state56 = "100000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state57 = "1000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state58 = "10000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state59 = "100000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state60 = "1000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state61 = "10000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state62 = "100000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state63 = "1000000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state64 = "10000000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state65 = "100000000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state66 = "1000000000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state67 = "10000000000000000000000000000000000";
const sc_lv<36> Block_codeRepl11624_s::ap_ST_fsm_state68 = "100000000000000000000000000000000000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Block_codeRepl11624_s::ap_const_boolean_1 = true;
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_3 = "11";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_4 = "100";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_5 = "101";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_6 = "110";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_7 = "111";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_8 = "1000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_9 = "1001";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_A = "1010";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_B = "1011";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_C = "1100";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_D = "1101";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_E = "1110";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_F = "1111";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_10 = "10000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_11 = "10001";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_12 = "10010";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_13 = "10011";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_14 = "10100";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_15 = "10101";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_16 = "10110";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_17 = "10111";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_18 = "11000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_19 = "11001";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1A = "11010";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1B = "11011";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1C = "11100";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1D = "11101";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1E = "11110";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1F = "11111";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_20 = "100000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_21 = "100001";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_22 = "100010";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_23 = "100011";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_1 = "1";
const bool Block_codeRepl11624_s::ap_const_boolean_0 = false;
const sc_lv<1> Block_codeRepl11624_s::ap_const_lv1_0 = "0";
const sc_lv<1> Block_codeRepl11624_s::ap_const_lv1_1 = "1";
const sc_lv<6> Block_codeRepl11624_s::ap_const_lv6_0 = "000000";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1F = "11111";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1E = "11110";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1D = "11101";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1C = "11100";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1B = "11011";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1A = "11010";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_19 = "11001";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_18 = "11000";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_17 = "10111";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_16 = "10110";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_15 = "10101";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_14 = "10100";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_13 = "10011";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_12 = "10010";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_11 = "10001";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_10 = "10000";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_F = "1111";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_E = "1110";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_D = "1101";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_C = "1100";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_B = "1011";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_A = "1010";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_9 = "1001";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_8 = "1000";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_7 = "111";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_6 = "110";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_5 = "101";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_4 = "100";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_3 = "11";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_2 = "10";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_1 = "1";
const sc_lv<64> Block_codeRepl11624_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_2 = "10";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_0 = "00000";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1 = "1";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_2 = "10";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_3 = "11";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_4 = "100";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_5 = "101";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_6 = "110";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_7 = "111";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_8 = "1000";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_9 = "1001";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_A = "1010";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_B = "1011";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_C = "1100";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_D = "1101";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_E = "1110";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_F = "1111";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_10 = "10000";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_11 = "10001";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_12 = "10010";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_13 = "10011";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_14 = "10100";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_15 = "10101";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_16 = "10110";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_17 = "10111";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_18 = "11000";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_19 = "11001";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1A = "11010";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1B = "11011";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1C = "11100";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1D = "11101";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1E = "11110";
const sc_lv<5> Block_codeRepl11624_s::ap_const_lv5_1F = "11111";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_3EDE5BD9 = "111110110111100101101111011001";
const sc_lv<32> Block_codeRepl11624_s::ap_const_lv32_41200000 = "1000001001000000000000000000000";
const sc_lv<6> Block_codeRepl11624_s::ap_const_lv6_20 = "100000";
const sc_lv<6> Block_codeRepl11624_s::ap_const_lv6_1 = "1";

Block_codeRepl11624_s::Block_codeRepl11624_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xout_mag_U = new Block_codeRepl116fYi("xout_mag_U");
    xout_mag_U->clk(ap_clk);
    xout_mag_U->reset(ap_rst);
    xout_mag_U->address0(xout_mag_address0);
    xout_mag_U->ce0(xout_mag_ce0);
    xout_mag_U->we0(xout_mag_we0);
    xout_mag_U->d0(tmp_5_i_reg_1231);
    xout_mag_U->q0(xout_mag_q0);
    FFT_fadd_32ns_32ndEe_U110 = new FFT_fadd_32ns_32ndEe<1,5,32,32,32>("FFT_fadd_32ns_32ndEe_U110");
    FFT_fadd_32ns_32ndEe_U110->clk(ap_clk);
    FFT_fadd_32ns_32ndEe_U110->reset(ap_rst);
    FFT_fadd_32ns_32ndEe_U110->din0(tmp_i_reg_1206);
    FFT_fadd_32ns_32ndEe_U110->din1(tmp_i_26_reg_1211);
    FFT_fadd_32ns_32ndEe_U110->ce(ap_var_for_const0);
    FFT_fadd_32ns_32ndEe_U110->dout(grp_fu_798_p2);
    FFT_fmul_32ns_32neOg_U111 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U111");
    FFT_fmul_32ns_32neOg_U111->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U111->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U111->din0(reg_825);
    FFT_fmul_32ns_32neOg_U111->din1(reg_825);
    FFT_fmul_32ns_32neOg_U111->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U111->dout(grp_fu_802_p2);
    FFT_fmul_32ns_32neOg_U112 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U112");
    FFT_fmul_32ns_32neOg_U112->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U112->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U112->din0(reg_832);
    FFT_fmul_32ns_32neOg_U112->din1(reg_832);
    FFT_fmul_32ns_32neOg_U112->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U112->dout(grp_fu_806_p2);
    FFT_fmul_32ns_32neOg_U113 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U113");
    FFT_fmul_32ns_32neOg_U113->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U113->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U113->din0(tmp_i_i_i_i_i_reg_1221);
    FFT_fmul_32ns_32neOg_U113->din1(ap_var_for_const1);
    FFT_fmul_32ns_32neOg_U113->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U113->dout(grp_fu_810_p2);
    FFT_fmul_32ns_32neOg_U114 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U114");
    FFT_fmul_32ns_32neOg_U114->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U114->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U114->din0(tmp_i_i_i_i_reg_1226);
    FFT_fmul_32ns_32neOg_U114->din1(ap_var_for_const2);
    FFT_fmul_32ns_32neOg_U114->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U114->dout(grp_fu_815_p2);
    FFT_flog_32ns_32ng8j_U115 = new FFT_flog_32ns_32ng8j<1,13,32,32,32>("FFT_flog_32ns_32ng8j_U115");
    FFT_flog_32ns_32ng8j_U115->clk(ap_clk);
    FFT_flog_32ns_32ng8j_U115->reset(ap_rst);
    FFT_flog_32ns_32ng8j_U115->din0(ap_var_for_const3);
    FFT_flog_32ns_32ng8j_U115->din1(p_x_assign_reg_1216);
    FFT_flog_32ns_32ng8j_U115->ce(ap_var_for_const0);
    FFT_flog_32ns_32ng8j_U115->dout(grp_fu_820_p2);
    regslice_both_mag_OUT_U = new regslice_both<32>("regslice_both_mag_OUT_U");
    regslice_both_mag_OUT_U->ap_clk(ap_clk);
    regslice_both_mag_OUT_U->ap_rst(ap_rst);
    regslice_both_mag_OUT_U->data_in(xout_mag_q0);
    regslice_both_mag_OUT_U->vld_in(mag_OUT_TVALID_int);
    regslice_both_mag_OUT_U->ack_in(mag_OUT_TREADY_int);
    regslice_both_mag_OUT_U->data_out(mag_OUT_TDATA);
    regslice_both_mag_OUT_U->vld_out(regslice_both_mag_OUT_U_vld_out);
    regslice_both_mag_OUT_U->ack_out(mag_OUT_TREADY);
    regslice_both_mag_OUT_U->apdone_blk(regslice_both_mag_OUT_U_apdone_blk);
    regslice_both_data_OUT_M_real_U = new regslice_both<32>("regslice_both_data_OUT_M_real_U");
    regslice_both_data_OUT_M_real_U->ap_clk(ap_clk);
    regslice_both_data_OUT_M_real_U->ap_rst(ap_rst);
    regslice_both_data_OUT_M_real_U->data_in(data_OUTfft_M_real_q0);
    regslice_both_data_OUT_M_real_U->vld_in(data_OUT_M_real_TVALID_int);
    regslice_both_data_OUT_M_real_U->ack_in(data_OUT_M_real_TREADY_int);
    regslice_both_data_OUT_M_real_U->data_out(data_OUT_M_real_TDATA);
    regslice_both_data_OUT_M_real_U->vld_out(regslice_both_data_OUT_M_real_U_vld_out);
    regslice_both_data_OUT_M_real_U->ack_out(data_OUT_M_real_TREADY);
    regslice_both_data_OUT_M_real_U->apdone_blk(regslice_both_data_OUT_M_real_U_apdone_blk);
    regslice_both_data_OUT_M_imag_U = new regslice_both<32>("regslice_both_data_OUT_M_imag_U");
    regslice_both_data_OUT_M_imag_U->ap_clk(ap_clk);
    regslice_both_data_OUT_M_imag_U->ap_rst(ap_rst);
    regslice_both_data_OUT_M_imag_U->data_in(data_OUTfft_M_imag_q0);
    regslice_both_data_OUT_M_imag_U->vld_in(data_OUT_M_imag_TVALID_int);
    regslice_both_data_OUT_M_imag_U->ack_in(data_OUT_M_imag_TREADY_int);
    regslice_both_data_OUT_M_imag_U->data_out(data_OUT_M_imag_TDATA);
    regslice_both_data_OUT_M_imag_U->vld_out(regslice_both_data_OUT_M_imag_U_vld_out);
    regslice_both_data_OUT_M_imag_U->ack_out(data_OUT_M_imag_TREADY);
    regslice_both_data_OUT_M_imag_U->apdone_blk(regslice_both_data_OUT_M_imag_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter28);

    SC_METHOD(thread_ap_block_state31_pp0_stage0_iter29);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter30);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter31);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter32);

    SC_METHOD(thread_ap_block_state36_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state37_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state38_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state39_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state40_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state41_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state42_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state43_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state44_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state45_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state46_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state47_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state48_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state49_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state50_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state51_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state52_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state53_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state54_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state55_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state56_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state57_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state58_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state59_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state60_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state61_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state62_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state63_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state64_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state65_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state66_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state67_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state68);
    sensitive << ( regslice_both_mag_OUT_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_real_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_imag_U_apdone_blk );

    SC_METHOD(thread_ap_block_state68_io);
    sensitive << ( mag_OUT_TREADY_int );
    sensitive << ( data_OUT_M_real_TREADY_int );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln93_fu_844_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( regslice_both_mag_OUT_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_real_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_imag_U_apdone_blk );
    sensitive << ( ap_block_state68_io );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( regslice_both_mag_OUT_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_real_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_imag_U_apdone_blk );
    sensitive << ( ap_block_state68_io );

    SC_METHOD(thread_data_OUT_M_imag_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( data_OUT_M_imag_TREADY_int );

    SC_METHOD(thread_data_OUT_M_imag_TVALID);
    sensitive << ( regslice_both_data_OUT_M_imag_U_vld_out );

    SC_METHOD(thread_data_OUT_M_imag_TVALID_int);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_block_state67_io );

    SC_METHOD(thread_data_OUT_M_real_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( data_OUT_M_real_TREADY_int );

    SC_METHOD(thread_data_OUT_M_real_TVALID);
    sensitive << ( regslice_both_data_OUT_M_real_U_vld_out );

    SC_METHOD(thread_data_OUT_M_real_TVALID_int);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_block_state67_io );

    SC_METHOD(thread_data_OUTfft_M_imag_address0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln106_fu_856_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_data_OUTfft_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_data_OUTfft_M_real_address0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln106_fu_856_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_data_OUTfft_M_real_ce0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_i_fu_850_p2);
    sensitive << ( i_0_i_reg_787 );

    SC_METHOD(thread_icmp_ln93_fu_844_p2);
    sensitive << ( i_0_i_reg_787 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mag_OUT_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( mag_OUT_TREADY_int );

    SC_METHOD(thread_mag_OUT_TVALID);
    sensitive << ( regslice_both_mag_OUT_U_vld_out );

    SC_METHOD(thread_mag_OUT_TVALID_int);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_block_state67_io );

    SC_METHOD(thread_xout_mag_address0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( zext_ln106_reg_1191_pp0_iter31_reg );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_xout_mag_ce0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_xout_mag_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln93_reg_1182_pp0_iter31_reg );
    sensitive << ( ap_enable_reg_pp0_iter32 );

    SC_METHOD(thread_zext_ln106_fu_856_p1);
    sensitive << ( i_0_i_reg_787 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state36_io );
    sensitive << ( ap_block_state37_io );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );
    sensitive << ( ap_block_state40_io );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_state43_io );
    sensitive << ( ap_block_state44_io );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_block_state46_io );
    sensitive << ( ap_block_state47_io );
    sensitive << ( ap_block_state48_io );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_block_state50_io );
    sensitive << ( ap_block_state51_io );
    sensitive << ( ap_block_state52_io );
    sensitive << ( ap_block_state53_io );
    sensitive << ( ap_block_state54_io );
    sensitive << ( ap_block_state55_io );
    sensitive << ( ap_block_state56_io );
    sensitive << ( ap_block_state57_io );
    sensitive << ( ap_block_state58_io );
    sensitive << ( ap_block_state59_io );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_block_state61_io );
    sensitive << ( ap_block_state62_io );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_block_state64_io );
    sensitive << ( ap_block_state65_io );
    sensitive << ( ap_block_state66_io );
    sensitive << ( ap_block_state67_io );
    sensitive << ( icmp_ln93_fu_844_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( regslice_both_mag_OUT_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_real_U_apdone_blk );
    sensitive << ( regslice_both_data_OUT_M_imag_U_apdone_blk );
    sensitive << ( ap_block_state68_io );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter28 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter29 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter30 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter31 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter32 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_codeRepl11624_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mag_OUT_TDATA, "(port)mag_OUT_TDATA");
    sc_trace(mVcdFile, mag_OUT_TVALID, "(port)mag_OUT_TVALID");
    sc_trace(mVcdFile, mag_OUT_TREADY, "(port)mag_OUT_TREADY");
    sc_trace(mVcdFile, data_OUT_M_real_TDATA, "(port)data_OUT_M_real_TDATA");
    sc_trace(mVcdFile, data_OUT_M_real_TVALID, "(port)data_OUT_M_real_TVALID");
    sc_trace(mVcdFile, data_OUT_M_real_TREADY, "(port)data_OUT_M_real_TREADY");
    sc_trace(mVcdFile, data_OUT_M_imag_TDATA, "(port)data_OUT_M_imag_TDATA");
    sc_trace(mVcdFile, data_OUT_M_imag_TVALID, "(port)data_OUT_M_imag_TVALID");
    sc_trace(mVcdFile, data_OUT_M_imag_TREADY, "(port)data_OUT_M_imag_TREADY");
    sc_trace(mVcdFile, data_OUTfft_M_imag_address0, "(port)data_OUTfft_M_imag_address0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_ce0, "(port)data_OUTfft_M_imag_ce0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_q0, "(port)data_OUTfft_M_imag_q0");
    sc_trace(mVcdFile, data_OUTfft_M_real_address0, "(port)data_OUTfft_M_real_address0");
    sc_trace(mVcdFile, data_OUTfft_M_real_ce0, "(port)data_OUTfft_M_real_ce0");
    sc_trace(mVcdFile, data_OUTfft_M_real_q0, "(port)data_OUTfft_M_real_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, xout_mag_address0, "xout_mag_address0");
    sc_trace(mVcdFile, xout_mag_ce0, "xout_mag_ce0");
    sc_trace(mVcdFile, xout_mag_we0, "xout_mag_we0");
    sc_trace(mVcdFile, xout_mag_q0, "xout_mag_q0");
    sc_trace(mVcdFile, mag_OUT_TDATA_blk_n, "mag_OUT_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, data_OUT_M_real_TDATA_blk_n, "data_OUT_M_real_TDATA_blk_n");
    sc_trace(mVcdFile, data_OUT_M_imag_TDATA_blk_n, "data_OUT_M_imag_TDATA_blk_n");
    sc_trace(mVcdFile, i_0_i_reg_787, "i_0_i_reg_787");
    sc_trace(mVcdFile, reg_825, "reg_825");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter27, "ap_block_state29_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter28, "ap_block_state30_pp0_stage0_iter28");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage0_iter29, "ap_block_state31_pp0_stage0_iter29");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter30, "ap_block_state32_pp0_stage0_iter30");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter31, "ap_block_state33_pp0_stage0_iter31");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter32, "ap_block_state34_pp0_stage0_iter32");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln93_reg_1182, "icmp_ln93_reg_1182");
    sc_trace(mVcdFile, ap_block_state36_io, "ap_block_state36_io");
    sc_trace(mVcdFile, ap_block_state37_io, "ap_block_state37_io");
    sc_trace(mVcdFile, ap_block_state38_io, "ap_block_state38_io");
    sc_trace(mVcdFile, ap_block_state39_io, "ap_block_state39_io");
    sc_trace(mVcdFile, ap_block_state40_io, "ap_block_state40_io");
    sc_trace(mVcdFile, ap_block_state41_io, "ap_block_state41_io");
    sc_trace(mVcdFile, ap_block_state42_io, "ap_block_state42_io");
    sc_trace(mVcdFile, ap_block_state43_io, "ap_block_state43_io");
    sc_trace(mVcdFile, ap_block_state44_io, "ap_block_state44_io");
    sc_trace(mVcdFile, ap_block_state45_io, "ap_block_state45_io");
    sc_trace(mVcdFile, ap_block_state46_io, "ap_block_state46_io");
    sc_trace(mVcdFile, ap_block_state47_io, "ap_block_state47_io");
    sc_trace(mVcdFile, ap_block_state48_io, "ap_block_state48_io");
    sc_trace(mVcdFile, ap_block_state49_io, "ap_block_state49_io");
    sc_trace(mVcdFile, ap_block_state50_io, "ap_block_state50_io");
    sc_trace(mVcdFile, ap_block_state51_io, "ap_block_state51_io");
    sc_trace(mVcdFile, ap_block_state52_io, "ap_block_state52_io");
    sc_trace(mVcdFile, ap_block_state53_io, "ap_block_state53_io");
    sc_trace(mVcdFile, ap_block_state54_io, "ap_block_state54_io");
    sc_trace(mVcdFile, ap_block_state55_io, "ap_block_state55_io");
    sc_trace(mVcdFile, ap_block_state56_io, "ap_block_state56_io");
    sc_trace(mVcdFile, ap_block_state57_io, "ap_block_state57_io");
    sc_trace(mVcdFile, ap_block_state58_io, "ap_block_state58_io");
    sc_trace(mVcdFile, ap_block_state59_io, "ap_block_state59_io");
    sc_trace(mVcdFile, ap_block_state60_io, "ap_block_state60_io");
    sc_trace(mVcdFile, ap_block_state61_io, "ap_block_state61_io");
    sc_trace(mVcdFile, ap_block_state62_io, "ap_block_state62_io");
    sc_trace(mVcdFile, ap_block_state63_io, "ap_block_state63_io");
    sc_trace(mVcdFile, ap_block_state64_io, "ap_block_state64_io");
    sc_trace(mVcdFile, ap_block_state65_io, "ap_block_state65_io");
    sc_trace(mVcdFile, ap_block_state66_io, "ap_block_state66_io");
    sc_trace(mVcdFile, ap_block_state67_io, "ap_block_state67_io");
    sc_trace(mVcdFile, reg_832, "reg_832");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln93_fu_844_p2, "icmp_ln93_fu_844_p2");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter1_reg, "icmp_ln93_reg_1182_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter2_reg, "icmp_ln93_reg_1182_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter3_reg, "icmp_ln93_reg_1182_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter4_reg, "icmp_ln93_reg_1182_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter5_reg, "icmp_ln93_reg_1182_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter6_reg, "icmp_ln93_reg_1182_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter7_reg, "icmp_ln93_reg_1182_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter8_reg, "icmp_ln93_reg_1182_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter9_reg, "icmp_ln93_reg_1182_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter10_reg, "icmp_ln93_reg_1182_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter11_reg, "icmp_ln93_reg_1182_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter12_reg, "icmp_ln93_reg_1182_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter13_reg, "icmp_ln93_reg_1182_pp0_iter13_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter14_reg, "icmp_ln93_reg_1182_pp0_iter14_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter15_reg, "icmp_ln93_reg_1182_pp0_iter15_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter16_reg, "icmp_ln93_reg_1182_pp0_iter16_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter17_reg, "icmp_ln93_reg_1182_pp0_iter17_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter18_reg, "icmp_ln93_reg_1182_pp0_iter18_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter19_reg, "icmp_ln93_reg_1182_pp0_iter19_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter20_reg, "icmp_ln93_reg_1182_pp0_iter20_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter21_reg, "icmp_ln93_reg_1182_pp0_iter21_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter22_reg, "icmp_ln93_reg_1182_pp0_iter22_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter23_reg, "icmp_ln93_reg_1182_pp0_iter23_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter24_reg, "icmp_ln93_reg_1182_pp0_iter24_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter25_reg, "icmp_ln93_reg_1182_pp0_iter25_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter26_reg, "icmp_ln93_reg_1182_pp0_iter26_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter27_reg, "icmp_ln93_reg_1182_pp0_iter27_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter28_reg, "icmp_ln93_reg_1182_pp0_iter28_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter29_reg, "icmp_ln93_reg_1182_pp0_iter29_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter30_reg, "icmp_ln93_reg_1182_pp0_iter30_reg");
    sc_trace(mVcdFile, icmp_ln93_reg_1182_pp0_iter31_reg, "icmp_ln93_reg_1182_pp0_iter31_reg");
    sc_trace(mVcdFile, i_fu_850_p2, "i_fu_850_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln106_fu_856_p1, "zext_ln106_fu_856_p1");
    sc_trace(mVcdFile, zext_ln106_reg_1191, "zext_ln106_reg_1191");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter1_reg, "zext_ln106_reg_1191_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter2_reg, "zext_ln106_reg_1191_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter3_reg, "zext_ln106_reg_1191_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter4_reg, "zext_ln106_reg_1191_pp0_iter4_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter5_reg, "zext_ln106_reg_1191_pp0_iter5_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter6_reg, "zext_ln106_reg_1191_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter7_reg, "zext_ln106_reg_1191_pp0_iter7_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter8_reg, "zext_ln106_reg_1191_pp0_iter8_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter9_reg, "zext_ln106_reg_1191_pp0_iter9_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter10_reg, "zext_ln106_reg_1191_pp0_iter10_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter11_reg, "zext_ln106_reg_1191_pp0_iter11_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter12_reg, "zext_ln106_reg_1191_pp0_iter12_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter13_reg, "zext_ln106_reg_1191_pp0_iter13_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter14_reg, "zext_ln106_reg_1191_pp0_iter14_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter15_reg, "zext_ln106_reg_1191_pp0_iter15_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter16_reg, "zext_ln106_reg_1191_pp0_iter16_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter17_reg, "zext_ln106_reg_1191_pp0_iter17_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter18_reg, "zext_ln106_reg_1191_pp0_iter18_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter19_reg, "zext_ln106_reg_1191_pp0_iter19_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter20_reg, "zext_ln106_reg_1191_pp0_iter20_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter21_reg, "zext_ln106_reg_1191_pp0_iter21_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter22_reg, "zext_ln106_reg_1191_pp0_iter22_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter23_reg, "zext_ln106_reg_1191_pp0_iter23_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter24_reg, "zext_ln106_reg_1191_pp0_iter24_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter25_reg, "zext_ln106_reg_1191_pp0_iter25_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter26_reg, "zext_ln106_reg_1191_pp0_iter26_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter27_reg, "zext_ln106_reg_1191_pp0_iter27_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter28_reg, "zext_ln106_reg_1191_pp0_iter28_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter29_reg, "zext_ln106_reg_1191_pp0_iter29_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter30_reg, "zext_ln106_reg_1191_pp0_iter30_reg");
    sc_trace(mVcdFile, zext_ln106_reg_1191_pp0_iter31_reg, "zext_ln106_reg_1191_pp0_iter31_reg");
    sc_trace(mVcdFile, grp_fu_802_p2, "grp_fu_802_p2");
    sc_trace(mVcdFile, tmp_i_reg_1206, "tmp_i_reg_1206");
    sc_trace(mVcdFile, grp_fu_806_p2, "grp_fu_806_p2");
    sc_trace(mVcdFile, tmp_i_26_reg_1211, "tmp_i_26_reg_1211");
    sc_trace(mVcdFile, grp_fu_798_p2, "grp_fu_798_p2");
    sc_trace(mVcdFile, p_x_assign_reg_1216, "p_x_assign_reg_1216");
    sc_trace(mVcdFile, grp_fu_820_p2, "grp_fu_820_p2");
    sc_trace(mVcdFile, tmp_i_i_i_i_i_reg_1221, "tmp_i_i_i_i_i_reg_1221");
    sc_trace(mVcdFile, grp_fu_810_p2, "grp_fu_810_p2");
    sc_trace(mVcdFile, tmp_i_i_i_i_reg_1226, "tmp_i_i_i_i_reg_1226");
    sc_trace(mVcdFile, grp_fu_815_p2, "grp_fu_815_p2");
    sc_trace(mVcdFile, tmp_5_i_reg_1231, "tmp_5_i_reg_1231");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter28, "ap_enable_reg_pp0_iter28");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter29, "ap_enable_reg_pp0_iter29");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter30, "ap_enable_reg_pp0_iter30");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter31, "ap_enable_reg_pp0_iter31");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter32, "ap_enable_reg_pp0_iter32");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, regslice_both_mag_OUT_U_apdone_blk, "regslice_both_mag_OUT_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_data_OUT_M_real_U_apdone_blk, "regslice_both_data_OUT_M_real_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_data_OUT_M_imag_U_apdone_blk, "regslice_both_data_OUT_M_imag_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state68, "ap_block_state68");
    sc_trace(mVcdFile, ap_block_state68_io, "ap_block_state68_io");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, mag_OUT_TVALID_int, "mag_OUT_TVALID_int");
    sc_trace(mVcdFile, mag_OUT_TREADY_int, "mag_OUT_TREADY_int");
    sc_trace(mVcdFile, regslice_both_mag_OUT_U_vld_out, "regslice_both_mag_OUT_U_vld_out");
    sc_trace(mVcdFile, data_OUT_M_real_TVALID_int, "data_OUT_M_real_TVALID_int");
    sc_trace(mVcdFile, data_OUT_M_real_TREADY_int, "data_OUT_M_real_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_OUT_M_real_U_vld_out, "regslice_both_data_OUT_M_real_U_vld_out");
    sc_trace(mVcdFile, data_OUT_M_imag_TVALID_int, "data_OUT_M_imag_TVALID_int");
    sc_trace(mVcdFile, data_OUT_M_imag_TREADY_int, "data_OUT_M_imag_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_OUT_M_imag_U_vld_out, "regslice_both_data_OUT_M_imag_U_vld_out");
#endif

    }
}

Block_codeRepl11624_s::~Block_codeRepl11624_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete xout_mag_U;
    delete FFT_fadd_32ns_32ndEe_U110;
    delete FFT_fmul_32ns_32neOg_U111;
    delete FFT_fmul_32ns_32neOg_U112;
    delete FFT_fmul_32ns_32neOg_U113;
    delete FFT_fmul_32ns_32neOg_U114;
    delete FFT_flog_32ns_32ng8j_U115;
    delete regslice_both_mag_OUT_U;
    delete regslice_both_data_OUT_M_real_U;
    delete regslice_both_data_OUT_M_imag_U;
}

void Block_codeRepl11624_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Block_codeRepl11624_s::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_0;
}

void Block_codeRepl11624_s::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3EDE5BD9;
}

void Block_codeRepl11624_s::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_41200000;
}

void Block_codeRepl11624_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_mag_OUT_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_real_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_imag_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state68_io.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter28 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter28 = ap_enable_reg_pp0_iter27.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter29 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter29 = ap_enable_reg_pp0_iter28.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter30 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter30 = ap_enable_reg_pp0_iter29.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter31 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter31 = ap_enable_reg_pp0_iter30.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter32 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter32 = ap_enable_reg_pp0_iter31.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter32 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_fu_844_p2.read()))) {
        i_0_i_reg_787 = i_fu_850_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_reg_787 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln93_reg_1182 = icmp_ln93_fu_844_p2.read();
        icmp_ln93_reg_1182_pp0_iter1_reg = icmp_ln93_reg_1182.read();
        zext_ln106_reg_1191_pp0_iter1_reg = zext_ln106_reg_1191.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln93_reg_1182_pp0_iter10_reg = icmp_ln93_reg_1182_pp0_iter9_reg.read();
        icmp_ln93_reg_1182_pp0_iter11_reg = icmp_ln93_reg_1182_pp0_iter10_reg.read();
        icmp_ln93_reg_1182_pp0_iter12_reg = icmp_ln93_reg_1182_pp0_iter11_reg.read();
        icmp_ln93_reg_1182_pp0_iter13_reg = icmp_ln93_reg_1182_pp0_iter12_reg.read();
        icmp_ln93_reg_1182_pp0_iter14_reg = icmp_ln93_reg_1182_pp0_iter13_reg.read();
        icmp_ln93_reg_1182_pp0_iter15_reg = icmp_ln93_reg_1182_pp0_iter14_reg.read();
        icmp_ln93_reg_1182_pp0_iter16_reg = icmp_ln93_reg_1182_pp0_iter15_reg.read();
        icmp_ln93_reg_1182_pp0_iter17_reg = icmp_ln93_reg_1182_pp0_iter16_reg.read();
        icmp_ln93_reg_1182_pp0_iter18_reg = icmp_ln93_reg_1182_pp0_iter17_reg.read();
        icmp_ln93_reg_1182_pp0_iter19_reg = icmp_ln93_reg_1182_pp0_iter18_reg.read();
        icmp_ln93_reg_1182_pp0_iter20_reg = icmp_ln93_reg_1182_pp0_iter19_reg.read();
        icmp_ln93_reg_1182_pp0_iter21_reg = icmp_ln93_reg_1182_pp0_iter20_reg.read();
        icmp_ln93_reg_1182_pp0_iter22_reg = icmp_ln93_reg_1182_pp0_iter21_reg.read();
        icmp_ln93_reg_1182_pp0_iter23_reg = icmp_ln93_reg_1182_pp0_iter22_reg.read();
        icmp_ln93_reg_1182_pp0_iter24_reg = icmp_ln93_reg_1182_pp0_iter23_reg.read();
        icmp_ln93_reg_1182_pp0_iter25_reg = icmp_ln93_reg_1182_pp0_iter24_reg.read();
        icmp_ln93_reg_1182_pp0_iter26_reg = icmp_ln93_reg_1182_pp0_iter25_reg.read();
        icmp_ln93_reg_1182_pp0_iter27_reg = icmp_ln93_reg_1182_pp0_iter26_reg.read();
        icmp_ln93_reg_1182_pp0_iter28_reg = icmp_ln93_reg_1182_pp0_iter27_reg.read();
        icmp_ln93_reg_1182_pp0_iter29_reg = icmp_ln93_reg_1182_pp0_iter28_reg.read();
        icmp_ln93_reg_1182_pp0_iter2_reg = icmp_ln93_reg_1182_pp0_iter1_reg.read();
        icmp_ln93_reg_1182_pp0_iter30_reg = icmp_ln93_reg_1182_pp0_iter29_reg.read();
        icmp_ln93_reg_1182_pp0_iter31_reg = icmp_ln93_reg_1182_pp0_iter30_reg.read();
        icmp_ln93_reg_1182_pp0_iter3_reg = icmp_ln93_reg_1182_pp0_iter2_reg.read();
        icmp_ln93_reg_1182_pp0_iter4_reg = icmp_ln93_reg_1182_pp0_iter3_reg.read();
        icmp_ln93_reg_1182_pp0_iter5_reg = icmp_ln93_reg_1182_pp0_iter4_reg.read();
        icmp_ln93_reg_1182_pp0_iter6_reg = icmp_ln93_reg_1182_pp0_iter5_reg.read();
        icmp_ln93_reg_1182_pp0_iter7_reg = icmp_ln93_reg_1182_pp0_iter6_reg.read();
        icmp_ln93_reg_1182_pp0_iter8_reg = icmp_ln93_reg_1182_pp0_iter7_reg.read();
        icmp_ln93_reg_1182_pp0_iter9_reg = icmp_ln93_reg_1182_pp0_iter8_reg.read();
        zext_ln106_reg_1191_pp0_iter10_reg = zext_ln106_reg_1191_pp0_iter9_reg.read();
        zext_ln106_reg_1191_pp0_iter11_reg = zext_ln106_reg_1191_pp0_iter10_reg.read();
        zext_ln106_reg_1191_pp0_iter12_reg = zext_ln106_reg_1191_pp0_iter11_reg.read();
        zext_ln106_reg_1191_pp0_iter13_reg = zext_ln106_reg_1191_pp0_iter12_reg.read();
        zext_ln106_reg_1191_pp0_iter14_reg = zext_ln106_reg_1191_pp0_iter13_reg.read();
        zext_ln106_reg_1191_pp0_iter15_reg = zext_ln106_reg_1191_pp0_iter14_reg.read();
        zext_ln106_reg_1191_pp0_iter16_reg = zext_ln106_reg_1191_pp0_iter15_reg.read();
        zext_ln106_reg_1191_pp0_iter17_reg = zext_ln106_reg_1191_pp0_iter16_reg.read();
        zext_ln106_reg_1191_pp0_iter18_reg = zext_ln106_reg_1191_pp0_iter17_reg.read();
        zext_ln106_reg_1191_pp0_iter19_reg = zext_ln106_reg_1191_pp0_iter18_reg.read();
        zext_ln106_reg_1191_pp0_iter20_reg = zext_ln106_reg_1191_pp0_iter19_reg.read();
        zext_ln106_reg_1191_pp0_iter21_reg = zext_ln106_reg_1191_pp0_iter20_reg.read();
        zext_ln106_reg_1191_pp0_iter22_reg = zext_ln106_reg_1191_pp0_iter21_reg.read();
        zext_ln106_reg_1191_pp0_iter23_reg = zext_ln106_reg_1191_pp0_iter22_reg.read();
        zext_ln106_reg_1191_pp0_iter24_reg = zext_ln106_reg_1191_pp0_iter23_reg.read();
        zext_ln106_reg_1191_pp0_iter25_reg = zext_ln106_reg_1191_pp0_iter24_reg.read();
        zext_ln106_reg_1191_pp0_iter26_reg = zext_ln106_reg_1191_pp0_iter25_reg.read();
        zext_ln106_reg_1191_pp0_iter27_reg = zext_ln106_reg_1191_pp0_iter26_reg.read();
        zext_ln106_reg_1191_pp0_iter28_reg = zext_ln106_reg_1191_pp0_iter27_reg.read();
        zext_ln106_reg_1191_pp0_iter29_reg = zext_ln106_reg_1191_pp0_iter28_reg.read();
        zext_ln106_reg_1191_pp0_iter2_reg = zext_ln106_reg_1191_pp0_iter1_reg.read();
        zext_ln106_reg_1191_pp0_iter30_reg = zext_ln106_reg_1191_pp0_iter29_reg.read();
        zext_ln106_reg_1191_pp0_iter31_reg = zext_ln106_reg_1191_pp0_iter30_reg.read();
        zext_ln106_reg_1191_pp0_iter3_reg = zext_ln106_reg_1191_pp0_iter2_reg.read();
        zext_ln106_reg_1191_pp0_iter4_reg = zext_ln106_reg_1191_pp0_iter3_reg.read();
        zext_ln106_reg_1191_pp0_iter5_reg = zext_ln106_reg_1191_pp0_iter4_reg.read();
        zext_ln106_reg_1191_pp0_iter6_reg = zext_ln106_reg_1191_pp0_iter5_reg.read();
        zext_ln106_reg_1191_pp0_iter7_reg = zext_ln106_reg_1191_pp0_iter6_reg.read();
        zext_ln106_reg_1191_pp0_iter8_reg = zext_ln106_reg_1191_pp0_iter7_reg.read();
        zext_ln106_reg_1191_pp0_iter9_reg = zext_ln106_reg_1191_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter9_reg.read()))) {
        p_x_assign_reg_1216 = grp_fu_798_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln93_reg_1182.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
  esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
  esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
  esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
  esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
  esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
  esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
  esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
  esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
  esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
  esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
  esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
  esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
  esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
  esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
  esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
  esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
  esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
  esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
  esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
  esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
  esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
  esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
  esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
  esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
  esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
  esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
  esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
  esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
  esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
  esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
  esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
  esl_seteq<1,1,1>(ap_block_state67_io.read(), ap_const_boolean_0)))) {
        reg_825 = data_OUTfft_M_real_q0.read();
        reg_832 = data_OUTfft_M_imag_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter30_reg.read()))) {
        tmp_5_i_reg_1231 = grp_fu_815_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter4_reg.read()))) {
        tmp_i_26_reg_1211 = grp_fu_806_p2.read();
        tmp_i_reg_1206 = grp_fu_802_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter22_reg.read()))) {
        tmp_i_i_i_i_i_reg_1221 = grp_fu_820_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter26_reg.read()))) {
        tmp_i_i_i_i_reg_1226 = grp_fu_810_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_fu_844_p2.read()))) {
        zext_ln106_reg_1191 = zext_ln106_fu_856_p1.read();
    }
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[2];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[3];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[4];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[5];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[6];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[7];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[8];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[9];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[10];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[11];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[12];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[13];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[14];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[15];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[16];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[17];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[18];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[19];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[20];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[21];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[22];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[23];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[24];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[25];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[26];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[27];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[28];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[29];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[30];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[31];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[32];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[33];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[34];
}

void Block_codeRepl11624_s::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[35];
}

void Block_codeRepl11624_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Block_codeRepl11624_s::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state29_pp0_stage0_iter27() {
    ap_block_state29_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state30_pp0_stage0_iter28() {
    ap_block_state30_pp0_stage0_iter28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state31_pp0_stage0_iter29() {
    ap_block_state31_pp0_stage0_iter29 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state32_pp0_stage0_iter30() {
    ap_block_state32_pp0_stage0_iter30 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state33_pp0_stage0_iter31() {
    ap_block_state33_pp0_stage0_iter31 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state34_pp0_stage0_iter32() {
    ap_block_state34_pp0_stage0_iter32 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state36_io() {
    ap_block_state36_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state37_io() {
    ap_block_state37_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state38_io() {
    ap_block_state38_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state39_io() {
    ap_block_state39_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state40_io() {
    ap_block_state40_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state41_io() {
    ap_block_state41_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state42_io() {
    ap_block_state42_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state43_io() {
    ap_block_state43_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state44_io() {
    ap_block_state44_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state45_io() {
    ap_block_state45_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state46_io() {
    ap_block_state46_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state47_io() {
    ap_block_state47_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state48_io() {
    ap_block_state48_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state49_io() {
    ap_block_state49_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state50_io() {
    ap_block_state50_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state51_io() {
    ap_block_state51_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state52_io() {
    ap_block_state52_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state53_io() {
    ap_block_state53_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state54_io() {
    ap_block_state54_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state55_io() {
    ap_block_state55_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state56_io() {
    ap_block_state56_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state57_io() {
    ap_block_state57_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state58_io() {
    ap_block_state58_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state59_io() {
    ap_block_state59_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state60_io() {
    ap_block_state60_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state61_io() {
    ap_block_state61_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state62_io() {
    ap_block_state62_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state63_io() {
    ap_block_state63_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state64_io() {
    ap_block_state64_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state65_io() {
    ap_block_state65_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state66_io() {
    ap_block_state66_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state67_io() {
    ap_block_state67_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state68() {
    ap_block_state68 = (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_mag_OUT_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_real_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_imag_U_apdone_blk.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state68_io() {
    ap_block_state68_io = (esl_seteq<1,1,1>(ap_const_logic_0, mag_OUT_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_real_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_M_imag_TREADY_int.read()));
}

void Block_codeRepl11624_s::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Block_codeRepl11624_s::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln93_fu_844_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_mag_OUT_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_real_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_imag_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state68_io.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_codeRepl11624_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Block_codeRepl11624_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_mag_OUT_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_real_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_imag_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state68_io.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_data_OUT_M_imag_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
        data_OUT_M_imag_TDATA_blk_n = data_OUT_M_imag_TREADY_int.read();
    } else {
        data_OUT_M_imag_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl11624_s::thread_data_OUT_M_imag_TVALID() {
    data_OUT_M_imag_TVALID = regslice_both_data_OUT_M_imag_U_vld_out.read();
}

void Block_codeRepl11624_s::thread_data_OUT_M_imag_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
          esl_seteq<1,1,1>(ap_block_state67_io.read(), ap_const_boolean_0)))) {
        data_OUT_M_imag_TVALID_int = ap_const_logic_1;
    } else {
        data_OUT_M_imag_TVALID_int = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_data_OUT_M_real_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
        data_OUT_M_real_TDATA_blk_n = data_OUT_M_real_TREADY_int.read();
    } else {
        data_OUT_M_real_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl11624_s::thread_data_OUT_M_real_TVALID() {
    data_OUT_M_real_TVALID = regslice_both_data_OUT_M_real_U_vld_out.read();
}

void Block_codeRepl11624_s::thread_data_OUT_M_real_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
          esl_seteq<1,1,1>(ap_block_state67_io.read(), ap_const_boolean_0)))) {
        data_OUT_M_real_TVALID_int = ap_const_logic_1;
    } else {
        data_OUT_M_real_TVALID_int = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_data_OUTfft_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (zext_ln106_fu_856_p1.read());
    } else {
        data_OUTfft_M_imag_address0 = "XXXXX";
    }
}

void Block_codeRepl11624_s::thread_data_OUTfft_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        data_OUTfft_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_OUTfft_M_imag_ce0 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_data_OUTfft_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (zext_ln106_fu_856_p1.read());
    } else {
        data_OUTfft_M_real_address0 = "XXXXX";
    }
}

void Block_codeRepl11624_s::thread_data_OUTfft_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        data_OUTfft_M_real_ce0 = ap_const_logic_1;
    } else {
        data_OUTfft_M_real_ce0 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_i_fu_850_p2() {
    i_fu_850_p2 = (!i_0_i_reg_787.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_reg_787.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Block_codeRepl11624_s::thread_icmp_ln93_fu_844_p2() {
    icmp_ln93_fu_844_p2 = (!i_0_i_reg_787.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_787.read() == ap_const_lv6_20);
}

void Block_codeRepl11624_s::thread_mag_OUT_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
        mag_OUT_TDATA_blk_n = mag_OUT_TREADY_int.read();
    } else {
        mag_OUT_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl11624_s::thread_mag_OUT_TVALID() {
    mag_OUT_TVALID = regslice_both_mag_OUT_U_vld_out.read();
}

void Block_codeRepl11624_s::thread_mag_OUT_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
          esl_seteq<1,1,1>(ap_block_state67_io.read(), ap_const_boolean_0)))) {
        mag_OUT_TVALID_int = ap_const_logic_1;
    } else {
        mag_OUT_TVALID_int = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_xout_mag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        xout_mag_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        xout_mag_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        xout_mag_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        xout_mag_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        xout_mag_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        xout_mag_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        xout_mag_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        xout_mag_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        xout_mag_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        xout_mag_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        xout_mag_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        xout_mag_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        xout_mag_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        xout_mag_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        xout_mag_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        xout_mag_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        xout_mag_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        xout_mag_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        xout_mag_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        xout_mag_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        xout_mag_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        xout_mag_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        xout_mag_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        xout_mag_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        xout_mag_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        xout_mag_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        xout_mag_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        xout_mag_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        xout_mag_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        xout_mag_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        xout_mag_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        xout_mag_address0 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()))) {
        xout_mag_address0 =  (sc_lv<5>) (zext_ln106_reg_1191_pp0_iter31_reg.read());
    } else {
        xout_mag_address0 = "XXXXX";
    }
}

void Block_codeRepl11624_s::thread_xout_mag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read())))) {
        xout_mag_ce0 = ap_const_logic_1;
    } else {
        xout_mag_ce0 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_xout_mag_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_reg_1182_pp0_iter31_reg.read()))) {
        xout_mag_we0 = ap_const_logic_1;
    } else {
        xout_mag_we0 = ap_const_logic_0;
    }
}

void Block_codeRepl11624_s::thread_zext_ln106_fu_856_p1() {
    zext_ln106_fu_856_p1 = esl_zext<64,6>(i_0_i_reg_787.read());
}

void Block_codeRepl11624_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter31.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln93_fu_844_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter31.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln93_fu_844_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(ap_block_state36_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(ap_block_state37_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_block_state38_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_block_state39_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(ap_block_state40_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(ap_block_state43_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state44;
            } else {
                ap_NS_fsm = ap_ST_fsm_state43;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(ap_block_state44_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state46;
            } else {
                ap_NS_fsm = ap_ST_fsm_state45;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_block_state46_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_block_state47_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_state47;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(ap_block_state48_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state49;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state50;
            } else {
                ap_NS_fsm = ap_ST_fsm_state49;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(ap_block_state50_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(ap_block_state51_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(ap_block_state52_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state53;
            } else {
                ap_NS_fsm = ap_ST_fsm_state52;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(ap_block_state53_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state54;
            } else {
                ap_NS_fsm = ap_ST_fsm_state53;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && esl_seteq<1,1,1>(ap_block_state54_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state55;
            } else {
                ap_NS_fsm = ap_ST_fsm_state54;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && esl_seteq<1,1,1>(ap_block_state55_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state56;
            } else {
                ap_NS_fsm = ap_ST_fsm_state55;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && esl_seteq<1,1,1>(ap_block_state56_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state57;
            } else {
                ap_NS_fsm = ap_ST_fsm_state56;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && esl_seteq<1,1,1>(ap_block_state57_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state58;
            } else {
                ap_NS_fsm = ap_ST_fsm_state57;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && esl_seteq<1,1,1>(ap_block_state58_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state59;
            } else {
                ap_NS_fsm = ap_ST_fsm_state58;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && esl_seteq<1,1,1>(ap_block_state59_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state60;
            } else {
                ap_NS_fsm = ap_ST_fsm_state59;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state61;
            } else {
                ap_NS_fsm = ap_ST_fsm_state60;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(ap_block_state61_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state62;
            } else {
                ap_NS_fsm = ap_ST_fsm_state61;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_block_state62_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state63;
            } else {
                ap_NS_fsm = ap_ST_fsm_state62;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state64;
            } else {
                ap_NS_fsm = ap_ST_fsm_state63;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(ap_block_state64_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state65;
            } else {
                ap_NS_fsm = ap_ST_fsm_state64;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && esl_seteq<1,1,1>(ap_block_state65_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state66;
            } else {
                ap_NS_fsm = ap_ST_fsm_state65;
            }
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && esl_seteq<1,1,1>(ap_block_state66_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state67;
            } else {
                ap_NS_fsm = ap_ST_fsm_state66;
            }
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && esl_seteq<1,1,1>(ap_block_state67_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state68;
            } else {
                ap_NS_fsm = ap_ST_fsm_state67;
            }
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_mag_OUT_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_real_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_OUT_M_imag_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state68_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state68;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<36>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

