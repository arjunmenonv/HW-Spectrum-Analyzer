// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_codeRepl124_pr.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_codeRepl124_pr::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_codeRepl124_pr::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state1 = "1";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state2 = "10";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state3 = "100";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state4 = "1000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state6 = "100000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1 = "1";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_2 = "10";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_3 = "11";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_4 = "100";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_5 = "101";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_6 = "110";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_7 = "111";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_8 = "1000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_9 = "1001";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_A = "1010";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_B = "1011";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_C = "1100";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_D = "1101";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_E = "1110";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_F = "1111";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_10 = "10000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_11 = "10001";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_12 = "10010";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_13 = "10011";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_14 = "10100";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_15 = "10101";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_16 = "10110";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_17 = "10111";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_18 = "11000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_19 = "11001";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1A = "11010";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1B = "11011";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1C = "11100";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1D = "11101";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1E = "11110";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_1F = "11111";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1 = "1";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_2 = "10";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_3 = "11";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_4 = "100";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_5 = "101";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_6 = "110";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_7 = "111";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_8 = "1000";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_9 = "1001";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_A = "1010";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_B = "1011";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_C = "1100";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_D = "1101";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_E = "1110";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_F = "1111";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_10 = "10000";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_11 = "10001";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_12 = "10010";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_13 = "10011";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_14 = "10100";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_15 = "10101";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_16 = "10110";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_17 = "10111";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_18 = "11000";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_19 = "11001";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1A = "11010";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1B = "11011";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1C = "11100";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1D = "11101";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1E = "11110";
const sc_lv<64> Block_codeRepl124_pr::ap_const_lv64_1F = "11111";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_20 = "100000";
const sc_lv<32> Block_codeRepl124_pr::ap_const_lv32_3F = "111111";
const bool Block_codeRepl124_pr::ap_const_boolean_1 = true;

Block_codeRepl124_pr::Block_codeRepl124_pr(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_data_IN_U = new regslice_both<64>("regslice_both_data_IN_U");
    regslice_both_data_IN_U->ap_clk(ap_clk);
    regslice_both_data_IN_U->ap_rst(ap_rst);
    regslice_both_data_IN_U->data_in(data_IN_TDATA);
    regslice_both_data_IN_U->vld_in(data_IN_TVALID);
    regslice_both_data_IN_U->ack_in(regslice_both_data_IN_U_ack_in);
    regslice_both_data_IN_U->data_out(data_IN_TDATA_int);
    regslice_both_data_IN_U->vld_out(data_IN_TVALID_int);
    regslice_both_data_IN_U->ack_out(data_IN_TREADY_int);
    regslice_both_data_IN_U->apdone_blk(regslice_both_data_IN_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_bitcast_ln147_10_fu_816_p1);
    sensitive << ( trunc_ln147_5_fu_812_p1 );

    SC_METHOD(thread_bitcast_ln147_11_fu_821_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_12_fu_830_p1);
    sensitive << ( trunc_ln147_6_fu_826_p1 );

    SC_METHOD(thread_bitcast_ln147_13_fu_835_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_14_fu_844_p1);
    sensitive << ( trunc_ln147_7_fu_840_p1 );

    SC_METHOD(thread_bitcast_ln147_15_fu_849_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_16_fu_858_p1);
    sensitive << ( trunc_ln147_8_fu_854_p1 );

    SC_METHOD(thread_bitcast_ln147_17_fu_863_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_18_fu_872_p1);
    sensitive << ( trunc_ln147_9_fu_868_p1 );

    SC_METHOD(thread_bitcast_ln147_19_fu_877_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_1_fu_751_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_20_fu_886_p1);
    sensitive << ( trunc_ln147_10_fu_882_p1 );

    SC_METHOD(thread_bitcast_ln147_21_fu_891_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_22_fu_900_p1);
    sensitive << ( trunc_ln147_11_fu_896_p1 );

    SC_METHOD(thread_bitcast_ln147_23_fu_905_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_24_fu_914_p1);
    sensitive << ( trunc_ln147_12_fu_910_p1 );

    SC_METHOD(thread_bitcast_ln147_25_fu_919_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_26_fu_928_p1);
    sensitive << ( trunc_ln147_13_fu_924_p1 );

    SC_METHOD(thread_bitcast_ln147_27_fu_933_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_28_fu_942_p1);
    sensitive << ( trunc_ln147_14_fu_938_p1 );

    SC_METHOD(thread_bitcast_ln147_29_fu_947_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_2_fu_760_p1);
    sensitive << ( trunc_ln147_1_fu_756_p1 );

    SC_METHOD(thread_bitcast_ln147_30_fu_956_p1);
    sensitive << ( trunc_ln147_15_fu_952_p1 );

    SC_METHOD(thread_bitcast_ln147_31_fu_961_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_32_fu_970_p1);
    sensitive << ( trunc_ln147_16_fu_966_p1 );

    SC_METHOD(thread_bitcast_ln147_33_fu_975_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_34_fu_984_p1);
    sensitive << ( trunc_ln147_17_fu_980_p1 );

    SC_METHOD(thread_bitcast_ln147_35_fu_989_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_36_fu_998_p1);
    sensitive << ( trunc_ln147_18_fu_994_p1 );

    SC_METHOD(thread_bitcast_ln147_37_fu_1003_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_38_fu_1012_p1);
    sensitive << ( trunc_ln147_19_fu_1008_p1 );

    SC_METHOD(thread_bitcast_ln147_39_fu_1017_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_3_fu_765_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_40_fu_1026_p1);
    sensitive << ( trunc_ln147_20_fu_1022_p1 );

    SC_METHOD(thread_bitcast_ln147_41_fu_1031_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_42_fu_1040_p1);
    sensitive << ( trunc_ln147_21_fu_1036_p1 );

    SC_METHOD(thread_bitcast_ln147_43_fu_1045_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_44_fu_1054_p1);
    sensitive << ( trunc_ln147_22_fu_1050_p1 );

    SC_METHOD(thread_bitcast_ln147_45_fu_1059_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_46_fu_1068_p1);
    sensitive << ( trunc_ln147_23_fu_1064_p1 );

    SC_METHOD(thread_bitcast_ln147_47_fu_1073_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_48_fu_1082_p1);
    sensitive << ( trunc_ln147_24_fu_1078_p1 );

    SC_METHOD(thread_bitcast_ln147_49_fu_1087_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_4_fu_774_p1);
    sensitive << ( trunc_ln147_2_fu_770_p1 );

    SC_METHOD(thread_bitcast_ln147_50_fu_1096_p1);
    sensitive << ( trunc_ln147_25_fu_1092_p1 );

    SC_METHOD(thread_bitcast_ln147_51_fu_1101_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_52_fu_1110_p1);
    sensitive << ( trunc_ln147_26_fu_1106_p1 );

    SC_METHOD(thread_bitcast_ln147_53_fu_1115_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_54_fu_1124_p1);
    sensitive << ( trunc_ln147_27_fu_1120_p1 );

    SC_METHOD(thread_bitcast_ln147_55_fu_1129_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_56_fu_1138_p1);
    sensitive << ( trunc_ln147_28_fu_1134_p1 );

    SC_METHOD(thread_bitcast_ln147_57_fu_1143_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_58_fu_1152_p1);
    sensitive << ( trunc_ln147_29_fu_1148_p1 );

    SC_METHOD(thread_bitcast_ln147_59_fu_1157_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_5_fu_779_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_60_fu_1166_p1);
    sensitive << ( trunc_ln147_30_fu_1162_p1 );

    SC_METHOD(thread_bitcast_ln147_61_fu_1171_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_62_fu_1180_p1);
    sensitive << ( trunc_ln147_31_fu_1176_p1 );

    SC_METHOD(thread_bitcast_ln147_63_fu_1185_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_6_fu_788_p1);
    sensitive << ( trunc_ln147_3_fu_784_p1 );

    SC_METHOD(thread_bitcast_ln147_7_fu_793_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_8_fu_802_p1);
    sensitive << ( trunc_ln147_4_fu_798_p1 );

    SC_METHOD(thread_bitcast_ln147_9_fu_807_p1);
    sensitive << ( grp_fu_732_p4 );

    SC_METHOD(thread_bitcast_ln147_fu_746_p1);
    sensitive << ( trunc_ln147_fu_742_p1 );

    SC_METHOD(thread_data_IN_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_data_IN_TREADY);
    sensitive << ( data_IN_TVALID );
    sensitive << ( regslice_both_data_IN_U_ack_in );

    SC_METHOD(thread_data_IN_TREADY_int);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_grp_fu_732_p4);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_10_fu_882_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_11_fu_896_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_12_fu_910_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_13_fu_924_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_14_fu_938_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_15_fu_952_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_16_fu_966_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_17_fu_980_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_18_fu_994_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_19_fu_1008_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_1_fu_756_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_20_fu_1022_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_21_fu_1036_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_22_fu_1050_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_23_fu_1064_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_24_fu_1078_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_25_fu_1092_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_26_fu_1106_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_27_fu_1120_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_28_fu_1134_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_29_fu_1148_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_2_fu_770_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_30_fu_1162_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_31_fu_1176_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_3_fu_784_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_4_fu_798_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_5_fu_812_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_6_fu_826_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_7_fu_840_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_8_fu_854_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_9_fu_868_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_trunc_ln147_fu_742_p1);
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_win_mode_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );

    SC_METHOD(thread_win_mode_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_out_full_n );

    SC_METHOD(thread_win_mode_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_dout );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_win_mode_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_win_mode_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_imag_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_xin_M_imag_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_imag_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( bitcast_ln147_1_fu_751_p1 );
    sensitive << ( bitcast_ln147_3_fu_765_p1 );
    sensitive << ( bitcast_ln147_5_fu_779_p1 );
    sensitive << ( bitcast_ln147_7_fu_793_p1 );
    sensitive << ( bitcast_ln147_9_fu_807_p1 );
    sensitive << ( bitcast_ln147_11_fu_821_p1 );
    sensitive << ( bitcast_ln147_13_fu_835_p1 );
    sensitive << ( bitcast_ln147_15_fu_849_p1 );
    sensitive << ( bitcast_ln147_17_fu_863_p1 );
    sensitive << ( bitcast_ln147_19_fu_877_p1 );
    sensitive << ( bitcast_ln147_21_fu_891_p1 );
    sensitive << ( bitcast_ln147_23_fu_905_p1 );
    sensitive << ( bitcast_ln147_25_fu_919_p1 );
    sensitive << ( bitcast_ln147_27_fu_933_p1 );
    sensitive << ( bitcast_ln147_29_fu_947_p1 );
    sensitive << ( bitcast_ln147_31_fu_961_p1 );
    sensitive << ( bitcast_ln147_33_fu_975_p1 );
    sensitive << ( bitcast_ln147_35_fu_989_p1 );
    sensitive << ( bitcast_ln147_37_fu_1003_p1 );
    sensitive << ( bitcast_ln147_39_fu_1017_p1 );
    sensitive << ( bitcast_ln147_41_fu_1031_p1 );
    sensitive << ( bitcast_ln147_43_fu_1045_p1 );
    sensitive << ( bitcast_ln147_45_fu_1059_p1 );
    sensitive << ( bitcast_ln147_47_fu_1073_p1 );
    sensitive << ( bitcast_ln147_49_fu_1087_p1 );
    sensitive << ( bitcast_ln147_51_fu_1101_p1 );
    sensitive << ( bitcast_ln147_53_fu_1115_p1 );
    sensitive << ( bitcast_ln147_55_fu_1129_p1 );
    sensitive << ( bitcast_ln147_57_fu_1143_p1 );
    sensitive << ( bitcast_ln147_59_fu_1157_p1 );
    sensitive << ( bitcast_ln147_61_fu_1171_p1 );
    sensitive << ( bitcast_ln147_63_fu_1185_p1 );

    SC_METHOD(thread_xin_M_imag_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_real_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_xin_M_real_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_real_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( bitcast_ln147_fu_746_p1 );
    sensitive << ( bitcast_ln147_2_fu_760_p1 );
    sensitive << ( bitcast_ln147_4_fu_774_p1 );
    sensitive << ( bitcast_ln147_6_fu_788_p1 );
    sensitive << ( bitcast_ln147_8_fu_802_p1 );
    sensitive << ( bitcast_ln147_10_fu_816_p1 );
    sensitive << ( bitcast_ln147_12_fu_830_p1 );
    sensitive << ( bitcast_ln147_14_fu_844_p1 );
    sensitive << ( bitcast_ln147_16_fu_858_p1 );
    sensitive << ( bitcast_ln147_18_fu_872_p1 );
    sensitive << ( bitcast_ln147_20_fu_886_p1 );
    sensitive << ( bitcast_ln147_22_fu_900_p1 );
    sensitive << ( bitcast_ln147_24_fu_914_p1 );
    sensitive << ( bitcast_ln147_26_fu_928_p1 );
    sensitive << ( bitcast_ln147_28_fu_942_p1 );
    sensitive << ( bitcast_ln147_30_fu_956_p1 );
    sensitive << ( bitcast_ln147_32_fu_970_p1 );
    sensitive << ( bitcast_ln147_34_fu_984_p1 );
    sensitive << ( bitcast_ln147_36_fu_998_p1 );
    sensitive << ( bitcast_ln147_38_fu_1012_p1 );
    sensitive << ( bitcast_ln147_40_fu_1026_p1 );
    sensitive << ( bitcast_ln147_42_fu_1040_p1 );
    sensitive << ( bitcast_ln147_44_fu_1054_p1 );
    sensitive << ( bitcast_ln147_46_fu_1068_p1 );
    sensitive << ( bitcast_ln147_48_fu_1082_p1 );
    sensitive << ( bitcast_ln147_50_fu_1096_p1 );
    sensitive << ( bitcast_ln147_52_fu_1110_p1 );
    sensitive << ( bitcast_ln147_54_fu_1124_p1 );
    sensitive << ( bitcast_ln147_56_fu_1138_p1 );
    sensitive << ( bitcast_ln147_58_fu_1152_p1 );
    sensitive << ( bitcast_ln147_60_fu_1166_p1 );
    sensitive << ( bitcast_ln147_62_fu_1180_p1 );

    SC_METHOD(thread_xin_M_real_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( win_mode_empty_n );
    sensitive << ( win_mode_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( data_IN_TVALID_int );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_codeRepl124_pr_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_IN_TDATA, "(port)data_IN_TDATA");
    sc_trace(mVcdFile, data_IN_TVALID, "(port)data_IN_TVALID");
    sc_trace(mVcdFile, data_IN_TREADY, "(port)data_IN_TREADY");
    sc_trace(mVcdFile, xin_M_imag_address0, "(port)xin_M_imag_address0");
    sc_trace(mVcdFile, xin_M_imag_ce0, "(port)xin_M_imag_ce0");
    sc_trace(mVcdFile, xin_M_imag_we0, "(port)xin_M_imag_we0");
    sc_trace(mVcdFile, xin_M_imag_d0, "(port)xin_M_imag_d0");
    sc_trace(mVcdFile, xin_M_real_address0, "(port)xin_M_real_address0");
    sc_trace(mVcdFile, xin_M_real_ce0, "(port)xin_M_real_ce0");
    sc_trace(mVcdFile, xin_M_real_we0, "(port)xin_M_real_we0");
    sc_trace(mVcdFile, xin_M_real_d0, "(port)xin_M_real_d0");
    sc_trace(mVcdFile, win_mode_dout, "(port)win_mode_dout");
    sc_trace(mVcdFile, win_mode_empty_n, "(port)win_mode_empty_n");
    sc_trace(mVcdFile, win_mode_read, "(port)win_mode_read");
    sc_trace(mVcdFile, win_mode_out_din, "(port)win_mode_out_din");
    sc_trace(mVcdFile, win_mode_out_full_n, "(port)win_mode_out_full_n");
    sc_trace(mVcdFile, win_mode_out_write, "(port)win_mode_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_IN_TDATA_blk_n, "data_IN_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, win_mode_blk_n, "win_mode_blk_n");
    sc_trace(mVcdFile, win_mode_out_blk_n, "win_mode_out_blk_n");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bitcast_ln147_fu_746_p1, "bitcast_ln147_fu_746_p1");
    sc_trace(mVcdFile, bitcast_ln147_2_fu_760_p1, "bitcast_ln147_2_fu_760_p1");
    sc_trace(mVcdFile, bitcast_ln147_4_fu_774_p1, "bitcast_ln147_4_fu_774_p1");
    sc_trace(mVcdFile, bitcast_ln147_6_fu_788_p1, "bitcast_ln147_6_fu_788_p1");
    sc_trace(mVcdFile, bitcast_ln147_8_fu_802_p1, "bitcast_ln147_8_fu_802_p1");
    sc_trace(mVcdFile, bitcast_ln147_10_fu_816_p1, "bitcast_ln147_10_fu_816_p1");
    sc_trace(mVcdFile, bitcast_ln147_12_fu_830_p1, "bitcast_ln147_12_fu_830_p1");
    sc_trace(mVcdFile, bitcast_ln147_14_fu_844_p1, "bitcast_ln147_14_fu_844_p1");
    sc_trace(mVcdFile, bitcast_ln147_16_fu_858_p1, "bitcast_ln147_16_fu_858_p1");
    sc_trace(mVcdFile, bitcast_ln147_18_fu_872_p1, "bitcast_ln147_18_fu_872_p1");
    sc_trace(mVcdFile, bitcast_ln147_20_fu_886_p1, "bitcast_ln147_20_fu_886_p1");
    sc_trace(mVcdFile, bitcast_ln147_22_fu_900_p1, "bitcast_ln147_22_fu_900_p1");
    sc_trace(mVcdFile, bitcast_ln147_24_fu_914_p1, "bitcast_ln147_24_fu_914_p1");
    sc_trace(mVcdFile, bitcast_ln147_26_fu_928_p1, "bitcast_ln147_26_fu_928_p1");
    sc_trace(mVcdFile, bitcast_ln147_28_fu_942_p1, "bitcast_ln147_28_fu_942_p1");
    sc_trace(mVcdFile, bitcast_ln147_30_fu_956_p1, "bitcast_ln147_30_fu_956_p1");
    sc_trace(mVcdFile, bitcast_ln147_32_fu_970_p1, "bitcast_ln147_32_fu_970_p1");
    sc_trace(mVcdFile, bitcast_ln147_34_fu_984_p1, "bitcast_ln147_34_fu_984_p1");
    sc_trace(mVcdFile, bitcast_ln147_36_fu_998_p1, "bitcast_ln147_36_fu_998_p1");
    sc_trace(mVcdFile, bitcast_ln147_38_fu_1012_p1, "bitcast_ln147_38_fu_1012_p1");
    sc_trace(mVcdFile, bitcast_ln147_40_fu_1026_p1, "bitcast_ln147_40_fu_1026_p1");
    sc_trace(mVcdFile, bitcast_ln147_42_fu_1040_p1, "bitcast_ln147_42_fu_1040_p1");
    sc_trace(mVcdFile, bitcast_ln147_44_fu_1054_p1, "bitcast_ln147_44_fu_1054_p1");
    sc_trace(mVcdFile, bitcast_ln147_46_fu_1068_p1, "bitcast_ln147_46_fu_1068_p1");
    sc_trace(mVcdFile, bitcast_ln147_48_fu_1082_p1, "bitcast_ln147_48_fu_1082_p1");
    sc_trace(mVcdFile, bitcast_ln147_50_fu_1096_p1, "bitcast_ln147_50_fu_1096_p1");
    sc_trace(mVcdFile, bitcast_ln147_52_fu_1110_p1, "bitcast_ln147_52_fu_1110_p1");
    sc_trace(mVcdFile, bitcast_ln147_54_fu_1124_p1, "bitcast_ln147_54_fu_1124_p1");
    sc_trace(mVcdFile, bitcast_ln147_56_fu_1138_p1, "bitcast_ln147_56_fu_1138_p1");
    sc_trace(mVcdFile, bitcast_ln147_58_fu_1152_p1, "bitcast_ln147_58_fu_1152_p1");
    sc_trace(mVcdFile, bitcast_ln147_60_fu_1166_p1, "bitcast_ln147_60_fu_1166_p1");
    sc_trace(mVcdFile, bitcast_ln147_62_fu_1180_p1, "bitcast_ln147_62_fu_1180_p1");
    sc_trace(mVcdFile, bitcast_ln147_1_fu_751_p1, "bitcast_ln147_1_fu_751_p1");
    sc_trace(mVcdFile, bitcast_ln147_3_fu_765_p1, "bitcast_ln147_3_fu_765_p1");
    sc_trace(mVcdFile, bitcast_ln147_5_fu_779_p1, "bitcast_ln147_5_fu_779_p1");
    sc_trace(mVcdFile, bitcast_ln147_7_fu_793_p1, "bitcast_ln147_7_fu_793_p1");
    sc_trace(mVcdFile, bitcast_ln147_9_fu_807_p1, "bitcast_ln147_9_fu_807_p1");
    sc_trace(mVcdFile, bitcast_ln147_11_fu_821_p1, "bitcast_ln147_11_fu_821_p1");
    sc_trace(mVcdFile, bitcast_ln147_13_fu_835_p1, "bitcast_ln147_13_fu_835_p1");
    sc_trace(mVcdFile, bitcast_ln147_15_fu_849_p1, "bitcast_ln147_15_fu_849_p1");
    sc_trace(mVcdFile, bitcast_ln147_17_fu_863_p1, "bitcast_ln147_17_fu_863_p1");
    sc_trace(mVcdFile, bitcast_ln147_19_fu_877_p1, "bitcast_ln147_19_fu_877_p1");
    sc_trace(mVcdFile, bitcast_ln147_21_fu_891_p1, "bitcast_ln147_21_fu_891_p1");
    sc_trace(mVcdFile, bitcast_ln147_23_fu_905_p1, "bitcast_ln147_23_fu_905_p1");
    sc_trace(mVcdFile, bitcast_ln147_25_fu_919_p1, "bitcast_ln147_25_fu_919_p1");
    sc_trace(mVcdFile, bitcast_ln147_27_fu_933_p1, "bitcast_ln147_27_fu_933_p1");
    sc_trace(mVcdFile, bitcast_ln147_29_fu_947_p1, "bitcast_ln147_29_fu_947_p1");
    sc_trace(mVcdFile, bitcast_ln147_31_fu_961_p1, "bitcast_ln147_31_fu_961_p1");
    sc_trace(mVcdFile, bitcast_ln147_33_fu_975_p1, "bitcast_ln147_33_fu_975_p1");
    sc_trace(mVcdFile, bitcast_ln147_35_fu_989_p1, "bitcast_ln147_35_fu_989_p1");
    sc_trace(mVcdFile, bitcast_ln147_37_fu_1003_p1, "bitcast_ln147_37_fu_1003_p1");
    sc_trace(mVcdFile, bitcast_ln147_39_fu_1017_p1, "bitcast_ln147_39_fu_1017_p1");
    sc_trace(mVcdFile, bitcast_ln147_41_fu_1031_p1, "bitcast_ln147_41_fu_1031_p1");
    sc_trace(mVcdFile, bitcast_ln147_43_fu_1045_p1, "bitcast_ln147_43_fu_1045_p1");
    sc_trace(mVcdFile, bitcast_ln147_45_fu_1059_p1, "bitcast_ln147_45_fu_1059_p1");
    sc_trace(mVcdFile, bitcast_ln147_47_fu_1073_p1, "bitcast_ln147_47_fu_1073_p1");
    sc_trace(mVcdFile, bitcast_ln147_49_fu_1087_p1, "bitcast_ln147_49_fu_1087_p1");
    sc_trace(mVcdFile, bitcast_ln147_51_fu_1101_p1, "bitcast_ln147_51_fu_1101_p1");
    sc_trace(mVcdFile, bitcast_ln147_53_fu_1115_p1, "bitcast_ln147_53_fu_1115_p1");
    sc_trace(mVcdFile, bitcast_ln147_55_fu_1129_p1, "bitcast_ln147_55_fu_1129_p1");
    sc_trace(mVcdFile, bitcast_ln147_57_fu_1143_p1, "bitcast_ln147_57_fu_1143_p1");
    sc_trace(mVcdFile, bitcast_ln147_59_fu_1157_p1, "bitcast_ln147_59_fu_1157_p1");
    sc_trace(mVcdFile, bitcast_ln147_61_fu_1171_p1, "bitcast_ln147_61_fu_1171_p1");
    sc_trace(mVcdFile, bitcast_ln147_63_fu_1185_p1, "bitcast_ln147_63_fu_1185_p1");
    sc_trace(mVcdFile, trunc_ln147_fu_742_p1, "trunc_ln147_fu_742_p1");
    sc_trace(mVcdFile, grp_fu_732_p4, "grp_fu_732_p4");
    sc_trace(mVcdFile, trunc_ln147_1_fu_756_p1, "trunc_ln147_1_fu_756_p1");
    sc_trace(mVcdFile, trunc_ln147_2_fu_770_p1, "trunc_ln147_2_fu_770_p1");
    sc_trace(mVcdFile, trunc_ln147_3_fu_784_p1, "trunc_ln147_3_fu_784_p1");
    sc_trace(mVcdFile, trunc_ln147_4_fu_798_p1, "trunc_ln147_4_fu_798_p1");
    sc_trace(mVcdFile, trunc_ln147_5_fu_812_p1, "trunc_ln147_5_fu_812_p1");
    sc_trace(mVcdFile, trunc_ln147_6_fu_826_p1, "trunc_ln147_6_fu_826_p1");
    sc_trace(mVcdFile, trunc_ln147_7_fu_840_p1, "trunc_ln147_7_fu_840_p1");
    sc_trace(mVcdFile, trunc_ln147_8_fu_854_p1, "trunc_ln147_8_fu_854_p1");
    sc_trace(mVcdFile, trunc_ln147_9_fu_868_p1, "trunc_ln147_9_fu_868_p1");
    sc_trace(mVcdFile, trunc_ln147_10_fu_882_p1, "trunc_ln147_10_fu_882_p1");
    sc_trace(mVcdFile, trunc_ln147_11_fu_896_p1, "trunc_ln147_11_fu_896_p1");
    sc_trace(mVcdFile, trunc_ln147_12_fu_910_p1, "trunc_ln147_12_fu_910_p1");
    sc_trace(mVcdFile, trunc_ln147_13_fu_924_p1, "trunc_ln147_13_fu_924_p1");
    sc_trace(mVcdFile, trunc_ln147_14_fu_938_p1, "trunc_ln147_14_fu_938_p1");
    sc_trace(mVcdFile, trunc_ln147_15_fu_952_p1, "trunc_ln147_15_fu_952_p1");
    sc_trace(mVcdFile, trunc_ln147_16_fu_966_p1, "trunc_ln147_16_fu_966_p1");
    sc_trace(mVcdFile, trunc_ln147_17_fu_980_p1, "trunc_ln147_17_fu_980_p1");
    sc_trace(mVcdFile, trunc_ln147_18_fu_994_p1, "trunc_ln147_18_fu_994_p1");
    sc_trace(mVcdFile, trunc_ln147_19_fu_1008_p1, "trunc_ln147_19_fu_1008_p1");
    sc_trace(mVcdFile, trunc_ln147_20_fu_1022_p1, "trunc_ln147_20_fu_1022_p1");
    sc_trace(mVcdFile, trunc_ln147_21_fu_1036_p1, "trunc_ln147_21_fu_1036_p1");
    sc_trace(mVcdFile, trunc_ln147_22_fu_1050_p1, "trunc_ln147_22_fu_1050_p1");
    sc_trace(mVcdFile, trunc_ln147_23_fu_1064_p1, "trunc_ln147_23_fu_1064_p1");
    sc_trace(mVcdFile, trunc_ln147_24_fu_1078_p1, "trunc_ln147_24_fu_1078_p1");
    sc_trace(mVcdFile, trunc_ln147_25_fu_1092_p1, "trunc_ln147_25_fu_1092_p1");
    sc_trace(mVcdFile, trunc_ln147_26_fu_1106_p1, "trunc_ln147_26_fu_1106_p1");
    sc_trace(mVcdFile, trunc_ln147_27_fu_1120_p1, "trunc_ln147_27_fu_1120_p1");
    sc_trace(mVcdFile, trunc_ln147_28_fu_1134_p1, "trunc_ln147_28_fu_1134_p1");
    sc_trace(mVcdFile, trunc_ln147_29_fu_1148_p1, "trunc_ln147_29_fu_1148_p1");
    sc_trace(mVcdFile, trunc_ln147_30_fu_1162_p1, "trunc_ln147_30_fu_1162_p1");
    sc_trace(mVcdFile, trunc_ln147_31_fu_1176_p1, "trunc_ln147_31_fu_1176_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_data_IN_U_apdone_blk, "regslice_both_data_IN_U_apdone_blk");
    sc_trace(mVcdFile, data_IN_TDATA_int, "data_IN_TDATA_int");
    sc_trace(mVcdFile, data_IN_TVALID_int, "data_IN_TVALID_int");
    sc_trace(mVcdFile, data_IN_TREADY_int, "data_IN_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_IN_U_ack_in, "regslice_both_data_IN_U_ack_in");
#endif

    }
}

Block_codeRepl124_pr::~Block_codeRepl124_pr() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_data_IN_U;
}

void Block_codeRepl124_pr::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                    esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Block_codeRepl124_pr::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Block_codeRepl124_pr::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()));
}

void Block_codeRepl124_pr::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_codeRepl124_pr::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_bitcast_ln147_10_fu_816_p1() {
    bitcast_ln147_10_fu_816_p1 = trunc_ln147_5_fu_812_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_11_fu_821_p1() {
    bitcast_ln147_11_fu_821_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_12_fu_830_p1() {
    bitcast_ln147_12_fu_830_p1 = trunc_ln147_6_fu_826_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_13_fu_835_p1() {
    bitcast_ln147_13_fu_835_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_14_fu_844_p1() {
    bitcast_ln147_14_fu_844_p1 = trunc_ln147_7_fu_840_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_15_fu_849_p1() {
    bitcast_ln147_15_fu_849_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_16_fu_858_p1() {
    bitcast_ln147_16_fu_858_p1 = trunc_ln147_8_fu_854_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_17_fu_863_p1() {
    bitcast_ln147_17_fu_863_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_18_fu_872_p1() {
    bitcast_ln147_18_fu_872_p1 = trunc_ln147_9_fu_868_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_19_fu_877_p1() {
    bitcast_ln147_19_fu_877_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_1_fu_751_p1() {
    bitcast_ln147_1_fu_751_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_20_fu_886_p1() {
    bitcast_ln147_20_fu_886_p1 = trunc_ln147_10_fu_882_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_21_fu_891_p1() {
    bitcast_ln147_21_fu_891_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_22_fu_900_p1() {
    bitcast_ln147_22_fu_900_p1 = trunc_ln147_11_fu_896_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_23_fu_905_p1() {
    bitcast_ln147_23_fu_905_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_24_fu_914_p1() {
    bitcast_ln147_24_fu_914_p1 = trunc_ln147_12_fu_910_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_25_fu_919_p1() {
    bitcast_ln147_25_fu_919_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_26_fu_928_p1() {
    bitcast_ln147_26_fu_928_p1 = trunc_ln147_13_fu_924_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_27_fu_933_p1() {
    bitcast_ln147_27_fu_933_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_28_fu_942_p1() {
    bitcast_ln147_28_fu_942_p1 = trunc_ln147_14_fu_938_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_29_fu_947_p1() {
    bitcast_ln147_29_fu_947_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_2_fu_760_p1() {
    bitcast_ln147_2_fu_760_p1 = trunc_ln147_1_fu_756_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_30_fu_956_p1() {
    bitcast_ln147_30_fu_956_p1 = trunc_ln147_15_fu_952_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_31_fu_961_p1() {
    bitcast_ln147_31_fu_961_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_32_fu_970_p1() {
    bitcast_ln147_32_fu_970_p1 = trunc_ln147_16_fu_966_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_33_fu_975_p1() {
    bitcast_ln147_33_fu_975_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_34_fu_984_p1() {
    bitcast_ln147_34_fu_984_p1 = trunc_ln147_17_fu_980_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_35_fu_989_p1() {
    bitcast_ln147_35_fu_989_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_36_fu_998_p1() {
    bitcast_ln147_36_fu_998_p1 = trunc_ln147_18_fu_994_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_37_fu_1003_p1() {
    bitcast_ln147_37_fu_1003_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_38_fu_1012_p1() {
    bitcast_ln147_38_fu_1012_p1 = trunc_ln147_19_fu_1008_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_39_fu_1017_p1() {
    bitcast_ln147_39_fu_1017_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_3_fu_765_p1() {
    bitcast_ln147_3_fu_765_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_40_fu_1026_p1() {
    bitcast_ln147_40_fu_1026_p1 = trunc_ln147_20_fu_1022_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_41_fu_1031_p1() {
    bitcast_ln147_41_fu_1031_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_42_fu_1040_p1() {
    bitcast_ln147_42_fu_1040_p1 = trunc_ln147_21_fu_1036_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_43_fu_1045_p1() {
    bitcast_ln147_43_fu_1045_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_44_fu_1054_p1() {
    bitcast_ln147_44_fu_1054_p1 = trunc_ln147_22_fu_1050_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_45_fu_1059_p1() {
    bitcast_ln147_45_fu_1059_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_46_fu_1068_p1() {
    bitcast_ln147_46_fu_1068_p1 = trunc_ln147_23_fu_1064_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_47_fu_1073_p1() {
    bitcast_ln147_47_fu_1073_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_48_fu_1082_p1() {
    bitcast_ln147_48_fu_1082_p1 = trunc_ln147_24_fu_1078_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_49_fu_1087_p1() {
    bitcast_ln147_49_fu_1087_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_4_fu_774_p1() {
    bitcast_ln147_4_fu_774_p1 = trunc_ln147_2_fu_770_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_50_fu_1096_p1() {
    bitcast_ln147_50_fu_1096_p1 = trunc_ln147_25_fu_1092_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_51_fu_1101_p1() {
    bitcast_ln147_51_fu_1101_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_52_fu_1110_p1() {
    bitcast_ln147_52_fu_1110_p1 = trunc_ln147_26_fu_1106_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_53_fu_1115_p1() {
    bitcast_ln147_53_fu_1115_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_54_fu_1124_p1() {
    bitcast_ln147_54_fu_1124_p1 = trunc_ln147_27_fu_1120_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_55_fu_1129_p1() {
    bitcast_ln147_55_fu_1129_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_56_fu_1138_p1() {
    bitcast_ln147_56_fu_1138_p1 = trunc_ln147_28_fu_1134_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_57_fu_1143_p1() {
    bitcast_ln147_57_fu_1143_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_58_fu_1152_p1() {
    bitcast_ln147_58_fu_1152_p1 = trunc_ln147_29_fu_1148_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_59_fu_1157_p1() {
    bitcast_ln147_59_fu_1157_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_5_fu_779_p1() {
    bitcast_ln147_5_fu_779_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_60_fu_1166_p1() {
    bitcast_ln147_60_fu_1166_p1 = trunc_ln147_30_fu_1162_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_61_fu_1171_p1() {
    bitcast_ln147_61_fu_1171_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_62_fu_1180_p1() {
    bitcast_ln147_62_fu_1180_p1 = trunc_ln147_31_fu_1176_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_63_fu_1185_p1() {
    bitcast_ln147_63_fu_1185_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_6_fu_788_p1() {
    bitcast_ln147_6_fu_788_p1 = trunc_ln147_3_fu_784_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_7_fu_793_p1() {
    bitcast_ln147_7_fu_793_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_8_fu_802_p1() {
    bitcast_ln147_8_fu_802_p1 = trunc_ln147_4_fu_798_p1.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_9_fu_807_p1() {
    bitcast_ln147_9_fu_807_p1 = grp_fu_732_p4.read();
}

void Block_codeRepl124_pr::thread_bitcast_ln147_fu_746_p1() {
    bitcast_ln147_fu_746_p1 = trunc_ln147_fu_742_p1.read();
}

void Block_codeRepl124_pr::thread_data_IN_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_IN_TDATA_blk_n = data_IN_TVALID_int.read();
    } else {
        data_IN_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl124_pr::thread_data_IN_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_IN_U_ack_in.read()))) {
        data_IN_TREADY = ap_const_logic_1;
    } else {
        data_IN_TREADY = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_data_IN_TREADY_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)))) {
        data_IN_TREADY_int = ap_const_logic_1;
    } else {
        data_IN_TREADY_int = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_grp_fu_732_p4() {
    grp_fu_732_p4 = data_IN_TDATA_int.read().range(63, 32);
}

void Block_codeRepl124_pr::thread_trunc_ln147_10_fu_882_p1() {
    trunc_ln147_10_fu_882_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_11_fu_896_p1() {
    trunc_ln147_11_fu_896_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_12_fu_910_p1() {
    trunc_ln147_12_fu_910_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_13_fu_924_p1() {
    trunc_ln147_13_fu_924_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_14_fu_938_p1() {
    trunc_ln147_14_fu_938_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_15_fu_952_p1() {
    trunc_ln147_15_fu_952_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_16_fu_966_p1() {
    trunc_ln147_16_fu_966_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_17_fu_980_p1() {
    trunc_ln147_17_fu_980_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_18_fu_994_p1() {
    trunc_ln147_18_fu_994_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_19_fu_1008_p1() {
    trunc_ln147_19_fu_1008_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_1_fu_756_p1() {
    trunc_ln147_1_fu_756_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_20_fu_1022_p1() {
    trunc_ln147_20_fu_1022_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_21_fu_1036_p1() {
    trunc_ln147_21_fu_1036_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_22_fu_1050_p1() {
    trunc_ln147_22_fu_1050_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_23_fu_1064_p1() {
    trunc_ln147_23_fu_1064_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_24_fu_1078_p1() {
    trunc_ln147_24_fu_1078_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_25_fu_1092_p1() {
    trunc_ln147_25_fu_1092_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_26_fu_1106_p1() {
    trunc_ln147_26_fu_1106_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_27_fu_1120_p1() {
    trunc_ln147_27_fu_1120_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_28_fu_1134_p1() {
    trunc_ln147_28_fu_1134_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_29_fu_1148_p1() {
    trunc_ln147_29_fu_1148_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_2_fu_770_p1() {
    trunc_ln147_2_fu_770_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_30_fu_1162_p1() {
    trunc_ln147_30_fu_1162_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_31_fu_1176_p1() {
    trunc_ln147_31_fu_1176_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_3_fu_784_p1() {
    trunc_ln147_3_fu_784_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_4_fu_798_p1() {
    trunc_ln147_4_fu_798_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_5_fu_812_p1() {
    trunc_ln147_5_fu_812_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_6_fu_826_p1() {
    trunc_ln147_6_fu_826_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_7_fu_840_p1() {
    trunc_ln147_7_fu_840_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_8_fu_854_p1() {
    trunc_ln147_8_fu_854_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_9_fu_868_p1() {
    trunc_ln147_9_fu_868_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_trunc_ln147_fu_742_p1() {
    trunc_ln147_fu_742_p1 = data_IN_TDATA_int.read().range(32-1, 0);
}

void Block_codeRepl124_pr::thread_win_mode_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        win_mode_blk_n = win_mode_empty_n.read();
    } else {
        win_mode_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl124_pr::thread_win_mode_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        win_mode_out_blk_n = win_mode_out_full_n.read();
    } else {
        win_mode_out_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl124_pr::thread_win_mode_out_din() {
    win_mode_out_din = win_mode_dout.read();
}

void Block_codeRepl124_pr::thread_win_mode_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        win_mode_out_write = ap_const_logic_1;
    } else {
        win_mode_out_write = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_win_mode_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        win_mode_read = ap_const_logic_1;
    } else {
        win_mode_read = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_xin_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        xin_M_imag_address0 = "XXXXX";
    }
}

void Block_codeRepl124_pr::thread_xin_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)))) {
        xin_M_imag_ce0 = ap_const_logic_1;
    } else {
        xin_M_imag_ce0 = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_xin_M_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_imag_d0 = bitcast_ln147_63_fu_1185_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_imag_d0 = bitcast_ln147_61_fu_1171_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_imag_d0 = bitcast_ln147_59_fu_1157_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_imag_d0 = bitcast_ln147_57_fu_1143_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_imag_d0 = bitcast_ln147_55_fu_1129_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_imag_d0 = bitcast_ln147_53_fu_1115_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_imag_d0 = bitcast_ln147_51_fu_1101_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_imag_d0 = bitcast_ln147_49_fu_1087_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_imag_d0 = bitcast_ln147_47_fu_1073_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_imag_d0 = bitcast_ln147_45_fu_1059_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_imag_d0 = bitcast_ln147_43_fu_1045_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_imag_d0 = bitcast_ln147_41_fu_1031_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_imag_d0 = bitcast_ln147_39_fu_1017_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_imag_d0 = bitcast_ln147_37_fu_1003_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_imag_d0 = bitcast_ln147_35_fu_989_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_imag_d0 = bitcast_ln147_33_fu_975_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_imag_d0 = bitcast_ln147_31_fu_961_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_imag_d0 = bitcast_ln147_29_fu_947_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_imag_d0 = bitcast_ln147_27_fu_933_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_imag_d0 = bitcast_ln147_25_fu_919_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_imag_d0 = bitcast_ln147_23_fu_905_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_imag_d0 = bitcast_ln147_21_fu_891_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_imag_d0 = bitcast_ln147_19_fu_877_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_imag_d0 = bitcast_ln147_17_fu_863_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_imag_d0 = bitcast_ln147_15_fu_849_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_imag_d0 = bitcast_ln147_13_fu_835_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_imag_d0 = bitcast_ln147_11_fu_821_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_imag_d0 = bitcast_ln147_9_fu_807_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_imag_d0 = bitcast_ln147_7_fu_793_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_d0 = bitcast_ln147_5_fu_779_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_imag_d0 = bitcast_ln147_3_fu_765_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        xin_M_imag_d0 = bitcast_ln147_1_fu_751_p1.read();
    } else {
        xin_M_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Block_codeRepl124_pr::thread_xin_M_imag_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)))) {
        xin_M_imag_we0 = ap_const_logic_1;
    } else {
        xin_M_imag_we0 = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_xin_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        xin_M_real_address0 = "XXXXX";
    }
}

void Block_codeRepl124_pr::thread_xin_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)))) {
        xin_M_real_ce0 = ap_const_logic_1;
    } else {
        xin_M_real_ce0 = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_xin_M_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_real_d0 = bitcast_ln147_62_fu_1180_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_real_d0 = bitcast_ln147_60_fu_1166_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_real_d0 = bitcast_ln147_58_fu_1152_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_real_d0 = bitcast_ln147_56_fu_1138_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_real_d0 = bitcast_ln147_54_fu_1124_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_real_d0 = bitcast_ln147_52_fu_1110_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_real_d0 = bitcast_ln147_50_fu_1096_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_real_d0 = bitcast_ln147_48_fu_1082_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_real_d0 = bitcast_ln147_46_fu_1068_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_real_d0 = bitcast_ln147_44_fu_1054_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_real_d0 = bitcast_ln147_42_fu_1040_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_real_d0 = bitcast_ln147_40_fu_1026_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_real_d0 = bitcast_ln147_38_fu_1012_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_real_d0 = bitcast_ln147_36_fu_998_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_real_d0 = bitcast_ln147_34_fu_984_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_real_d0 = bitcast_ln147_32_fu_970_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_real_d0 = bitcast_ln147_30_fu_956_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_real_d0 = bitcast_ln147_28_fu_942_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_real_d0 = bitcast_ln147_26_fu_928_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_real_d0 = bitcast_ln147_24_fu_914_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_real_d0 = bitcast_ln147_22_fu_900_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_real_d0 = bitcast_ln147_20_fu_886_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_real_d0 = bitcast_ln147_18_fu_872_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_real_d0 = bitcast_ln147_16_fu_858_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_real_d0 = bitcast_ln147_14_fu_844_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_real_d0 = bitcast_ln147_12_fu_830_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_real_d0 = bitcast_ln147_10_fu_816_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_real_d0 = bitcast_ln147_8_fu_802_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_real_d0 = bitcast_ln147_6_fu_788_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_d0 = bitcast_ln147_4_fu_774_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_real_d0 = bitcast_ln147_2_fu_760_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        xin_M_real_d0 = bitcast_ln147_fu_746_p1.read();
    } else {
        xin_M_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Block_codeRepl124_pr::thread_xin_M_real_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1)))) {
        xin_M_real_we0 = ap_const_logic_1;
    } else {
        xin_M_real_we0 = ap_const_logic_0;
    }
}

void Block_codeRepl124_pr::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, win_mode_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(data_IN_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

