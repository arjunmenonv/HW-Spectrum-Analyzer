// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<81> FFT::ap_ST_fsm_state1 = "1";
const sc_lv<81> FFT::ap_ST_fsm_state2 = "10";
const sc_lv<81> FFT::ap_ST_fsm_state3 = "100";
const sc_lv<81> FFT::ap_ST_fsm_state4 = "1000";
const sc_lv<81> FFT::ap_ST_fsm_state5 = "10000";
const sc_lv<81> FFT::ap_ST_fsm_state6 = "100000";
const sc_lv<81> FFT::ap_ST_fsm_state7 = "1000000";
const sc_lv<81> FFT::ap_ST_fsm_state8 = "10000000";
const sc_lv<81> FFT::ap_ST_fsm_state9 = "100000000";
const sc_lv<81> FFT::ap_ST_fsm_state10 = "1000000000";
const sc_lv<81> FFT::ap_ST_fsm_state11 = "10000000000";
const sc_lv<81> FFT::ap_ST_fsm_state12 = "100000000000";
const sc_lv<81> FFT::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_pp0_stage0 = "100000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state60 = "1000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state61 = "10000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state62 = "100000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state63 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state64 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state65 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state66 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state67 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state68 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state69 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state70 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state71 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state72 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state73 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state74 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state75 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state76 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state77 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state78 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state79 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state80 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state81 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state82 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state83 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state84 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state85 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state86 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state87 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state88 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state89 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state90 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state91 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<81> FFT::ap_ST_fsm_state92 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> FFT::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool FFT::ap_const_boolean_1 = true;
const int FFT::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> FFT::ap_const_lv32_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_3 = "11";
const sc_lv<32> FFT::ap_const_lv32_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_5 = "101";
const sc_lv<32> FFT::ap_const_lv32_6 = "110";
const sc_lv<32> FFT::ap_const_lv32_7 = "111";
const sc_lv<32> FFT::ap_const_lv32_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_9 = "1001";
const sc_lv<32> FFT::ap_const_lv32_A = "1010";
const sc_lv<32> FFT::ap_const_lv32_B = "1011";
const sc_lv<32> FFT::ap_const_lv32_C = "1100";
const sc_lv<32> FFT::ap_const_lv32_D = "1101";
const sc_lv<32> FFT::ap_const_lv32_E = "1110";
const sc_lv<32> FFT::ap_const_lv32_F = "1111";
const sc_lv<32> FFT::ap_const_lv32_10 = "10000";
const sc_lv<32> FFT::ap_const_lv32_11 = "10001";
const sc_lv<32> FFT::ap_const_lv32_12 = "10010";
const sc_lv<32> FFT::ap_const_lv32_13 = "10011";
const sc_lv<32> FFT::ap_const_lv32_14 = "10100";
const sc_lv<32> FFT::ap_const_lv32_15 = "10101";
const sc_lv<32> FFT::ap_const_lv32_16 = "10110";
const sc_lv<32> FFT::ap_const_lv32_17 = "10111";
const sc_lv<32> FFT::ap_const_lv32_18 = "11000";
const sc_lv<32> FFT::ap_const_lv32_19 = "11001";
const sc_lv<32> FFT::ap_const_lv32_1A = "11010";
const sc_lv<32> FFT::ap_const_lv32_1B = "11011";
const sc_lv<32> FFT::ap_const_lv32_1C = "11100";
const sc_lv<32> FFT::ap_const_lv32_1D = "11101";
const sc_lv<32> FFT::ap_const_lv32_1E = "11110";
const sc_lv<32> FFT::ap_const_lv32_1F = "11111";
const sc_lv<32> FFT::ap_const_lv32_21 = "100001";
const sc_lv<32> FFT::ap_const_lv32_2F = "101111";
const bool FFT::ap_const_boolean_0 = false;
const sc_lv<1> FFT::ap_const_lv1_0 = "0";
const sc_lv<32> FFT::ap_const_lv32_2E = "101110";
const sc_lv<1> FFT::ap_const_lv1_1 = "1";
const sc_lv<6> FFT::ap_const_lv6_0 = "000000";
const sc_lv<32> FFT::ap_const_lv32_22 = "100010";
const sc_lv<32> FFT::ap_const_lv32_25 = "100101";
const sc_lv<32> FFT::ap_const_lv32_27 = "100111";
const sc_lv<32> FFT::ap_const_lv32_29 = "101001";
const sc_lv<32> FFT::ap_const_lv32_2B = "101011";
const sc_lv<32> FFT::ap_const_lv32_2D = "101101";
const sc_lv<6> FFT::ap_const_lv6_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_26 = "100110";
const sc_lv<6> FFT::ap_const_lv6_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_28 = "101000";
const sc_lv<6> FFT::ap_const_lv6_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_2A = "101010";
const sc_lv<6> FFT::ap_const_lv6_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_2C = "101100";
const sc_lv<6> FFT::ap_const_lv6_10 = "10000";
const sc_lv<4> FFT::ap_const_lv4_4 = "100";
const sc_lv<4> FFT::ap_const_lv4_3 = "11";
const sc_lv<4> FFT::ap_const_lv4_2 = "10";
const sc_lv<4> FFT::ap_const_lv4_1 = "1";
const sc_lv<4> FFT::ap_const_lv4_0 = "0000";
const sc_lv<4> FFT::ap_const_lv4_5 = "101";
const sc_lv<32> FFT::ap_const_lv32_23 = "100011";
const sc_lv<32> FFT::ap_const_lv32_24 = "100100";
const sc_lv<64> FFT::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> FFT::ap_const_lv64_1 = "1";
const sc_lv<64> FFT::ap_const_lv64_2 = "10";
const sc_lv<64> FFT::ap_const_lv64_3 = "11";
const sc_lv<64> FFT::ap_const_lv64_4 = "100";
const sc_lv<64> FFT::ap_const_lv64_5 = "101";
const sc_lv<64> FFT::ap_const_lv64_6 = "110";
const sc_lv<64> FFT::ap_const_lv64_7 = "111";
const sc_lv<64> FFT::ap_const_lv64_8 = "1000";
const sc_lv<64> FFT::ap_const_lv64_9 = "1001";
const sc_lv<64> FFT::ap_const_lv64_A = "1010";
const sc_lv<64> FFT::ap_const_lv64_B = "1011";
const sc_lv<64> FFT::ap_const_lv64_C = "1100";
const sc_lv<64> FFT::ap_const_lv64_D = "1101";
const sc_lv<64> FFT::ap_const_lv64_E = "1110";
const sc_lv<64> FFT::ap_const_lv64_F = "1111";
const sc_lv<64> FFT::ap_const_lv64_10 = "10000";
const sc_lv<64> FFT::ap_const_lv64_11 = "10001";
const sc_lv<64> FFT::ap_const_lv64_12 = "10010";
const sc_lv<64> FFT::ap_const_lv64_13 = "10011";
const sc_lv<64> FFT::ap_const_lv64_14 = "10100";
const sc_lv<64> FFT::ap_const_lv64_15 = "10101";
const sc_lv<64> FFT::ap_const_lv64_16 = "10110";
const sc_lv<64> FFT::ap_const_lv64_17 = "10111";
const sc_lv<64> FFT::ap_const_lv64_18 = "11000";
const sc_lv<64> FFT::ap_const_lv64_19 = "11001";
const sc_lv<64> FFT::ap_const_lv64_1A = "11010";
const sc_lv<64> FFT::ap_const_lv64_1B = "11011";
const sc_lv<64> FFT::ap_const_lv64_1C = "11100";
const sc_lv<64> FFT::ap_const_lv64_1D = "11101";
const sc_lv<64> FFT::ap_const_lv64_1E = "11110";
const sc_lv<64> FFT::ap_const_lv64_1F = "11111";
const sc_lv<32> FFT::ap_const_lv32_31 = "110001";
const sc_lv<32> FFT::ap_const_lv32_32 = "110010";
const sc_lv<32> FFT::ap_const_lv32_33 = "110011";
const sc_lv<32> FFT::ap_const_lv32_34 = "110100";
const sc_lv<32> FFT::ap_const_lv32_35 = "110101";
const sc_lv<32> FFT::ap_const_lv32_36 = "110110";
const sc_lv<32> FFT::ap_const_lv32_37 = "110111";
const sc_lv<32> FFT::ap_const_lv32_38 = "111000";
const sc_lv<32> FFT::ap_const_lv32_39 = "111001";
const sc_lv<32> FFT::ap_const_lv32_3A = "111010";
const sc_lv<32> FFT::ap_const_lv32_3B = "111011";
const sc_lv<32> FFT::ap_const_lv32_3C = "111100";
const sc_lv<32> FFT::ap_const_lv32_3D = "111101";
const sc_lv<32> FFT::ap_const_lv32_3E = "111110";
const sc_lv<32> FFT::ap_const_lv32_3F = "111111";
const sc_lv<32> FFT::ap_const_lv32_40 = "1000000";
const sc_lv<32> FFT::ap_const_lv32_41 = "1000001";
const sc_lv<32> FFT::ap_const_lv32_42 = "1000010";
const sc_lv<32> FFT::ap_const_lv32_43 = "1000011";
const sc_lv<32> FFT::ap_const_lv32_44 = "1000100";
const sc_lv<32> FFT::ap_const_lv32_45 = "1000101";
const sc_lv<32> FFT::ap_const_lv32_46 = "1000110";
const sc_lv<32> FFT::ap_const_lv32_47 = "1000111";
const sc_lv<32> FFT::ap_const_lv32_48 = "1001000";
const sc_lv<32> FFT::ap_const_lv32_49 = "1001001";
const sc_lv<32> FFT::ap_const_lv32_4A = "1001010";
const sc_lv<32> FFT::ap_const_lv32_4B = "1001011";
const sc_lv<32> FFT::ap_const_lv32_4C = "1001100";
const sc_lv<32> FFT::ap_const_lv32_4D = "1001101";
const sc_lv<32> FFT::ap_const_lv32_4E = "1001110";
const sc_lv<32> FFT::ap_const_lv32_4F = "1001111";
const sc_lv<32> FFT::ap_const_lv32_50 = "1010000";
const sc_lv<5> FFT::ap_const_lv5_0 = "00000";
const sc_lv<5> FFT::ap_const_lv5_1 = "1";
const sc_lv<5> FFT::ap_const_lv5_2 = "10";
const sc_lv<5> FFT::ap_const_lv5_3 = "11";
const sc_lv<5> FFT::ap_const_lv5_4 = "100";
const sc_lv<5> FFT::ap_const_lv5_5 = "101";
const sc_lv<5> FFT::ap_const_lv5_6 = "110";
const sc_lv<5> FFT::ap_const_lv5_7 = "111";
const sc_lv<5> FFT::ap_const_lv5_8 = "1000";
const sc_lv<5> FFT::ap_const_lv5_9 = "1001";
const sc_lv<5> FFT::ap_const_lv5_A = "1010";
const sc_lv<5> FFT::ap_const_lv5_B = "1011";
const sc_lv<5> FFT::ap_const_lv5_C = "1100";
const sc_lv<5> FFT::ap_const_lv5_D = "1101";
const sc_lv<5> FFT::ap_const_lv5_E = "1110";
const sc_lv<5> FFT::ap_const_lv5_F = "1111";
const sc_lv<5> FFT::ap_const_lv5_10 = "10000";
const sc_lv<5> FFT::ap_const_lv5_11 = "10001";
const sc_lv<5> FFT::ap_const_lv5_12 = "10010";
const sc_lv<5> FFT::ap_const_lv5_13 = "10011";
const sc_lv<5> FFT::ap_const_lv5_14 = "10100";
const sc_lv<5> FFT::ap_const_lv5_15 = "10101";
const sc_lv<5> FFT::ap_const_lv5_16 = "10110";
const sc_lv<5> FFT::ap_const_lv5_17 = "10111";
const sc_lv<5> FFT::ap_const_lv5_18 = "11000";
const sc_lv<5> FFT::ap_const_lv5_19 = "11001";
const sc_lv<5> FFT::ap_const_lv5_1A = "11010";
const sc_lv<5> FFT::ap_const_lv5_1B = "11011";
const sc_lv<5> FFT::ap_const_lv5_1C = "11100";
const sc_lv<5> FFT::ap_const_lv5_1D = "11101";
const sc_lv<5> FFT::ap_const_lv5_1E = "11110";
const sc_lv<32> FFT::ap_const_lv32_20 = "100000";
const sc_lv<5> FFT::ap_const_lv5_1F = "11111";
const sc_lv<32> FFT::ap_const_lv32_30 = "110000";
const sc_lv<6> FFT::ap_const_lv6_20 = "100000";

FFT::FFT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xin_M_real_U = new FFT_xin_M_real("xin_M_real_U");
    xin_M_real_U->clk(ap_clk);
    xin_M_real_U->reset(ap_rst_n_inv);
    xin_M_real_U->address0(xin_M_real_address0);
    xin_M_real_U->ce0(xin_M_real_ce0);
    xin_M_real_U->we0(xin_M_real_we0);
    xin_M_real_U->d0(data_IN_M_real_q0);
    xin_M_real_U->q0(xin_M_real_q0);
    xin_M_real_U->address1(grp_mult_window_fu_2214_data_IN_M_real_address1);
    xin_M_real_U->ce1(grp_mult_window_fu_2214_data_IN_M_real_ce1);
    xin_M_real_U->q1(xin_M_real_q1);
    xin_M_imag_U = new FFT_xin_M_real("xin_M_imag_U");
    xin_M_imag_U->clk(ap_clk);
    xin_M_imag_U->reset(ap_rst_n_inv);
    xin_M_imag_U->address0(xin_M_imag_address0);
    xin_M_imag_U->ce0(xin_M_imag_ce0);
    xin_M_imag_U->we0(xin_M_imag_we0);
    xin_M_imag_U->d0(data_IN_M_imag_q0);
    xin_M_imag_U->q0(xin_M_imag_q0);
    xin_M_imag_U->address1(grp_mult_window_fu_2214_data_IN_M_imag_address1);
    xin_M_imag_U->ce1(grp_mult_window_fu_2214_data_IN_M_imag_ce1);
    xin_M_imag_U->q1(xin_M_imag_q1);
    prod_IN_M_real_U = new FFT_prod_IN_M_real("prod_IN_M_real_U");
    prod_IN_M_real_U->clk(ap_clk);
    prod_IN_M_real_U->reset(ap_rst_n_inv);
    prod_IN_M_real_U->address0(prod_IN_M_real_address0);
    prod_IN_M_real_U->ce0(prod_IN_M_real_ce0);
    prod_IN_M_real_U->we0(prod_IN_M_real_we0);
    prod_IN_M_real_U->d0(grp_mult_window_fu_2214_prod_IN_M_real_2_d0);
    prod_IN_M_real_U->q0(prod_IN_M_real_q0);
    prod_IN_M_real_U->address1(prod_IN_M_real_address1);
    prod_IN_M_real_U->ce1(prod_IN_M_real_ce1);
    prod_IN_M_real_U->we1(prod_IN_M_real_we1);
    prod_IN_M_real_U->d1(grp_mult_window_fu_2214_prod_IN_M_real_2_d1);
    prod_IN_M_real_U->q1(prod_IN_M_real_q1);
    prod_IN_M_imag_U = new FFT_prod_IN_M_real("prod_IN_M_imag_U");
    prod_IN_M_imag_U->clk(ap_clk);
    prod_IN_M_imag_U->reset(ap_rst_n_inv);
    prod_IN_M_imag_U->address0(prod_IN_M_imag_address0);
    prod_IN_M_imag_U->ce0(prod_IN_M_imag_ce0);
    prod_IN_M_imag_U->we0(prod_IN_M_imag_we0);
    prod_IN_M_imag_U->d0(grp_mult_window_fu_2214_prod_IN_M_imag_2_d0);
    prod_IN_M_imag_U->q0(prod_IN_M_imag_q0);
    prod_IN_M_imag_U->address1(prod_IN_M_imag_address1);
    prod_IN_M_imag_U->ce1(prod_IN_M_imag_ce1);
    prod_IN_M_imag_U->we1(prod_IN_M_imag_we1);
    prod_IN_M_imag_U->d1(grp_mult_window_fu_2214_prod_IN_M_imag_2_d1);
    prod_IN_M_imag_U->q1(prod_IN_M_imag_q1);
    data_OUT0_M_real_U = new FFT_data_OUT0_M_rg8j("data_OUT0_M_real_U");
    data_OUT0_M_real_U->clk(ap_clk);
    data_OUT0_M_real_U->reset(ap_rst_n_inv);
    data_OUT0_M_real_U->address0(data_OUT0_M_real_address0);
    data_OUT0_M_real_U->ce0(data_OUT0_M_real_ce0);
    data_OUT0_M_real_U->we0(data_OUT0_M_real_we0);
    data_OUT0_M_real_U->d0(grp_bitreverse_fu_2290_data_OUT0_M_real_d0);
    data_OUT0_M_real_U->q0(data_OUT0_M_real_q0);
    data_OUT0_M_real_U->address1(grp_bitreverse_fu_2290_data_OUT0_M_real_address1);
    data_OUT0_M_real_U->ce1(data_OUT0_M_real_ce1);
    data_OUT0_M_real_U->we1(data_OUT0_M_real_we1);
    data_OUT0_M_real_U->d1(grp_bitreverse_fu_2290_data_OUT0_M_real_d1);
    data_OUT0_M_imag_U = new FFT_data_OUT0_M_rg8j("data_OUT0_M_imag_U");
    data_OUT0_M_imag_U->clk(ap_clk);
    data_OUT0_M_imag_U->reset(ap_rst_n_inv);
    data_OUT0_M_imag_U->address0(data_OUT0_M_imag_address0);
    data_OUT0_M_imag_U->ce0(data_OUT0_M_imag_ce0);
    data_OUT0_M_imag_U->we0(data_OUT0_M_imag_we0);
    data_OUT0_M_imag_U->d0(grp_bitreverse_fu_2290_data_OUT0_M_imag_d0);
    data_OUT0_M_imag_U->q0(data_OUT0_M_imag_q0);
    data_OUT0_M_imag_U->address1(grp_bitreverse_fu_2290_data_OUT0_M_imag_address1);
    data_OUT0_M_imag_U->ce1(data_OUT0_M_imag_ce1);
    data_OUT0_M_imag_U->we1(data_OUT0_M_imag_we1);
    data_OUT0_M_imag_U->d1(grp_bitreverse_fu_2290_data_OUT0_M_imag_d1);
    data_OUT1_M_real_U = new FFT_data_OUT1_M_ribs("data_OUT1_M_real_U");
    data_OUT1_M_real_U->clk(ap_clk);
    data_OUT1_M_real_U->reset(ap_rst_n_inv);
    data_OUT1_M_real_U->address0(data_OUT1_M_real_address0);
    data_OUT1_M_real_U->ce0(data_OUT1_M_real_ce0);
    data_OUT1_M_real_U->we0(data_OUT1_M_real_we0);
    data_OUT1_M_real_U->d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    data_OUT1_M_real_U->q0(data_OUT1_M_real_q0);
    data_OUT1_M_imag_U = new FFT_data_OUT1_M_ribs("data_OUT1_M_imag_U");
    data_OUT1_M_imag_U->clk(ap_clk);
    data_OUT1_M_imag_U->reset(ap_rst_n_inv);
    data_OUT1_M_imag_U->address0(data_OUT1_M_imag_address0);
    data_OUT1_M_imag_U->ce0(data_OUT1_M_imag_ce0);
    data_OUT1_M_imag_U->we0(data_OUT1_M_imag_we0);
    data_OUT1_M_imag_U->d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    data_OUT1_M_imag_U->q0(data_OUT1_M_imag_q0);
    data_OUT2_M_real_U = new FFT_data_OUT1_M_ribs("data_OUT2_M_real_U");
    data_OUT2_M_real_U->clk(ap_clk);
    data_OUT2_M_real_U->reset(ap_rst_n_inv);
    data_OUT2_M_real_U->address0(data_OUT2_M_real_address0);
    data_OUT2_M_real_U->ce0(data_OUT2_M_real_ce0);
    data_OUT2_M_real_U->we0(data_OUT2_M_real_we0);
    data_OUT2_M_real_U->d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    data_OUT2_M_real_U->q0(data_OUT2_M_real_q0);
    data_OUT2_M_imag_U = new FFT_data_OUT1_M_ribs("data_OUT2_M_imag_U");
    data_OUT2_M_imag_U->clk(ap_clk);
    data_OUT2_M_imag_U->reset(ap_rst_n_inv);
    data_OUT2_M_imag_U->address0(data_OUT2_M_imag_address0);
    data_OUT2_M_imag_U->ce0(data_OUT2_M_imag_ce0);
    data_OUT2_M_imag_U->we0(data_OUT2_M_imag_we0);
    data_OUT2_M_imag_U->d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    data_OUT2_M_imag_U->q0(data_OUT2_M_imag_q0);
    data_OUT3_M_real_U = new FFT_data_OUT1_M_ribs("data_OUT3_M_real_U");
    data_OUT3_M_real_U->clk(ap_clk);
    data_OUT3_M_real_U->reset(ap_rst_n_inv);
    data_OUT3_M_real_U->address0(data_OUT3_M_real_address0);
    data_OUT3_M_real_U->ce0(data_OUT3_M_real_ce0);
    data_OUT3_M_real_U->we0(data_OUT3_M_real_we0);
    data_OUT3_M_real_U->d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    data_OUT3_M_real_U->q0(data_OUT3_M_real_q0);
    data_OUT3_M_imag_U = new FFT_data_OUT1_M_ribs("data_OUT3_M_imag_U");
    data_OUT3_M_imag_U->clk(ap_clk);
    data_OUT3_M_imag_U->reset(ap_rst_n_inv);
    data_OUT3_M_imag_U->address0(data_OUT3_M_imag_address0);
    data_OUT3_M_imag_U->ce0(data_OUT3_M_imag_ce0);
    data_OUT3_M_imag_U->we0(data_OUT3_M_imag_we0);
    data_OUT3_M_imag_U->d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    data_OUT3_M_imag_U->q0(data_OUT3_M_imag_q0);
    data_OUT4_M_real_U = new FFT_data_OUT1_M_ribs("data_OUT4_M_real_U");
    data_OUT4_M_real_U->clk(ap_clk);
    data_OUT4_M_real_U->reset(ap_rst_n_inv);
    data_OUT4_M_real_U->address0(data_OUT4_M_real_address0);
    data_OUT4_M_real_U->ce0(data_OUT4_M_real_ce0);
    data_OUT4_M_real_U->we0(data_OUT4_M_real_we0);
    data_OUT4_M_real_U->d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    data_OUT4_M_real_U->q0(data_OUT4_M_real_q0);
    data_OUT4_M_imag_U = new FFT_data_OUT1_M_ribs("data_OUT4_M_imag_U");
    data_OUT4_M_imag_U->clk(ap_clk);
    data_OUT4_M_imag_U->reset(ap_rst_n_inv);
    data_OUT4_M_imag_U->address0(data_OUT4_M_imag_address0);
    data_OUT4_M_imag_U->ce0(data_OUT4_M_imag_ce0);
    data_OUT4_M_imag_U->we0(data_OUT4_M_imag_we0);
    data_OUT4_M_imag_U->d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    data_OUT4_M_imag_U->q0(data_OUT4_M_imag_q0);
    data_OUTfft_M_real_U = new FFT_data_OUT1_M_ribs("data_OUTfft_M_real_U");
    data_OUTfft_M_real_U->clk(ap_clk);
    data_OUTfft_M_real_U->reset(ap_rst_n_inv);
    data_OUTfft_M_real_U->address0(data_OUTfft_M_real_address0);
    data_OUTfft_M_real_U->ce0(data_OUTfft_M_real_ce0);
    data_OUTfft_M_real_U->we0(data_OUTfft_M_real_we0);
    data_OUTfft_M_real_U->d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    data_OUTfft_M_real_U->q0(data_OUTfft_M_real_q0);
    data_OUTfft_M_imag_U = new FFT_data_OUT1_M_ribs("data_OUTfft_M_imag_U");
    data_OUTfft_M_imag_U->clk(ap_clk);
    data_OUTfft_M_imag_U->reset(ap_rst_n_inv);
    data_OUTfft_M_imag_U->address0(data_OUTfft_M_imag_address0);
    data_OUTfft_M_imag_U->ce0(data_OUTfft_M_imag_ce0);
    data_OUTfft_M_imag_U->we0(data_OUTfft_M_imag_we0);
    data_OUTfft_M_imag_U->d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    data_OUTfft_M_imag_U->q0(data_OUTfft_M_imag_q0);
    xout_mag_U = new FFT_data_OUT1_M_ribs("xout_mag_U");
    xout_mag_U->clk(ap_clk);
    xout_mag_U->reset(ap_rst_n_inv);
    xout_mag_U->address0(xout_mag_address0);
    xout_mag_U->ce0(xout_mag_ce0);
    xout_mag_U->we0(xout_mag_we0);
    xout_mag_U->d0(tmp_3_i_reg_2703);
    xout_mag_U->q0(xout_mag_q0);
    FFT_AXILiteS_s_axi_U = new FFT_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("FFT_AXILiteS_s_axi_U");
    FFT_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    FFT_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    FFT_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    FFT_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    FFT_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    FFT_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    FFT_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    FFT_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    FFT_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    FFT_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    FFT_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    FFT_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    FFT_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    FFT_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    FFT_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    FFT_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    FFT_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    FFT_AXILiteS_s_axi_U->ACLK(ap_clk);
    FFT_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    FFT_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    FFT_AXILiteS_s_axi_U->ap_start(ap_start);
    FFT_AXILiteS_s_axi_U->interrupt(interrupt);
    FFT_AXILiteS_s_axi_U->ap_ready(ap_ready);
    FFT_AXILiteS_s_axi_U->ap_done(ap_done);
    FFT_AXILiteS_s_axi_U->ap_idle(ap_idle);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_address0(data_IN_M_real_address0);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_ce0(data_IN_M_real_ce0);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_q0(data_IN_M_real_q0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_address0(data_IN_M_imag_address0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_ce0(data_IN_M_imag_ce0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_q0(data_IN_M_imag_q0);
    FFT_AXILiteS_s_axi_U->win_mode(win_mode);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_address0(data_OUT_M_real_address0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_ce0(data_OUT_M_real_ce0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_we0(data_OUT_M_real_we0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_d0(data_OUTfft_M_real_q0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_address0(data_OUT_M_imag_address0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_ce0(data_OUT_M_imag_ce0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_we0(data_OUT_M_imag_we0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_d0(data_OUTfft_M_imag_q0);
    FFT_AXILiteS_s_axi_U->mag_OUT_address0(mag_OUT_address0);
    FFT_AXILiteS_s_axi_U->mag_OUT_ce0(mag_OUT_ce0);
    FFT_AXILiteS_s_axi_U->mag_OUT_we0(mag_OUT_we0);
    FFT_AXILiteS_s_axi_U->mag_OUT_d0(xout_mag_q0);
    grp_mult_window_fu_2214 = new mult_window("grp_mult_window_fu_2214");
    grp_mult_window_fu_2214->ap_clk(ap_clk);
    grp_mult_window_fu_2214->ap_rst(ap_rst_n_inv);
    grp_mult_window_fu_2214->ap_start(grp_mult_window_fu_2214_ap_start);
    grp_mult_window_fu_2214->ap_done(grp_mult_window_fu_2214_ap_done);
    grp_mult_window_fu_2214->ap_idle(grp_mult_window_fu_2214_ap_idle);
    grp_mult_window_fu_2214->ap_ready(grp_mult_window_fu_2214_ap_ready);
    grp_mult_window_fu_2214->data_IN_M_real_address0(grp_mult_window_fu_2214_data_IN_M_real_address0);
    grp_mult_window_fu_2214->data_IN_M_real_ce0(grp_mult_window_fu_2214_data_IN_M_real_ce0);
    grp_mult_window_fu_2214->data_IN_M_real_q0(xin_M_real_q0);
    grp_mult_window_fu_2214->data_IN_M_real_address1(grp_mult_window_fu_2214_data_IN_M_real_address1);
    grp_mult_window_fu_2214->data_IN_M_real_ce1(grp_mult_window_fu_2214_data_IN_M_real_ce1);
    grp_mult_window_fu_2214->data_IN_M_real_q1(xin_M_real_q1);
    grp_mult_window_fu_2214->data_IN_M_imag_address0(grp_mult_window_fu_2214_data_IN_M_imag_address0);
    grp_mult_window_fu_2214->data_IN_M_imag_ce0(grp_mult_window_fu_2214_data_IN_M_imag_ce0);
    grp_mult_window_fu_2214->data_IN_M_imag_q0(xin_M_imag_q0);
    grp_mult_window_fu_2214->data_IN_M_imag_address1(grp_mult_window_fu_2214_data_IN_M_imag_address1);
    grp_mult_window_fu_2214->data_IN_M_imag_ce1(grp_mult_window_fu_2214_data_IN_M_imag_ce1);
    grp_mult_window_fu_2214->data_IN_M_imag_q1(xin_M_imag_q1);
    grp_mult_window_fu_2214->win_mode(win_mode_read_reg_2652);
    grp_mult_window_fu_2214->prod_IN_M_real_2_address0(grp_mult_window_fu_2214_prod_IN_M_real_2_address0);
    grp_mult_window_fu_2214->prod_IN_M_real_2_ce0(grp_mult_window_fu_2214_prod_IN_M_real_2_ce0);
    grp_mult_window_fu_2214->prod_IN_M_real_2_we0(grp_mult_window_fu_2214_prod_IN_M_real_2_we0);
    grp_mult_window_fu_2214->prod_IN_M_real_2_d0(grp_mult_window_fu_2214_prod_IN_M_real_2_d0);
    grp_mult_window_fu_2214->prod_IN_M_real_2_address1(grp_mult_window_fu_2214_prod_IN_M_real_2_address1);
    grp_mult_window_fu_2214->prod_IN_M_real_2_ce1(grp_mult_window_fu_2214_prod_IN_M_real_2_ce1);
    grp_mult_window_fu_2214->prod_IN_M_real_2_we1(grp_mult_window_fu_2214_prod_IN_M_real_2_we1);
    grp_mult_window_fu_2214->prod_IN_M_real_2_d1(grp_mult_window_fu_2214_prod_IN_M_real_2_d1);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_address0(grp_mult_window_fu_2214_prod_IN_M_imag_2_address0);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_ce0(grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_we0(grp_mult_window_fu_2214_prod_IN_M_imag_2_we0);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_d0(grp_mult_window_fu_2214_prod_IN_M_imag_2_d0);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_address1(grp_mult_window_fu_2214_prod_IN_M_imag_2_address1);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_ce1(grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_we1(grp_mult_window_fu_2214_prod_IN_M_imag_2_we1);
    grp_mult_window_fu_2214->prod_IN_M_imag_2_d1(grp_mult_window_fu_2214_prod_IN_M_imag_2_d1);
    grp_FFT0_fu_2234 = new FFT0("grp_FFT0_fu_2234");
    grp_FFT0_fu_2234->ap_clk(ap_clk);
    grp_FFT0_fu_2234->ap_rst(ap_rst_n_inv);
    grp_FFT0_fu_2234->ap_start(grp_FFT0_fu_2234_ap_start);
    grp_FFT0_fu_2234->ap_done(grp_FFT0_fu_2234_ap_done);
    grp_FFT0_fu_2234->ap_idle(grp_FFT0_fu_2234_ap_idle);
    grp_FFT0_fu_2234->ap_ready(grp_FFT0_fu_2234_ap_ready);
    grp_FFT0_fu_2234->FFT_stage(grp_FFT0_fu_2234_FFT_stage);
    grp_FFT0_fu_2234->pass_check(grp_FFT0_fu_2234_pass_check);
    grp_FFT0_fu_2234->index_shift(grp_FFT0_fu_2234_index_shift);
    grp_FFT0_fu_2234->pass_shift(grp_FFT0_fu_2234_pass_shift);
    grp_FFT0_fu_2234->data_IN_M_real_address0(grp_FFT0_fu_2234_data_IN_M_real_address0);
    grp_FFT0_fu_2234->data_IN_M_real_ce0(grp_FFT0_fu_2234_data_IN_M_real_ce0);
    grp_FFT0_fu_2234->data_IN_M_real_q0(grp_FFT0_fu_2234_data_IN_M_real_q0);
    grp_FFT0_fu_2234->data_IN_M_imag_address0(grp_FFT0_fu_2234_data_IN_M_imag_address0);
    grp_FFT0_fu_2234->data_IN_M_imag_ce0(grp_FFT0_fu_2234_data_IN_M_imag_ce0);
    grp_FFT0_fu_2234->data_IN_M_imag_q0(grp_FFT0_fu_2234_data_IN_M_imag_q0);
    grp_FFT0_fu_2234->data_OUT_M_real_address0(grp_FFT0_fu_2234_data_OUT_M_real_address0);
    grp_FFT0_fu_2234->data_OUT_M_real_ce0(grp_FFT0_fu_2234_data_OUT_M_real_ce0);
    grp_FFT0_fu_2234->data_OUT_M_real_we0(grp_FFT0_fu_2234_data_OUT_M_real_we0);
    grp_FFT0_fu_2234->data_OUT_M_real_d0(grp_FFT0_fu_2234_data_OUT_M_real_d0);
    grp_FFT0_fu_2234->data_OUT_M_imag_address0(grp_FFT0_fu_2234_data_OUT_M_imag_address0);
    grp_FFT0_fu_2234->data_OUT_M_imag_ce0(grp_FFT0_fu_2234_data_OUT_M_imag_ce0);
    grp_FFT0_fu_2234->data_OUT_M_imag_we0(grp_FFT0_fu_2234_data_OUT_M_imag_we0);
    grp_FFT0_fu_2234->data_OUT_M_imag_d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0);
    grp_bitreverse_fu_2290 = new bitreverse("grp_bitreverse_fu_2290");
    grp_bitreverse_fu_2290->ap_clk(ap_clk);
    grp_bitreverse_fu_2290->ap_rst(ap_rst_n_inv);
    grp_bitreverse_fu_2290->ap_start(grp_bitreverse_fu_2290_ap_start);
    grp_bitreverse_fu_2290->ap_done(grp_bitreverse_fu_2290_ap_done);
    grp_bitreverse_fu_2290->ap_idle(grp_bitreverse_fu_2290_ap_idle);
    grp_bitreverse_fu_2290->ap_ready(grp_bitreverse_fu_2290_ap_ready);
    grp_bitreverse_fu_2290->prod_IN_M_real_address0(grp_bitreverse_fu_2290_prod_IN_M_real_address0);
    grp_bitreverse_fu_2290->prod_IN_M_real_ce0(grp_bitreverse_fu_2290_prod_IN_M_real_ce0);
    grp_bitreverse_fu_2290->prod_IN_M_real_q0(prod_IN_M_real_q0);
    grp_bitreverse_fu_2290->prod_IN_M_real_address1(grp_bitreverse_fu_2290_prod_IN_M_real_address1);
    grp_bitreverse_fu_2290->prod_IN_M_real_ce1(grp_bitreverse_fu_2290_prod_IN_M_real_ce1);
    grp_bitreverse_fu_2290->prod_IN_M_real_q1(prod_IN_M_real_q1);
    grp_bitreverse_fu_2290->data_OUT0_M_real_address0(grp_bitreverse_fu_2290_data_OUT0_M_real_address0);
    grp_bitreverse_fu_2290->data_OUT0_M_real_ce0(grp_bitreverse_fu_2290_data_OUT0_M_real_ce0);
    grp_bitreverse_fu_2290->data_OUT0_M_real_we0(grp_bitreverse_fu_2290_data_OUT0_M_real_we0);
    grp_bitreverse_fu_2290->data_OUT0_M_real_d0(grp_bitreverse_fu_2290_data_OUT0_M_real_d0);
    grp_bitreverse_fu_2290->data_OUT0_M_real_address1(grp_bitreverse_fu_2290_data_OUT0_M_real_address1);
    grp_bitreverse_fu_2290->data_OUT0_M_real_ce1(grp_bitreverse_fu_2290_data_OUT0_M_real_ce1);
    grp_bitreverse_fu_2290->data_OUT0_M_real_we1(grp_bitreverse_fu_2290_data_OUT0_M_real_we1);
    grp_bitreverse_fu_2290->data_OUT0_M_real_d1(grp_bitreverse_fu_2290_data_OUT0_M_real_d1);
    grp_bitreverse_fu_2290->prod_IN_M_imag_address0(grp_bitreverse_fu_2290_prod_IN_M_imag_address0);
    grp_bitreverse_fu_2290->prod_IN_M_imag_ce0(grp_bitreverse_fu_2290_prod_IN_M_imag_ce0);
    grp_bitreverse_fu_2290->prod_IN_M_imag_q0(prod_IN_M_imag_q0);
    grp_bitreverse_fu_2290->prod_IN_M_imag_address1(grp_bitreverse_fu_2290_prod_IN_M_imag_address1);
    grp_bitreverse_fu_2290->prod_IN_M_imag_ce1(grp_bitreverse_fu_2290_prod_IN_M_imag_ce1);
    grp_bitreverse_fu_2290->prod_IN_M_imag_q1(prod_IN_M_imag_q1);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_address0(grp_bitreverse_fu_2290_data_OUT0_M_imag_address0);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_ce0(grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_we0(grp_bitreverse_fu_2290_data_OUT0_M_imag_we0);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_d0(grp_bitreverse_fu_2290_data_OUT0_M_imag_d0);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_address1(grp_bitreverse_fu_2290_data_OUT0_M_imag_address1);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_ce1(grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_we1(grp_bitreverse_fu_2290_data_OUT0_M_imag_we1);
    grp_bitreverse_fu_2290->data_OUT0_M_imag_d1(grp_bitreverse_fu_2290_data_OUT0_M_imag_d1);
    FFT_fadd_32ns_32ndEe_U45 = new FFT_fadd_32ns_32ndEe<1,5,32,32,32>("FFT_fadd_32ns_32ndEe_U45");
    FFT_fadd_32ns_32ndEe_U45->clk(ap_clk);
    FFT_fadd_32ns_32ndEe_U45->reset(ap_rst_n_inv);
    FFT_fadd_32ns_32ndEe_U45->din0(tmp_i_reg_2693);
    FFT_fadd_32ns_32ndEe_U45->din1(tmp_i_24_reg_2698);
    FFT_fadd_32ns_32ndEe_U45->ce(ap_var_for_const0);
    FFT_fadd_32ns_32ndEe_U45->dout(grp_fu_2302_p2);
    FFT_fmul_32ns_32neOg_U46 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U46");
    FFT_fmul_32ns_32neOg_U46->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U46->reset(ap_rst_n_inv);
    FFT_fmul_32ns_32neOg_U46->din0(data_OUTfft_M_real_1_reg_2681);
    FFT_fmul_32ns_32neOg_U46->din1(data_OUTfft_M_real_1_reg_2681);
    FFT_fmul_32ns_32neOg_U46->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U46->dout(grp_fu_2306_p2);
    FFT_fmul_32ns_32neOg_U47 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U47");
    FFT_fmul_32ns_32neOg_U47->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U47->reset(ap_rst_n_inv);
    FFT_fmul_32ns_32neOg_U47->din0(data_OUTfft_M_imag_1_reg_2687);
    FFT_fmul_32ns_32neOg_U47->din1(data_OUTfft_M_imag_1_reg_2687);
    FFT_fmul_32ns_32neOg_U47->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U47->dout(grp_fu_2310_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state48_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state49_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state50_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state51_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state52_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state53_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state54_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state55_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state56_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state57_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state58_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state59_pp0_stage0_iter11);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state48);
    sensitive << ( icmp_ln99_fu_2314_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_IN_M_imag_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_IN_M_imag_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_IN_M_real_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_IN_M_real_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_OUT0_M_imag_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_address0 );
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_ce0 );
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_imag_ce1);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_imag_we0);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_imag_we1);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_imag_we1 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_real_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_address0 );
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_real_address0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_real_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_ce0 );
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_real_ce1);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_real_ce1 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_real_we0);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_real_we0 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT0_M_real_we1);
    sensitive << ( grp_bitreverse_fu_2290_data_OUT0_M_real_we1 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_data_OUT1_M_imag_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT1_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT1_M_imag_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_data_OUT1_M_real_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT1_M_real_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT1_M_real_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_data_OUT2_M_imag_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT2_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT2_M_imag_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT2_M_real_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT2_M_real_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT2_M_real_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_data_OUT3_M_imag_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT3_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT3_M_imag_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT3_M_real_address0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT3_M_real_ce0);
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT3_M_real_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_data_OUT4_M_imag_address0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT4_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT4_M_imag_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT4_M_real_address0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT4_M_real_ce0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT4_M_real_we0);
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_data_OUT_M_imag_address0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUT_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUT_M_imag_we0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUT_M_real_address0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUT_M_real_ce0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUT_M_real_we0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_data_OUTfft_M_imag_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln102_fu_2326_p1 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_data_OUTfft_M_imag_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_data_OUTfft_M_imag_we0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_imag_we0 );

    SC_METHOD(thread_data_OUTfft_M_real_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln102_fu_2326_p1 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_data_OUTfft_M_real_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_data_OUTfft_M_real_we0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_data_OUT_M_real_we0 );

    SC_METHOD(thread_grp_FFT0_fu_2234_FFT_stage);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_FFT0_fu_2234_ap_start);
    sensitive << ( grp_FFT0_fu_2234_ap_start_reg );

    SC_METHOD(thread_grp_FFT0_fu_2234_data_IN_M_imag_q0);
    sensitive << ( data_OUT0_M_imag_q0 );
    sensitive << ( data_OUT1_M_imag_q0 );
    sensitive << ( data_OUT2_M_imag_q0 );
    sensitive << ( data_OUT3_M_imag_q0 );
    sensitive << ( data_OUT4_M_imag_q0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_FFT0_fu_2234_data_IN_M_real_q0);
    sensitive << ( data_OUT0_M_real_q0 );
    sensitive << ( data_OUT1_M_real_q0 );
    sensitive << ( data_OUT2_M_real_q0 );
    sensitive << ( data_OUT3_M_real_q0 );
    sensitive << ( data_OUT4_M_real_q0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_FFT0_fu_2234_index_shift);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_FFT0_fu_2234_pass_check);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_FFT0_fu_2234_pass_shift);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_bitreverse_fu_2290_ap_start);
    sensitive << ( grp_bitreverse_fu_2290_ap_start_reg );

    SC_METHOD(thread_grp_mult_window_fu_2214_ap_start);
    sensitive << ( grp_mult_window_fu_2214_ap_start_reg );

    SC_METHOD(thread_i_fu_2320_p2);
    sensitive << ( i_0_i_reg_2203 );

    SC_METHOD(thread_icmp_ln99_fu_2314_p2);
    sensitive << ( i_0_i_reg_2203 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mag_OUT_address0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_mag_OUT_ce0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_mag_OUT_we0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );

    SC_METHOD(thread_prod_IN_M_imag_address0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_address0 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_imag_address1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_address1 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_imag_address1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_imag_ce0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_imag_ce1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_imag_ce1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_imag_we0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_we0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_prod_IN_M_imag_we1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_imag_2_we1 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_prod_IN_M_real_address0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_address0 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_real_address0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_real_address1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_address1 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_real_address1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_real_ce0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_ce0 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_real_ce1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_ce1 );
    sensitive << ( grp_bitreverse_fu_2290_prod_IN_M_real_ce1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_prod_IN_M_real_we0);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_we0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_prod_IN_M_real_we1);
    sensitive << ( grp_mult_window_fu_2214_prod_IN_M_real_2_we1 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_xin_M_imag_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_mult_window_fu_2214_data_IN_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xin_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_mult_window_fu_2214_data_IN_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xin_M_imag_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xin_M_real_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_mult_window_fu_2214_data_IN_M_real_address0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xin_M_real_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_mult_window_fu_2214_data_IN_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xin_M_real_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_xout_mag_address0);
    sensitive << ( zext_ln102_reg_2666_pp0_iter10_reg );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_xout_mag_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_xout_mag_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln99_reg_2657_pp0_iter10_reg );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_zext_ln102_fu_2326_p1);
    sensitive << ( i_0_i_reg_2203 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln99_fu_2314_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_FFT0_fu_2234_ap_done );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( grp_mult_window_fu_2214_ap_done );
    sensitive << ( grp_bitreverse_fu_2290_ap_done );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    grp_mult_window_fu_2214_ap_start_reg = SC_LOGIC_0;
    grp_FFT0_fu_2234_ap_start_reg = SC_LOGIC_0;
    grp_bitreverse_fu_2290_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, data_IN_M_real_address0, "data_IN_M_real_address0");
    sc_trace(mVcdFile, data_IN_M_real_ce0, "data_IN_M_real_ce0");
    sc_trace(mVcdFile, data_IN_M_real_q0, "data_IN_M_real_q0");
    sc_trace(mVcdFile, data_IN_M_imag_address0, "data_IN_M_imag_address0");
    sc_trace(mVcdFile, data_IN_M_imag_ce0, "data_IN_M_imag_ce0");
    sc_trace(mVcdFile, data_IN_M_imag_q0, "data_IN_M_imag_q0");
    sc_trace(mVcdFile, win_mode, "win_mode");
    sc_trace(mVcdFile, data_OUT_M_real_address0, "data_OUT_M_real_address0");
    sc_trace(mVcdFile, data_OUT_M_real_ce0, "data_OUT_M_real_ce0");
    sc_trace(mVcdFile, data_OUT_M_real_we0, "data_OUT_M_real_we0");
    sc_trace(mVcdFile, data_OUT_M_imag_address0, "data_OUT_M_imag_address0");
    sc_trace(mVcdFile, data_OUT_M_imag_ce0, "data_OUT_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT_M_imag_we0, "data_OUT_M_imag_we0");
    sc_trace(mVcdFile, mag_OUT_address0, "mag_OUT_address0");
    sc_trace(mVcdFile, mag_OUT_ce0, "mag_OUT_ce0");
    sc_trace(mVcdFile, mag_OUT_we0, "mag_OUT_we0");
    sc_trace(mVcdFile, xin_M_real_address0, "xin_M_real_address0");
    sc_trace(mVcdFile, xin_M_real_ce0, "xin_M_real_ce0");
    sc_trace(mVcdFile, xin_M_real_we0, "xin_M_real_we0");
    sc_trace(mVcdFile, xin_M_real_q0, "xin_M_real_q0");
    sc_trace(mVcdFile, xin_M_real_q1, "xin_M_real_q1");
    sc_trace(mVcdFile, xin_M_imag_address0, "xin_M_imag_address0");
    sc_trace(mVcdFile, xin_M_imag_ce0, "xin_M_imag_ce0");
    sc_trace(mVcdFile, xin_M_imag_we0, "xin_M_imag_we0");
    sc_trace(mVcdFile, xin_M_imag_q0, "xin_M_imag_q0");
    sc_trace(mVcdFile, xin_M_imag_q1, "xin_M_imag_q1");
    sc_trace(mVcdFile, prod_IN_M_real_address0, "prod_IN_M_real_address0");
    sc_trace(mVcdFile, prod_IN_M_real_ce0, "prod_IN_M_real_ce0");
    sc_trace(mVcdFile, prod_IN_M_real_we0, "prod_IN_M_real_we0");
    sc_trace(mVcdFile, prod_IN_M_real_q0, "prod_IN_M_real_q0");
    sc_trace(mVcdFile, prod_IN_M_real_address1, "prod_IN_M_real_address1");
    sc_trace(mVcdFile, prod_IN_M_real_ce1, "prod_IN_M_real_ce1");
    sc_trace(mVcdFile, prod_IN_M_real_we1, "prod_IN_M_real_we1");
    sc_trace(mVcdFile, prod_IN_M_real_q1, "prod_IN_M_real_q1");
    sc_trace(mVcdFile, prod_IN_M_imag_address0, "prod_IN_M_imag_address0");
    sc_trace(mVcdFile, prod_IN_M_imag_ce0, "prod_IN_M_imag_ce0");
    sc_trace(mVcdFile, prod_IN_M_imag_we0, "prod_IN_M_imag_we0");
    sc_trace(mVcdFile, prod_IN_M_imag_q0, "prod_IN_M_imag_q0");
    sc_trace(mVcdFile, prod_IN_M_imag_address1, "prod_IN_M_imag_address1");
    sc_trace(mVcdFile, prod_IN_M_imag_ce1, "prod_IN_M_imag_ce1");
    sc_trace(mVcdFile, prod_IN_M_imag_we1, "prod_IN_M_imag_we1");
    sc_trace(mVcdFile, prod_IN_M_imag_q1, "prod_IN_M_imag_q1");
    sc_trace(mVcdFile, data_OUT0_M_real_address0, "data_OUT0_M_real_address0");
    sc_trace(mVcdFile, data_OUT0_M_real_ce0, "data_OUT0_M_real_ce0");
    sc_trace(mVcdFile, data_OUT0_M_real_we0, "data_OUT0_M_real_we0");
    sc_trace(mVcdFile, data_OUT0_M_real_q0, "data_OUT0_M_real_q0");
    sc_trace(mVcdFile, data_OUT0_M_real_ce1, "data_OUT0_M_real_ce1");
    sc_trace(mVcdFile, data_OUT0_M_real_we1, "data_OUT0_M_real_we1");
    sc_trace(mVcdFile, data_OUT0_M_imag_address0, "data_OUT0_M_imag_address0");
    sc_trace(mVcdFile, data_OUT0_M_imag_ce0, "data_OUT0_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT0_M_imag_we0, "data_OUT0_M_imag_we0");
    sc_trace(mVcdFile, data_OUT0_M_imag_q0, "data_OUT0_M_imag_q0");
    sc_trace(mVcdFile, data_OUT0_M_imag_ce1, "data_OUT0_M_imag_ce1");
    sc_trace(mVcdFile, data_OUT0_M_imag_we1, "data_OUT0_M_imag_we1");
    sc_trace(mVcdFile, data_OUT1_M_real_address0, "data_OUT1_M_real_address0");
    sc_trace(mVcdFile, data_OUT1_M_real_ce0, "data_OUT1_M_real_ce0");
    sc_trace(mVcdFile, data_OUT1_M_real_we0, "data_OUT1_M_real_we0");
    sc_trace(mVcdFile, data_OUT1_M_real_q0, "data_OUT1_M_real_q0");
    sc_trace(mVcdFile, data_OUT1_M_imag_address0, "data_OUT1_M_imag_address0");
    sc_trace(mVcdFile, data_OUT1_M_imag_ce0, "data_OUT1_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT1_M_imag_we0, "data_OUT1_M_imag_we0");
    sc_trace(mVcdFile, data_OUT1_M_imag_q0, "data_OUT1_M_imag_q0");
    sc_trace(mVcdFile, data_OUT2_M_real_address0, "data_OUT2_M_real_address0");
    sc_trace(mVcdFile, data_OUT2_M_real_ce0, "data_OUT2_M_real_ce0");
    sc_trace(mVcdFile, data_OUT2_M_real_we0, "data_OUT2_M_real_we0");
    sc_trace(mVcdFile, data_OUT2_M_real_q0, "data_OUT2_M_real_q0");
    sc_trace(mVcdFile, data_OUT2_M_imag_address0, "data_OUT2_M_imag_address0");
    sc_trace(mVcdFile, data_OUT2_M_imag_ce0, "data_OUT2_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT2_M_imag_we0, "data_OUT2_M_imag_we0");
    sc_trace(mVcdFile, data_OUT2_M_imag_q0, "data_OUT2_M_imag_q0");
    sc_trace(mVcdFile, data_OUT3_M_real_address0, "data_OUT3_M_real_address0");
    sc_trace(mVcdFile, data_OUT3_M_real_ce0, "data_OUT3_M_real_ce0");
    sc_trace(mVcdFile, data_OUT3_M_real_we0, "data_OUT3_M_real_we0");
    sc_trace(mVcdFile, data_OUT3_M_real_q0, "data_OUT3_M_real_q0");
    sc_trace(mVcdFile, data_OUT3_M_imag_address0, "data_OUT3_M_imag_address0");
    sc_trace(mVcdFile, data_OUT3_M_imag_ce0, "data_OUT3_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT3_M_imag_we0, "data_OUT3_M_imag_we0");
    sc_trace(mVcdFile, data_OUT3_M_imag_q0, "data_OUT3_M_imag_q0");
    sc_trace(mVcdFile, data_OUT4_M_real_address0, "data_OUT4_M_real_address0");
    sc_trace(mVcdFile, data_OUT4_M_real_ce0, "data_OUT4_M_real_ce0");
    sc_trace(mVcdFile, data_OUT4_M_real_we0, "data_OUT4_M_real_we0");
    sc_trace(mVcdFile, data_OUT4_M_real_q0, "data_OUT4_M_real_q0");
    sc_trace(mVcdFile, data_OUT4_M_imag_address0, "data_OUT4_M_imag_address0");
    sc_trace(mVcdFile, data_OUT4_M_imag_ce0, "data_OUT4_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT4_M_imag_we0, "data_OUT4_M_imag_we0");
    sc_trace(mVcdFile, data_OUT4_M_imag_q0, "data_OUT4_M_imag_q0");
    sc_trace(mVcdFile, data_OUTfft_M_real_address0, "data_OUTfft_M_real_address0");
    sc_trace(mVcdFile, data_OUTfft_M_real_ce0, "data_OUTfft_M_real_ce0");
    sc_trace(mVcdFile, data_OUTfft_M_real_we0, "data_OUTfft_M_real_we0");
    sc_trace(mVcdFile, data_OUTfft_M_real_q0, "data_OUTfft_M_real_q0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_address0, "data_OUTfft_M_imag_address0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_ce0, "data_OUTfft_M_imag_ce0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_we0, "data_OUTfft_M_imag_we0");
    sc_trace(mVcdFile, data_OUTfft_M_imag_q0, "data_OUTfft_M_imag_q0");
    sc_trace(mVcdFile, xout_mag_address0, "xout_mag_address0");
    sc_trace(mVcdFile, xout_mag_ce0, "xout_mag_ce0");
    sc_trace(mVcdFile, xout_mag_we0, "xout_mag_we0");
    sc_trace(mVcdFile, xout_mag_q0, "xout_mag_q0");
    sc_trace(mVcdFile, i_0_i_reg_2203, "i_0_i_reg_2203");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, win_mode_read_reg_2652, "win_mode_read_reg_2652");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, icmp_ln99_fu_2314_p2, "icmp_ln99_fu_2314_p2");
    sc_trace(mVcdFile, icmp_ln99_reg_2657, "icmp_ln99_reg_2657");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state48_pp0_stage0_iter0, "ap_block_state48_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state49_pp0_stage0_iter1, "ap_block_state49_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state50_pp0_stage0_iter2, "ap_block_state50_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state51_pp0_stage0_iter3, "ap_block_state51_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state52_pp0_stage0_iter4, "ap_block_state52_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state53_pp0_stage0_iter5, "ap_block_state53_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state54_pp0_stage0_iter6, "ap_block_state54_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state55_pp0_stage0_iter7, "ap_block_state55_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state56_pp0_stage0_iter8, "ap_block_state56_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state57_pp0_stage0_iter9, "ap_block_state57_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state58_pp0_stage0_iter10, "ap_block_state58_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state59_pp0_stage0_iter11, "ap_block_state59_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter1_reg, "icmp_ln99_reg_2657_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter2_reg, "icmp_ln99_reg_2657_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter3_reg, "icmp_ln99_reg_2657_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter4_reg, "icmp_ln99_reg_2657_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter5_reg, "icmp_ln99_reg_2657_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter6_reg, "icmp_ln99_reg_2657_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter7_reg, "icmp_ln99_reg_2657_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter8_reg, "icmp_ln99_reg_2657_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter9_reg, "icmp_ln99_reg_2657_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln99_reg_2657_pp0_iter10_reg, "icmp_ln99_reg_2657_pp0_iter10_reg");
    sc_trace(mVcdFile, i_fu_2320_p2, "i_fu_2320_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln102_fu_2326_p1, "zext_ln102_fu_2326_p1");
    sc_trace(mVcdFile, zext_ln102_reg_2666, "zext_ln102_reg_2666");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter1_reg, "zext_ln102_reg_2666_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter2_reg, "zext_ln102_reg_2666_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter3_reg, "zext_ln102_reg_2666_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter4_reg, "zext_ln102_reg_2666_pp0_iter4_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter5_reg, "zext_ln102_reg_2666_pp0_iter5_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter6_reg, "zext_ln102_reg_2666_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter7_reg, "zext_ln102_reg_2666_pp0_iter7_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter8_reg, "zext_ln102_reg_2666_pp0_iter8_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter9_reg, "zext_ln102_reg_2666_pp0_iter9_reg");
    sc_trace(mVcdFile, zext_ln102_reg_2666_pp0_iter10_reg, "zext_ln102_reg_2666_pp0_iter10_reg");
    sc_trace(mVcdFile, data_OUTfft_M_real_1_reg_2681, "data_OUTfft_M_real_1_reg_2681");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, data_OUTfft_M_imag_1_reg_2687, "data_OUTfft_M_imag_1_reg_2687");
    sc_trace(mVcdFile, grp_fu_2306_p2, "grp_fu_2306_p2");
    sc_trace(mVcdFile, tmp_i_reg_2693, "tmp_i_reg_2693");
    sc_trace(mVcdFile, grp_fu_2310_p2, "grp_fu_2310_p2");
    sc_trace(mVcdFile, tmp_i_24_reg_2698, "tmp_i_24_reg_2698");
    sc_trace(mVcdFile, grp_fu_2302_p2, "grp_fu_2302_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_2703, "tmp_3_i_reg_2703");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_ap_ready, "grp_FFT0_fu_2234_ap_ready");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_ap_done, "grp_FFT0_fu_2234_ap_done");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state48, "ap_condition_pp0_exit_iter0_state48");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_ap_start, "grp_mult_window_fu_2214_ap_start");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_ap_done, "grp_mult_window_fu_2214_ap_done");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_ap_idle, "grp_mult_window_fu_2214_ap_idle");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_ap_ready, "grp_mult_window_fu_2214_ap_ready");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_real_address0, "grp_mult_window_fu_2214_data_IN_M_real_address0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_real_ce0, "grp_mult_window_fu_2214_data_IN_M_real_ce0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_real_address1, "grp_mult_window_fu_2214_data_IN_M_real_address1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_real_ce1, "grp_mult_window_fu_2214_data_IN_M_real_ce1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_imag_address0, "grp_mult_window_fu_2214_data_IN_M_imag_address0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_imag_ce0, "grp_mult_window_fu_2214_data_IN_M_imag_ce0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_imag_address1, "grp_mult_window_fu_2214_data_IN_M_imag_address1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_data_IN_M_imag_ce1, "grp_mult_window_fu_2214_data_IN_M_imag_ce1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_address0, "grp_mult_window_fu_2214_prod_IN_M_real_2_address0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_ce0, "grp_mult_window_fu_2214_prod_IN_M_real_2_ce0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_we0, "grp_mult_window_fu_2214_prod_IN_M_real_2_we0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_d0, "grp_mult_window_fu_2214_prod_IN_M_real_2_d0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_address1, "grp_mult_window_fu_2214_prod_IN_M_real_2_address1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_ce1, "grp_mult_window_fu_2214_prod_IN_M_real_2_ce1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_we1, "grp_mult_window_fu_2214_prod_IN_M_real_2_we1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_real_2_d1, "grp_mult_window_fu_2214_prod_IN_M_real_2_d1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_address0, "grp_mult_window_fu_2214_prod_IN_M_imag_2_address0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0, "grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_we0, "grp_mult_window_fu_2214_prod_IN_M_imag_2_we0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_d0, "grp_mult_window_fu_2214_prod_IN_M_imag_2_d0");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_address1, "grp_mult_window_fu_2214_prod_IN_M_imag_2_address1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1, "grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_we1, "grp_mult_window_fu_2214_prod_IN_M_imag_2_we1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_prod_IN_M_imag_2_d1, "grp_mult_window_fu_2214_prod_IN_M_imag_2_d1");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_ap_start, "grp_FFT0_fu_2234_ap_start");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_ap_idle, "grp_FFT0_fu_2234_ap_idle");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_FFT_stage, "grp_FFT0_fu_2234_FFT_stage");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_pass_check, "grp_FFT0_fu_2234_pass_check");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_index_shift, "grp_FFT0_fu_2234_index_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_pass_shift, "grp_FFT0_fu_2234_pass_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_real_address0, "grp_FFT0_fu_2234_data_IN_M_real_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_real_ce0, "grp_FFT0_fu_2234_data_IN_M_real_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_real_q0, "grp_FFT0_fu_2234_data_IN_M_real_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_imag_address0, "grp_FFT0_fu_2234_data_IN_M_imag_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_imag_ce0, "grp_FFT0_fu_2234_data_IN_M_imag_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_IN_M_imag_q0, "grp_FFT0_fu_2234_data_IN_M_imag_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_real_address0, "grp_FFT0_fu_2234_data_OUT_M_real_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_real_ce0, "grp_FFT0_fu_2234_data_OUT_M_real_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_real_we0, "grp_FFT0_fu_2234_data_OUT_M_real_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_real_d0, "grp_FFT0_fu_2234_data_OUT_M_real_d0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_imag_address0, "grp_FFT0_fu_2234_data_OUT_M_imag_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_imag_ce0, "grp_FFT0_fu_2234_data_OUT_M_imag_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_imag_we0, "grp_FFT0_fu_2234_data_OUT_M_imag_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_data_OUT_M_imag_d0, "grp_FFT0_fu_2234_data_OUT_M_imag_d0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_ap_start, "grp_bitreverse_fu_2290_ap_start");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_ap_done, "grp_bitreverse_fu_2290_ap_done");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_ap_idle, "grp_bitreverse_fu_2290_ap_idle");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_ap_ready, "grp_bitreverse_fu_2290_ap_ready");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_real_address0, "grp_bitreverse_fu_2290_prod_IN_M_real_address0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_real_ce0, "grp_bitreverse_fu_2290_prod_IN_M_real_ce0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_real_address1, "grp_bitreverse_fu_2290_prod_IN_M_real_address1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_real_ce1, "grp_bitreverse_fu_2290_prod_IN_M_real_ce1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_address0, "grp_bitreverse_fu_2290_data_OUT0_M_real_address0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_ce0, "grp_bitreverse_fu_2290_data_OUT0_M_real_ce0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_we0, "grp_bitreverse_fu_2290_data_OUT0_M_real_we0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_d0, "grp_bitreverse_fu_2290_data_OUT0_M_real_d0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_address1, "grp_bitreverse_fu_2290_data_OUT0_M_real_address1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_ce1, "grp_bitreverse_fu_2290_data_OUT0_M_real_ce1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_we1, "grp_bitreverse_fu_2290_data_OUT0_M_real_we1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_real_d1, "grp_bitreverse_fu_2290_data_OUT0_M_real_d1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_imag_address0, "grp_bitreverse_fu_2290_prod_IN_M_imag_address0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_imag_ce0, "grp_bitreverse_fu_2290_prod_IN_M_imag_ce0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_imag_address1, "grp_bitreverse_fu_2290_prod_IN_M_imag_address1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_prod_IN_M_imag_ce1, "grp_bitreverse_fu_2290_prod_IN_M_imag_ce1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_address0, "grp_bitreverse_fu_2290_data_OUT0_M_imag_address0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0, "grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_we0, "grp_bitreverse_fu_2290_data_OUT0_M_imag_we0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_d0, "grp_bitreverse_fu_2290_data_OUT0_M_imag_d0");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_address1, "grp_bitreverse_fu_2290_data_OUT0_M_imag_address1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1, "grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_we1, "grp_bitreverse_fu_2290_data_OUT0_M_imag_we1");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_data_OUT0_M_imag_d1, "grp_bitreverse_fu_2290_data_OUT0_M_imag_d1");
    sc_trace(mVcdFile, grp_mult_window_fu_2214_ap_start_reg, "grp_mult_window_fu_2214_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_FFT0_fu_2234_ap_start_reg, "grp_FFT0_fu_2234_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_bitreverse_fu_2290_ap_start_reg, "grp_bitreverse_fu_2290_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, ap_CS_fsm_state84, "ap_CS_fsm_state84");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, ap_CS_fsm_state91, "ap_CS_fsm_state91");
    sc_trace(mVcdFile, ap_CS_fsm_state92, "ap_CS_fsm_state92");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("FFT.hdltvin.dat");
    mHdltvoutHandle.open("FFT.hdltvout.dat");
}

FFT::~FFT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete xin_M_real_U;
    delete xin_M_imag_U;
    delete prod_IN_M_real_U;
    delete prod_IN_M_imag_U;
    delete data_OUT0_M_real_U;
    delete data_OUT0_M_imag_U;
    delete data_OUT1_M_real_U;
    delete data_OUT1_M_imag_U;
    delete data_OUT2_M_real_U;
    delete data_OUT2_M_imag_U;
    delete data_OUT3_M_real_U;
    delete data_OUT3_M_imag_U;
    delete data_OUT4_M_real_U;
    delete data_OUT4_M_imag_U;
    delete data_OUTfft_M_real_U;
    delete data_OUTfft_M_imag_U;
    delete xout_mag_U;
    delete FFT_AXILiteS_s_axi_U;
    delete grp_mult_window_fu_2214;
    delete grp_FFT0_fu_2234;
    delete grp_bitreverse_fu_2290;
    delete FFT_fadd_32ns_32ndEe_U45;
    delete FFT_fmul_32ns_32neOg_U46;
    delete FFT_fmul_32ns_32neOg_U47;
}

void FFT::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void FFT::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state48.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                    esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state48.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state48.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                    esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter11 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_FFT0_fu_2234_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
            grp_FFT0_fu_2234_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_FFT0_fu_2234_ap_ready.read())) {
            grp_FFT0_fu_2234_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_bitreverse_fu_2290_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
            grp_bitreverse_fu_2290_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bitreverse_fu_2290_ap_ready.read())) {
            grp_bitreverse_fu_2290_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_mult_window_fu_2214_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
            grp_mult_window_fu_2214_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mult_window_fu_2214_ap_ready.read())) {
            grp_mult_window_fu_2214_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln99_fu_2314_p2.read(), ap_const_lv1_0))) {
        i_0_i_reg_2203 = i_fu_2320_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1))) {
        i_0_i_reg_2203 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln99_reg_2657.read(), ap_const_lv1_0))) {
        data_OUTfft_M_imag_1_reg_2687 = data_OUTfft_M_imag_q0.read();
        data_OUTfft_M_real_1_reg_2681 = data_OUTfft_M_real_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln99_reg_2657 = icmp_ln99_fu_2314_p2.read();
        icmp_ln99_reg_2657_pp0_iter1_reg = icmp_ln99_reg_2657.read();
        zext_ln102_reg_2666_pp0_iter1_reg = zext_ln102_reg_2666.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln99_reg_2657_pp0_iter10_reg = icmp_ln99_reg_2657_pp0_iter9_reg.read();
        icmp_ln99_reg_2657_pp0_iter2_reg = icmp_ln99_reg_2657_pp0_iter1_reg.read();
        icmp_ln99_reg_2657_pp0_iter3_reg = icmp_ln99_reg_2657_pp0_iter2_reg.read();
        icmp_ln99_reg_2657_pp0_iter4_reg = icmp_ln99_reg_2657_pp0_iter3_reg.read();
        icmp_ln99_reg_2657_pp0_iter5_reg = icmp_ln99_reg_2657_pp0_iter4_reg.read();
        icmp_ln99_reg_2657_pp0_iter6_reg = icmp_ln99_reg_2657_pp0_iter5_reg.read();
        icmp_ln99_reg_2657_pp0_iter7_reg = icmp_ln99_reg_2657_pp0_iter6_reg.read();
        icmp_ln99_reg_2657_pp0_iter8_reg = icmp_ln99_reg_2657_pp0_iter7_reg.read();
        icmp_ln99_reg_2657_pp0_iter9_reg = icmp_ln99_reg_2657_pp0_iter8_reg.read();
        zext_ln102_reg_2666_pp0_iter10_reg = zext_ln102_reg_2666_pp0_iter9_reg.read();
        zext_ln102_reg_2666_pp0_iter2_reg = zext_ln102_reg_2666_pp0_iter1_reg.read();
        zext_ln102_reg_2666_pp0_iter3_reg = zext_ln102_reg_2666_pp0_iter2_reg.read();
        zext_ln102_reg_2666_pp0_iter4_reg = zext_ln102_reg_2666_pp0_iter3_reg.read();
        zext_ln102_reg_2666_pp0_iter5_reg = zext_ln102_reg_2666_pp0_iter4_reg.read();
        zext_ln102_reg_2666_pp0_iter6_reg = zext_ln102_reg_2666_pp0_iter5_reg.read();
        zext_ln102_reg_2666_pp0_iter7_reg = zext_ln102_reg_2666_pp0_iter6_reg.read();
        zext_ln102_reg_2666_pp0_iter8_reg = zext_ln102_reg_2666_pp0_iter7_reg.read();
        zext_ln102_reg_2666_pp0_iter9_reg = zext_ln102_reg_2666_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln99_reg_2657_pp0_iter9_reg.read(), ap_const_lv1_0))) {
        tmp_3_i_reg_2703 = grp_fu_2302_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln99_reg_2657_pp0_iter4_reg.read(), ap_const_lv1_0))) {
        tmp_i_24_reg_2698 = grp_fu_2310_p2.read();
        tmp_i_reg_2693 = grp_fu_2306_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        win_mode_read_reg_2652 = win_mode.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln99_fu_2314_p2.read(), ap_const_lv1_0))) {
        zext_ln102_reg_2666 = zext_ln102_fu_2326_p1.read();
    }
}

void FFT::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[47];
}

void FFT::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void FFT::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void FFT::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void FFT::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void FFT::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void FFT::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void FFT::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void FFT::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void FFT::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void FFT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void FFT::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void FFT::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void FFT::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void FFT::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void FFT::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void FFT::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void FFT::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void FFT::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void FFT::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void FFT::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void FFT::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void FFT::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void FFT::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void FFT::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void FFT::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void FFT::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void FFT::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void FFT::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void FFT::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void FFT::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void FFT::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void FFT::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void FFT::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void FFT::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void FFT::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void FFT::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void FFT::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void FFT::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void FFT::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[48];
}

void FFT::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[49];
}

void FFT::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[50];
}

void FFT::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[51];
}

void FFT::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[52];
}

void FFT::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[53];
}

void FFT::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[54];
}

void FFT::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[55];
}

void FFT::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[56];
}

void FFT::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[57];
}

void FFT::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void FFT::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[58];
}

void FFT::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[59];
}

void FFT::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[60];
}

void FFT::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[61];
}

void FFT::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[62];
}

void FFT::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[63];
}

void FFT::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[64];
}

void FFT::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[65];
}

void FFT::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[66];
}

void FFT::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[67];
}

void FFT::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[68];
}

void FFT::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[69];
}

void FFT::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[70];
}

void FFT::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[71];
}

void FFT::thread_ap_CS_fsm_state84() {
    ap_CS_fsm_state84 = ap_CS_fsm.read()[72];
}

void FFT::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[73];
}

void FFT::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[74];
}

void FFT::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[75];
}

void FFT::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[76];
}

void FFT::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[77];
}

void FFT::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[78];
}

void FFT::thread_ap_CS_fsm_state91() {
    ap_CS_fsm_state91 = ap_CS_fsm.read()[79];
}

void FFT::thread_ap_CS_fsm_state92() {
    ap_CS_fsm_state92 = ap_CS_fsm.read()[80];
}

void FFT::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state48_pp0_stage0_iter0() {
    ap_block_state48_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state49_pp0_stage0_iter1() {
    ap_block_state49_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state50_pp0_stage0_iter2() {
    ap_block_state50_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state51_pp0_stage0_iter3() {
    ap_block_state51_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state52_pp0_stage0_iter4() {
    ap_block_state52_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state53_pp0_stage0_iter5() {
    ap_block_state53_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state54_pp0_stage0_iter6() {
    ap_block_state54_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state55_pp0_stage0_iter7() {
    ap_block_state55_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state56_pp0_stage0_iter8() {
    ap_block_state56_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state57_pp0_stage0_iter9() {
    ap_block_state57_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state58_pp0_stage0_iter10() {
    ap_block_state58_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_block_state59_pp0_stage0_iter11() {
    ap_block_state59_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void FFT::thread_ap_condition_pp0_exit_iter0_state48() {
    if (esl_seteq<1,1,1>(icmp_ln99_fu_2314_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state48 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state48 = ap_const_logic_0;
    }
}

void FFT::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void FFT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void FFT::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void FFT::thread_data_IN_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        data_IN_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_IN_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_IN_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_IN_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        data_IN_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_IN_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_IN_M_real_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_imag_address0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT0_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0.read();
    } else {
        data_OUT0_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_imag_ce0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT0_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0.read();
    } else {
        data_OUT0_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_imag_ce1 = grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1.read();
    } else {
        data_OUT0_M_imag_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_imag_we0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_we0.read();
    } else {
        data_OUT0_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_imag_we1 = grp_bitreverse_fu_2290_data_OUT0_M_imag_we1.read();
    } else {
        data_OUT0_M_imag_we1 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_real_address0 = grp_bitreverse_fu_2290_data_OUT0_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT0_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0.read();
    } else {
        data_OUT0_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_real_ce0 = grp_bitreverse_fu_2290_data_OUT0_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT0_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0.read();
    } else {
        data_OUT0_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_real_ce1 = grp_bitreverse_fu_2290_data_OUT0_M_real_ce1.read();
    } else {
        data_OUT0_M_real_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_real_we0 = grp_bitreverse_fu_2290_data_OUT0_M_real_we0.read();
    } else {
        data_OUT0_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        data_OUT0_M_real_we1 = grp_bitreverse_fu_2290_data_OUT0_M_real_we1.read();
    } else {
        data_OUT0_M_real_we1 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT1_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0.read();
    } else {
        data_OUT1_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0.read();
    } else {
        data_OUT1_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0.read();
    } else {
        data_OUT1_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT1_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0.read();
    } else {
        data_OUT1_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT1_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0.read();
    } else {
        data_OUT1_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        data_OUT1_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0.read();
    } else {
        data_OUT1_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT2_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0.read();
    } else {
        data_OUT2_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0.read();
    } else {
        data_OUT2_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0.read();
    } else {
        data_OUT2_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT2_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0.read();
    } else {
        data_OUT2_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT2_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0.read();
    } else {
        data_OUT2_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        data_OUT2_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0.read();
    } else {
        data_OUT2_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT3_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0.read();
    } else {
        data_OUT3_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0.read();
    } else {
        data_OUT3_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0.read();
    } else {
        data_OUT3_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT3_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0.read();
    } else {
        data_OUT3_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT3_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0.read();
    } else {
        data_OUT3_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        data_OUT3_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0.read();
    } else {
        data_OUT3_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUT4_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0.read();
    } else {
        data_OUT4_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0.read();
    } else {
        data_OUT4_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0.read();
    } else {
        data_OUT4_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUT4_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0.read();
    } else {
        data_OUT4_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUT4_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0.read();
    } else {
        data_OUT4_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        data_OUT4_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0.read();
    } else {
        data_OUT4_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        data_OUT_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        data_OUT_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        data_OUT_M_imag_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        data_OUT_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        data_OUT_M_real_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        data_OUT_M_real_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUTfft_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        data_OUTfft_M_imag_address0 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        data_OUTfft_M_imag_address0 =  (sc_lv<5>) (zext_ln102_fu_2326_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0.read();
    } else {
        data_OUTfft_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUTfft_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        data_OUTfft_M_imag_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0.read();
    } else {
        data_OUTfft_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUTfft_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0.read();
    } else {
        data_OUTfft_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUTfft_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        data_OUTfft_M_real_address0 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        data_OUTfft_M_real_address0 =  (sc_lv<5>) (zext_ln102_fu_2326_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0.read();
    } else {
        data_OUTfft_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUTfft_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        data_OUTfft_M_real_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0.read();
    } else {
        data_OUTfft_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUTfft_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_OUTfft_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0.read();
    } else {
        data_OUTfft_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_grp_FFT0_fu_2234_FFT_stage() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_FFT_stage = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_FFT_stage = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_FFT_stage = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_FFT_stage = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_FFT_stage = ap_const_lv6_1;
    } else {
        grp_FFT0_fu_2234_FFT_stage =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_2234_ap_start() {
    grp_FFT0_fu_2234_ap_start = grp_FFT0_fu_2234_ap_start_reg.read();
}

void FFT::thread_grp_FFT0_fu_2234_data_IN_M_imag_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT4_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT3_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT2_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT1_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT0_M_imag_q0.read();
    } else {
        grp_FFT0_fu_2234_data_IN_M_imag_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_2234_data_IN_M_real_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT4_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT3_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT2_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT1_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT0_M_real_q0.read();
    } else {
        grp_FFT0_fu_2234_data_IN_M_real_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_2234_index_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_index_shift = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_index_shift = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_index_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_index_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_index_shift = ap_const_lv4_4;
    } else {
        grp_FFT0_fu_2234_index_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_grp_FFT0_fu_2234_pass_check() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_pass_check = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_pass_check = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_pass_check = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_pass_check = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_pass_check = ap_const_lv6_10;
    } else {
        grp_FFT0_fu_2234_pass_check =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_2234_pass_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_FFT0_fu_2234_pass_shift = ap_const_lv4_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_FFT0_fu_2234_pass_shift = ap_const_lv4_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_FFT0_fu_2234_pass_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_FFT0_fu_2234_pass_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_FFT0_fu_2234_pass_shift = ap_const_lv4_1;
    } else {
        grp_FFT0_fu_2234_pass_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_grp_bitreverse_fu_2290_ap_start() {
    grp_bitreverse_fu_2290_ap_start = grp_bitreverse_fu_2290_ap_start_reg.read();
}

void FFT::thread_grp_mult_window_fu_2214_ap_start() {
    grp_mult_window_fu_2214_ap_start = grp_mult_window_fu_2214_ap_start_reg.read();
}

void FFT::thread_i_fu_2320_p2() {
    i_fu_2320_p2 = (!i_0_i_reg_2203.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_reg_2203.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_icmp_ln99_fu_2314_p2() {
    icmp_ln99_fu_2314_p2 = (!i_0_i_reg_2203.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_2203.read() == ap_const_lv6_20);
}

void FFT::thread_mag_OUT_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        mag_OUT_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        mag_OUT_address0 = "XXXXX";
    }
}

void FFT::thread_mag_OUT_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        mag_OUT_ce0 = ap_const_logic_1;
    } else {
        mag_OUT_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_mag_OUT_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
        mag_OUT_we0 = ap_const_logic_1;
    } else {
        mag_OUT_we0 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_imag_address0 = grp_bitreverse_fu_2290_prod_IN_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_address0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_address0.read();
    } else {
        prod_IN_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_prod_IN_M_imag_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_imag_address1 = grp_bitreverse_fu_2290_prod_IN_M_imag_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_address1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_address1.read();
    } else {
        prod_IN_M_imag_address1 = "XXXXX";
    }
}

void FFT::thread_prod_IN_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_imag_ce0 = grp_bitreverse_fu_2290_prod_IN_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_ce0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0.read();
    } else {
        prod_IN_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_imag_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_imag_ce1 = grp_bitreverse_fu_2290_prod_IN_M_imag_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_ce1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1.read();
    } else {
        prod_IN_M_imag_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_we0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_we0.read();
    } else {
        prod_IN_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_imag_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_imag_we1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_we1.read();
    } else {
        prod_IN_M_imag_we1 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_real_address0 = grp_bitreverse_fu_2290_prod_IN_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_address0 = grp_mult_window_fu_2214_prod_IN_M_real_2_address0.read();
    } else {
        prod_IN_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_prod_IN_M_real_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_real_address1 = grp_bitreverse_fu_2290_prod_IN_M_real_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_address1 = grp_mult_window_fu_2214_prod_IN_M_real_2_address1.read();
    } else {
        prod_IN_M_real_address1 = "XXXXX";
    }
}

void FFT::thread_prod_IN_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_real_ce0 = grp_bitreverse_fu_2290_prod_IN_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_ce0 = grp_mult_window_fu_2214_prod_IN_M_real_2_ce0.read();
    } else {
        prod_IN_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_real_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        prod_IN_M_real_ce1 = grp_bitreverse_fu_2290_prod_IN_M_real_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_ce1 = grp_mult_window_fu_2214_prod_IN_M_real_2_ce1.read();
    } else {
        prod_IN_M_real_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_we0 = grp_mult_window_fu_2214_prod_IN_M_real_2_we0.read();
    } else {
        prod_IN_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_prod_IN_M_real_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        prod_IN_M_real_we1 = grp_mult_window_fu_2214_prod_IN_M_real_2_we1.read();
    } else {
        prod_IN_M_real_we1 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        xin_M_imag_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_imag_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_imag_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_imag_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_imag_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_imag_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_imag_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_imag_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_imag_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_imag_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_imag_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_imag_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_imag_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_imag_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_imag_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_imag_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_imag_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_imag_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_imag_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_imag_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_imag_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_imag_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_imag_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_imag_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_imag_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_imag_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_imag_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_imag_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_imag_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_imag_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_imag_address0 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        xin_M_imag_address0 = grp_mult_window_fu_2214_data_IN_M_imag_address0.read();
    } else {
        xin_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        xin_M_imag_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        xin_M_imag_ce0 = grp_mult_window_fu_2214_data_IN_M_imag_ce0.read();
    } else {
        xin_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        xin_M_imag_we0 = ap_const_logic_1;
    } else {
        xin_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        xin_M_real_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        xin_M_real_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        xin_M_real_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        xin_M_real_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        xin_M_real_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        xin_M_real_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        xin_M_real_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        xin_M_real_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        xin_M_real_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        xin_M_real_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        xin_M_real_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        xin_M_real_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        xin_M_real_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        xin_M_real_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xin_M_real_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        xin_M_real_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xin_M_real_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xin_M_real_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xin_M_real_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xin_M_real_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xin_M_real_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xin_M_real_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xin_M_real_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        xin_M_real_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        xin_M_real_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        xin_M_real_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xin_M_real_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xin_M_real_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_real_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_real_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_real_address0 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        xin_M_real_address0 = grp_mult_window_fu_2214_data_IN_M_real_address0.read();
    } else {
        xin_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        xin_M_real_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        xin_M_real_ce0 = grp_mult_window_fu_2214_data_IN_M_real_ce0.read();
    } else {
        xin_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        xin_M_real_we0 = ap_const_logic_1;
    } else {
        xin_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_mag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        xout_mag_address0 = ap_const_lv5_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        xout_mag_address0 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        xout_mag_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        xout_mag_address0 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        xout_mag_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        xout_mag_address0 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        xout_mag_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        xout_mag_address0 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        xout_mag_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        xout_mag_address0 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        xout_mag_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        xout_mag_address0 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        xout_mag_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        xout_mag_address0 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        xout_mag_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        xout_mag_address0 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        xout_mag_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        xout_mag_address0 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        xout_mag_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        xout_mag_address0 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        xout_mag_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        xout_mag_address0 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        xout_mag_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        xout_mag_address0 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        xout_mag_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        xout_mag_address0 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        xout_mag_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        xout_mag_address0 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        xout_mag_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        xout_mag_address0 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        xout_mag_address0 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        xout_mag_address0 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read()))) {
        xout_mag_address0 =  (sc_lv<5>) (zext_ln102_reg_2666_pp0_iter10_reg.read());
    } else {
        xout_mag_address0 = "XXXXX";
    }
}

void FFT::thread_xout_mag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read())))) {
        xout_mag_ce0 = ap_const_logic_1;
    } else {
        xout_mag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_mag_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(icmp_ln99_reg_2657_pp0_iter10_reg.read(), ap_const_lv1_0))) {
        xout_mag_we0 = ap_const_logic_1;
    } else {
        xout_mag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_zext_ln102_fu_2326_p1() {
    zext_ln102_fu_2326_p1 = esl_zext<64,6>(i_0_i_reg_2203.read());
}

void FFT::thread_ap_NS_fsm() {
    if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_mult_window_fu_2214_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(grp_bitreverse_fu_2290_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state38;
        } else {
            ap_NS_fsm = ap_ST_fsm_state37;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        if ((esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
            ap_NS_fsm = ap_ST_fsm_state40;
        } else {
            ap_NS_fsm = ap_ST_fsm_state39;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
            ap_NS_fsm = ap_ST_fsm_state46;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(grp_FFT0_fu_2234_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln99_fu_2314_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln99_fu_2314_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state60;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        }
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,81,81>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<81>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void FFT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

