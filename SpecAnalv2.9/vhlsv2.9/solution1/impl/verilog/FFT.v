// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FFT,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.674000,HLS_SYN_LAT=439,HLS_SYN_TPT=none,HLS_SYN_MEM=42,HLS_SYN_DSP=52,HLS_SYN_FF=6112,HLS_SYN_LUT=12493,HLS_VERSION=2020_1}" *)

module FFT (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 81'd1;
parameter    ap_ST_fsm_state2 = 81'd2;
parameter    ap_ST_fsm_state3 = 81'd4;
parameter    ap_ST_fsm_state4 = 81'd8;
parameter    ap_ST_fsm_state5 = 81'd16;
parameter    ap_ST_fsm_state6 = 81'd32;
parameter    ap_ST_fsm_state7 = 81'd64;
parameter    ap_ST_fsm_state8 = 81'd128;
parameter    ap_ST_fsm_state9 = 81'd256;
parameter    ap_ST_fsm_state10 = 81'd512;
parameter    ap_ST_fsm_state11 = 81'd1024;
parameter    ap_ST_fsm_state12 = 81'd2048;
parameter    ap_ST_fsm_state13 = 81'd4096;
parameter    ap_ST_fsm_state14 = 81'd8192;
parameter    ap_ST_fsm_state15 = 81'd16384;
parameter    ap_ST_fsm_state16 = 81'd32768;
parameter    ap_ST_fsm_state17 = 81'd65536;
parameter    ap_ST_fsm_state18 = 81'd131072;
parameter    ap_ST_fsm_state19 = 81'd262144;
parameter    ap_ST_fsm_state20 = 81'd524288;
parameter    ap_ST_fsm_state21 = 81'd1048576;
parameter    ap_ST_fsm_state22 = 81'd2097152;
parameter    ap_ST_fsm_state23 = 81'd4194304;
parameter    ap_ST_fsm_state24 = 81'd8388608;
parameter    ap_ST_fsm_state25 = 81'd16777216;
parameter    ap_ST_fsm_state26 = 81'd33554432;
parameter    ap_ST_fsm_state27 = 81'd67108864;
parameter    ap_ST_fsm_state28 = 81'd134217728;
parameter    ap_ST_fsm_state29 = 81'd268435456;
parameter    ap_ST_fsm_state30 = 81'd536870912;
parameter    ap_ST_fsm_state31 = 81'd1073741824;
parameter    ap_ST_fsm_state32 = 81'd2147483648;
parameter    ap_ST_fsm_state33 = 81'd4294967296;
parameter    ap_ST_fsm_state34 = 81'd8589934592;
parameter    ap_ST_fsm_state35 = 81'd17179869184;
parameter    ap_ST_fsm_state36 = 81'd34359738368;
parameter    ap_ST_fsm_state37 = 81'd68719476736;
parameter    ap_ST_fsm_state38 = 81'd137438953472;
parameter    ap_ST_fsm_state39 = 81'd274877906944;
parameter    ap_ST_fsm_state40 = 81'd549755813888;
parameter    ap_ST_fsm_state41 = 81'd1099511627776;
parameter    ap_ST_fsm_state42 = 81'd2199023255552;
parameter    ap_ST_fsm_state43 = 81'd4398046511104;
parameter    ap_ST_fsm_state44 = 81'd8796093022208;
parameter    ap_ST_fsm_state45 = 81'd17592186044416;
parameter    ap_ST_fsm_state46 = 81'd35184372088832;
parameter    ap_ST_fsm_state47 = 81'd70368744177664;
parameter    ap_ST_fsm_pp0_stage0 = 81'd140737488355328;
parameter    ap_ST_fsm_state60 = 81'd281474976710656;
parameter    ap_ST_fsm_state61 = 81'd562949953421312;
parameter    ap_ST_fsm_state62 = 81'd1125899906842624;
parameter    ap_ST_fsm_state63 = 81'd2251799813685248;
parameter    ap_ST_fsm_state64 = 81'd4503599627370496;
parameter    ap_ST_fsm_state65 = 81'd9007199254740992;
parameter    ap_ST_fsm_state66 = 81'd18014398509481984;
parameter    ap_ST_fsm_state67 = 81'd36028797018963968;
parameter    ap_ST_fsm_state68 = 81'd72057594037927936;
parameter    ap_ST_fsm_state69 = 81'd144115188075855872;
parameter    ap_ST_fsm_state70 = 81'd288230376151711744;
parameter    ap_ST_fsm_state71 = 81'd576460752303423488;
parameter    ap_ST_fsm_state72 = 81'd1152921504606846976;
parameter    ap_ST_fsm_state73 = 81'd2305843009213693952;
parameter    ap_ST_fsm_state74 = 81'd4611686018427387904;
parameter    ap_ST_fsm_state75 = 81'd9223372036854775808;
parameter    ap_ST_fsm_state76 = 81'd18446744073709551616;
parameter    ap_ST_fsm_state77 = 81'd36893488147419103232;
parameter    ap_ST_fsm_state78 = 81'd73786976294838206464;
parameter    ap_ST_fsm_state79 = 81'd147573952589676412928;
parameter    ap_ST_fsm_state80 = 81'd295147905179352825856;
parameter    ap_ST_fsm_state81 = 81'd590295810358705651712;
parameter    ap_ST_fsm_state82 = 81'd1180591620717411303424;
parameter    ap_ST_fsm_state83 = 81'd2361183241434822606848;
parameter    ap_ST_fsm_state84 = 81'd4722366482869645213696;
parameter    ap_ST_fsm_state85 = 81'd9444732965739290427392;
parameter    ap_ST_fsm_state86 = 81'd18889465931478580854784;
parameter    ap_ST_fsm_state87 = 81'd37778931862957161709568;
parameter    ap_ST_fsm_state88 = 81'd75557863725914323419136;
parameter    ap_ST_fsm_state89 = 81'd151115727451828646838272;
parameter    ap_ST_fsm_state90 = 81'd302231454903657293676544;
parameter    ap_ST_fsm_state91 = 81'd604462909807314587353088;
parameter    ap_ST_fsm_state92 = 81'd1208925819614629174706176;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [80:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [4:0] data_IN_M_real_address0;
reg    data_IN_M_real_ce0;
wire   [31:0] data_IN_M_real_q0;
reg   [4:0] data_IN_M_imag_address0;
reg    data_IN_M_imag_ce0;
wire   [31:0] data_IN_M_imag_q0;
wire   [7:0] win_mode;
reg   [4:0] data_OUT_M_real_address0;
reg    data_OUT_M_real_ce0;
reg    data_OUT_M_real_we0;
reg   [4:0] data_OUT_M_imag_address0;
reg    data_OUT_M_imag_ce0;
reg    data_OUT_M_imag_we0;
reg   [4:0] mag_OUT_address0;
reg    mag_OUT_ce0;
reg    mag_OUT_we0;
reg   [4:0] xin_M_real_address0;
reg    xin_M_real_ce0;
reg    xin_M_real_we0;
wire   [31:0] xin_M_real_q0;
wire   [31:0] xin_M_real_q1;
reg   [4:0] xin_M_imag_address0;
reg    xin_M_imag_ce0;
reg    xin_M_imag_we0;
wire   [31:0] xin_M_imag_q0;
wire   [31:0] xin_M_imag_q1;
reg   [4:0] prod_IN_M_real_address0;
reg    prod_IN_M_real_ce0;
reg    prod_IN_M_real_we0;
wire   [31:0] prod_IN_M_real_q0;
reg   [4:0] prod_IN_M_real_address1;
reg    prod_IN_M_real_ce1;
reg    prod_IN_M_real_we1;
wire   [31:0] prod_IN_M_real_q1;
reg   [4:0] prod_IN_M_imag_address0;
reg    prod_IN_M_imag_ce0;
reg    prod_IN_M_imag_we0;
wire   [31:0] prod_IN_M_imag_q0;
reg   [4:0] prod_IN_M_imag_address1;
reg    prod_IN_M_imag_ce1;
reg    prod_IN_M_imag_we1;
wire   [31:0] prod_IN_M_imag_q1;
reg   [4:0] data_OUT0_M_real_address0;
reg    data_OUT0_M_real_ce0;
reg    data_OUT0_M_real_we0;
wire   [31:0] data_OUT0_M_real_q0;
reg    data_OUT0_M_real_ce1;
reg    data_OUT0_M_real_we1;
reg   [4:0] data_OUT0_M_imag_address0;
reg    data_OUT0_M_imag_ce0;
reg    data_OUT0_M_imag_we0;
wire   [31:0] data_OUT0_M_imag_q0;
reg    data_OUT0_M_imag_ce1;
reg    data_OUT0_M_imag_we1;
reg   [4:0] data_OUT1_M_real_address0;
reg    data_OUT1_M_real_ce0;
reg    data_OUT1_M_real_we0;
wire   [31:0] data_OUT1_M_real_q0;
reg   [4:0] data_OUT1_M_imag_address0;
reg    data_OUT1_M_imag_ce0;
reg    data_OUT1_M_imag_we0;
wire   [31:0] data_OUT1_M_imag_q0;
reg   [4:0] data_OUT2_M_real_address0;
reg    data_OUT2_M_real_ce0;
reg    data_OUT2_M_real_we0;
wire   [31:0] data_OUT2_M_real_q0;
reg   [4:0] data_OUT2_M_imag_address0;
reg    data_OUT2_M_imag_ce0;
reg    data_OUT2_M_imag_we0;
wire   [31:0] data_OUT2_M_imag_q0;
reg   [4:0] data_OUT3_M_real_address0;
reg    data_OUT3_M_real_ce0;
reg    data_OUT3_M_real_we0;
wire   [31:0] data_OUT3_M_real_q0;
reg   [4:0] data_OUT3_M_imag_address0;
reg    data_OUT3_M_imag_ce0;
reg    data_OUT3_M_imag_we0;
wire   [31:0] data_OUT3_M_imag_q0;
reg   [4:0] data_OUT4_M_real_address0;
reg    data_OUT4_M_real_ce0;
reg    data_OUT4_M_real_we0;
wire   [31:0] data_OUT4_M_real_q0;
reg   [4:0] data_OUT4_M_imag_address0;
reg    data_OUT4_M_imag_ce0;
reg    data_OUT4_M_imag_we0;
wire   [31:0] data_OUT4_M_imag_q0;
reg   [4:0] data_OUTfft_M_real_address0;
reg    data_OUTfft_M_real_ce0;
reg    data_OUTfft_M_real_we0;
wire   [31:0] data_OUTfft_M_real_q0;
reg   [4:0] data_OUTfft_M_imag_address0;
reg    data_OUTfft_M_imag_ce0;
reg    data_OUTfft_M_imag_we0;
wire   [31:0] data_OUTfft_M_imag_q0;
reg   [4:0] xout_mag_address0;
reg    xout_mag_ce0;
reg    xout_mag_we0;
wire   [31:0] xout_mag_q0;
reg   [5:0] i_0_i_reg_2203;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg   [7:0] win_mode_read_reg_2652;
wire    ap_CS_fsm_state34;
wire   [0:0] icmp_ln99_fu_2314_p2;
reg   [0:0] icmp_ln99_reg_2657;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state48_pp0_stage0_iter0;
wire    ap_block_state49_pp0_stage0_iter1;
wire    ap_block_state50_pp0_stage0_iter2;
wire    ap_block_state51_pp0_stage0_iter3;
wire    ap_block_state52_pp0_stage0_iter4;
wire    ap_block_state53_pp0_stage0_iter5;
wire    ap_block_state54_pp0_stage0_iter6;
wire    ap_block_state55_pp0_stage0_iter7;
wire    ap_block_state56_pp0_stage0_iter8;
wire    ap_block_state57_pp0_stage0_iter9;
wire    ap_block_state58_pp0_stage0_iter10;
wire    ap_block_state59_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter1_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter2_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter3_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter4_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter5_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter6_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter7_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter8_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter9_reg;
reg   [0:0] icmp_ln99_reg_2657_pp0_iter10_reg;
wire   [5:0] i_fu_2320_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln102_fu_2326_p1;
reg   [63:0] zext_ln102_reg_2666;
reg   [63:0] zext_ln102_reg_2666_pp0_iter1_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter2_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter3_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter4_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter5_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter6_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter7_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter8_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter9_reg;
reg   [63:0] zext_ln102_reg_2666_pp0_iter10_reg;
reg   [31:0] data_OUTfft_M_real_1_reg_2681;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] data_OUTfft_M_imag_1_reg_2687;
wire   [31:0] grp_fu_2306_p2;
reg   [31:0] tmp_i_reg_2693;
wire   [31:0] grp_fu_2310_p2;
reg   [31:0] tmp_i_24_reg_2698;
wire   [31:0] grp_fu_2302_p2;
reg   [31:0] tmp_3_i_reg_2703;
wire    ap_CS_fsm_state47;
wire    grp_FFT0_fu_2234_ap_ready;
wire    grp_FFT0_fu_2234_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state48;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
wire    grp_mult_window_fu_2214_ap_start;
wire    grp_mult_window_fu_2214_ap_done;
wire    grp_mult_window_fu_2214_ap_idle;
wire    grp_mult_window_fu_2214_ap_ready;
wire   [4:0] grp_mult_window_fu_2214_data_IN_M_real_address0;
wire    grp_mult_window_fu_2214_data_IN_M_real_ce0;
wire   [4:0] grp_mult_window_fu_2214_data_IN_M_real_address1;
wire    grp_mult_window_fu_2214_data_IN_M_real_ce1;
wire   [4:0] grp_mult_window_fu_2214_data_IN_M_imag_address0;
wire    grp_mult_window_fu_2214_data_IN_M_imag_ce0;
wire   [4:0] grp_mult_window_fu_2214_data_IN_M_imag_address1;
wire    grp_mult_window_fu_2214_data_IN_M_imag_ce1;
wire   [4:0] grp_mult_window_fu_2214_prod_IN_M_real_2_address0;
wire    grp_mult_window_fu_2214_prod_IN_M_real_2_ce0;
wire    grp_mult_window_fu_2214_prod_IN_M_real_2_we0;
wire   [31:0] grp_mult_window_fu_2214_prod_IN_M_real_2_d0;
wire   [4:0] grp_mult_window_fu_2214_prod_IN_M_real_2_address1;
wire    grp_mult_window_fu_2214_prod_IN_M_real_2_ce1;
wire    grp_mult_window_fu_2214_prod_IN_M_real_2_we1;
wire   [31:0] grp_mult_window_fu_2214_prod_IN_M_real_2_d1;
wire   [4:0] grp_mult_window_fu_2214_prod_IN_M_imag_2_address0;
wire    grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0;
wire    grp_mult_window_fu_2214_prod_IN_M_imag_2_we0;
wire   [31:0] grp_mult_window_fu_2214_prod_IN_M_imag_2_d0;
wire   [4:0] grp_mult_window_fu_2214_prod_IN_M_imag_2_address1;
wire    grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1;
wire    grp_mult_window_fu_2214_prod_IN_M_imag_2_we1;
wire   [31:0] grp_mult_window_fu_2214_prod_IN_M_imag_2_d1;
wire    grp_FFT0_fu_2234_ap_start;
wire    grp_FFT0_fu_2234_ap_idle;
reg   [5:0] grp_FFT0_fu_2234_FFT_stage;
reg   [5:0] grp_FFT0_fu_2234_pass_check;
reg   [3:0] grp_FFT0_fu_2234_index_shift;
reg   [3:0] grp_FFT0_fu_2234_pass_shift;
wire   [4:0] grp_FFT0_fu_2234_data_IN_M_real_address0;
wire    grp_FFT0_fu_2234_data_IN_M_real_ce0;
reg   [31:0] grp_FFT0_fu_2234_data_IN_M_real_q0;
wire   [4:0] grp_FFT0_fu_2234_data_IN_M_imag_address0;
wire    grp_FFT0_fu_2234_data_IN_M_imag_ce0;
reg   [31:0] grp_FFT0_fu_2234_data_IN_M_imag_q0;
wire   [4:0] grp_FFT0_fu_2234_data_OUT_M_real_address0;
wire    grp_FFT0_fu_2234_data_OUT_M_real_ce0;
wire    grp_FFT0_fu_2234_data_OUT_M_real_we0;
wire   [31:0] grp_FFT0_fu_2234_data_OUT_M_real_d0;
wire   [4:0] grp_FFT0_fu_2234_data_OUT_M_imag_address0;
wire    grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
wire    grp_FFT0_fu_2234_data_OUT_M_imag_we0;
wire   [31:0] grp_FFT0_fu_2234_data_OUT_M_imag_d0;
wire    grp_bitreverse_fu_2290_ap_start;
wire    grp_bitreverse_fu_2290_ap_done;
wire    grp_bitreverse_fu_2290_ap_idle;
wire    grp_bitreverse_fu_2290_ap_ready;
wire   [4:0] grp_bitreverse_fu_2290_prod_IN_M_real_address0;
wire    grp_bitreverse_fu_2290_prod_IN_M_real_ce0;
wire   [4:0] grp_bitreverse_fu_2290_prod_IN_M_real_address1;
wire    grp_bitreverse_fu_2290_prod_IN_M_real_ce1;
wire   [4:0] grp_bitreverse_fu_2290_data_OUT0_M_real_address0;
wire    grp_bitreverse_fu_2290_data_OUT0_M_real_ce0;
wire    grp_bitreverse_fu_2290_data_OUT0_M_real_we0;
wire   [31:0] grp_bitreverse_fu_2290_data_OUT0_M_real_d0;
wire   [4:0] grp_bitreverse_fu_2290_data_OUT0_M_real_address1;
wire    grp_bitreverse_fu_2290_data_OUT0_M_real_ce1;
wire    grp_bitreverse_fu_2290_data_OUT0_M_real_we1;
wire   [31:0] grp_bitreverse_fu_2290_data_OUT0_M_real_d1;
wire   [4:0] grp_bitreverse_fu_2290_prod_IN_M_imag_address0;
wire    grp_bitreverse_fu_2290_prod_IN_M_imag_ce0;
wire   [4:0] grp_bitreverse_fu_2290_prod_IN_M_imag_address1;
wire    grp_bitreverse_fu_2290_prod_IN_M_imag_ce1;
wire   [4:0] grp_bitreverse_fu_2290_data_OUT0_M_imag_address0;
wire    grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0;
wire    grp_bitreverse_fu_2290_data_OUT0_M_imag_we0;
wire   [31:0] grp_bitreverse_fu_2290_data_OUT0_M_imag_d0;
wire   [4:0] grp_bitreverse_fu_2290_data_OUT0_M_imag_address1;
wire    grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1;
wire    grp_bitreverse_fu_2290_data_OUT0_M_imag_we1;
wire   [31:0] grp_bitreverse_fu_2290_data_OUT0_M_imag_d1;
reg    grp_mult_window_fu_2214_ap_start_reg;
wire    ap_CS_fsm_state35;
reg    grp_FFT0_fu_2234_ap_start_reg;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
reg    grp_bitreverse_fu_2290_ap_start_reg;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state60;
reg   [80:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 81'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 grp_mult_window_fu_2214_ap_start_reg = 1'b0;
#0 grp_FFT0_fu_2234_ap_start_reg = 1'b0;
#0 grp_bitreverse_fu_2290_ap_start_reg = 1'b0;
end

FFT_xin_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xin_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xin_M_real_address0),
    .ce0(xin_M_real_ce0),
    .we0(xin_M_real_we0),
    .d0(data_IN_M_real_q0),
    .q0(xin_M_real_q0),
    .address1(grp_mult_window_fu_2214_data_IN_M_real_address1),
    .ce1(grp_mult_window_fu_2214_data_IN_M_real_ce1),
    .q1(xin_M_real_q1)
);

FFT_xin_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xin_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xin_M_imag_address0),
    .ce0(xin_M_imag_ce0),
    .we0(xin_M_imag_we0),
    .d0(data_IN_M_imag_q0),
    .q0(xin_M_imag_q0),
    .address1(grp_mult_window_fu_2214_data_IN_M_imag_address1),
    .ce1(grp_mult_window_fu_2214_data_IN_M_imag_ce1),
    .q1(xin_M_imag_q1)
);

FFT_prod_IN_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
prod_IN_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prod_IN_M_real_address0),
    .ce0(prod_IN_M_real_ce0),
    .we0(prod_IN_M_real_we0),
    .d0(grp_mult_window_fu_2214_prod_IN_M_real_2_d0),
    .q0(prod_IN_M_real_q0),
    .address1(prod_IN_M_real_address1),
    .ce1(prod_IN_M_real_ce1),
    .we1(prod_IN_M_real_we1),
    .d1(grp_mult_window_fu_2214_prod_IN_M_real_2_d1),
    .q1(prod_IN_M_real_q1)
);

FFT_prod_IN_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
prod_IN_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prod_IN_M_imag_address0),
    .ce0(prod_IN_M_imag_ce0),
    .we0(prod_IN_M_imag_we0),
    .d0(grp_mult_window_fu_2214_prod_IN_M_imag_2_d0),
    .q0(prod_IN_M_imag_q0),
    .address1(prod_IN_M_imag_address1),
    .ce1(prod_IN_M_imag_ce1),
    .we1(prod_IN_M_imag_we1),
    .d1(grp_mult_window_fu_2214_prod_IN_M_imag_2_d1),
    .q1(prod_IN_M_imag_q1)
);

FFT_data_OUT0_M_rg8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT0_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT0_M_real_address0),
    .ce0(data_OUT0_M_real_ce0),
    .we0(data_OUT0_M_real_we0),
    .d0(grp_bitreverse_fu_2290_data_OUT0_M_real_d0),
    .q0(data_OUT0_M_real_q0),
    .address1(grp_bitreverse_fu_2290_data_OUT0_M_real_address1),
    .ce1(data_OUT0_M_real_ce1),
    .we1(data_OUT0_M_real_we1),
    .d1(grp_bitreverse_fu_2290_data_OUT0_M_real_d1)
);

FFT_data_OUT0_M_rg8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT0_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT0_M_imag_address0),
    .ce0(data_OUT0_M_imag_ce0),
    .we0(data_OUT0_M_imag_we0),
    .d0(grp_bitreverse_fu_2290_data_OUT0_M_imag_d0),
    .q0(data_OUT0_M_imag_q0),
    .address1(grp_bitreverse_fu_2290_data_OUT0_M_imag_address1),
    .ce1(data_OUT0_M_imag_ce1),
    .we1(data_OUT0_M_imag_we1),
    .d1(grp_bitreverse_fu_2290_data_OUT0_M_imag_d1)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT1_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT1_M_real_address0),
    .ce0(data_OUT1_M_real_ce0),
    .we0(data_OUT1_M_real_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .q0(data_OUT1_M_real_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT1_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT1_M_imag_address0),
    .ce0(data_OUT1_M_imag_ce0),
    .we0(data_OUT1_M_imag_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0),
    .q0(data_OUT1_M_imag_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT2_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT2_M_real_address0),
    .ce0(data_OUT2_M_real_ce0),
    .we0(data_OUT2_M_real_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .q0(data_OUT2_M_real_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT2_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT2_M_imag_address0),
    .ce0(data_OUT2_M_imag_ce0),
    .we0(data_OUT2_M_imag_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0),
    .q0(data_OUT2_M_imag_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT3_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT3_M_real_address0),
    .ce0(data_OUT3_M_real_ce0),
    .we0(data_OUT3_M_real_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .q0(data_OUT3_M_real_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT3_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT3_M_imag_address0),
    .ce0(data_OUT3_M_imag_ce0),
    .we0(data_OUT3_M_imag_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0),
    .q0(data_OUT3_M_imag_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT4_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT4_M_real_address0),
    .ce0(data_OUT4_M_real_ce0),
    .we0(data_OUT4_M_real_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .q0(data_OUT4_M_real_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT4_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT4_M_imag_address0),
    .ce0(data_OUT4_M_imag_ce0),
    .we0(data_OUT4_M_imag_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0),
    .q0(data_OUT4_M_imag_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUTfft_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUTfft_M_real_address0),
    .ce0(data_OUTfft_M_real_ce0),
    .we0(data_OUTfft_M_real_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .q0(data_OUTfft_M_real_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUTfft_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUTfft_M_imag_address0),
    .ce0(data_OUTfft_M_imag_ce0),
    .we0(data_OUTfft_M_imag_we0),
    .d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0),
    .q0(data_OUTfft_M_imag_q0)
);

FFT_data_OUT1_M_ribs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xout_mag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xout_mag_address0),
    .ce0(xout_mag_ce0),
    .we0(xout_mag_we0),
    .d0(tmp_3_i_reg_2703),
    .q0(xout_mag_q0)
);

FFT_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
FFT_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .data_IN_M_real_address0(data_IN_M_real_address0),
    .data_IN_M_real_ce0(data_IN_M_real_ce0),
    .data_IN_M_real_q0(data_IN_M_real_q0),
    .data_IN_M_imag_address0(data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(data_IN_M_imag_q0),
    .win_mode(win_mode),
    .data_OUT_M_real_address0(data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(data_OUT_M_real_we0),
    .data_OUT_M_real_d0(data_OUTfft_M_real_q0),
    .data_OUT_M_imag_address0(data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(data_OUTfft_M_imag_q0),
    .mag_OUT_address0(mag_OUT_address0),
    .mag_OUT_ce0(mag_OUT_ce0),
    .mag_OUT_we0(mag_OUT_we0),
    .mag_OUT_d0(xout_mag_q0)
);

mult_window grp_mult_window_fu_2214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mult_window_fu_2214_ap_start),
    .ap_done(grp_mult_window_fu_2214_ap_done),
    .ap_idle(grp_mult_window_fu_2214_ap_idle),
    .ap_ready(grp_mult_window_fu_2214_ap_ready),
    .data_IN_M_real_address0(grp_mult_window_fu_2214_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_mult_window_fu_2214_data_IN_M_real_ce0),
    .data_IN_M_real_q0(xin_M_real_q0),
    .data_IN_M_real_address1(grp_mult_window_fu_2214_data_IN_M_real_address1),
    .data_IN_M_real_ce1(grp_mult_window_fu_2214_data_IN_M_real_ce1),
    .data_IN_M_real_q1(xin_M_real_q1),
    .data_IN_M_imag_address0(grp_mult_window_fu_2214_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_mult_window_fu_2214_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(xin_M_imag_q0),
    .data_IN_M_imag_address1(grp_mult_window_fu_2214_data_IN_M_imag_address1),
    .data_IN_M_imag_ce1(grp_mult_window_fu_2214_data_IN_M_imag_ce1),
    .data_IN_M_imag_q1(xin_M_imag_q1),
    .win_mode(win_mode_read_reg_2652),
    .prod_IN_M_real_2_address0(grp_mult_window_fu_2214_prod_IN_M_real_2_address0),
    .prod_IN_M_real_2_ce0(grp_mult_window_fu_2214_prod_IN_M_real_2_ce0),
    .prod_IN_M_real_2_we0(grp_mult_window_fu_2214_prod_IN_M_real_2_we0),
    .prod_IN_M_real_2_d0(grp_mult_window_fu_2214_prod_IN_M_real_2_d0),
    .prod_IN_M_real_2_address1(grp_mult_window_fu_2214_prod_IN_M_real_2_address1),
    .prod_IN_M_real_2_ce1(grp_mult_window_fu_2214_prod_IN_M_real_2_ce1),
    .prod_IN_M_real_2_we1(grp_mult_window_fu_2214_prod_IN_M_real_2_we1),
    .prod_IN_M_real_2_d1(grp_mult_window_fu_2214_prod_IN_M_real_2_d1),
    .prod_IN_M_imag_2_address0(grp_mult_window_fu_2214_prod_IN_M_imag_2_address0),
    .prod_IN_M_imag_2_ce0(grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0),
    .prod_IN_M_imag_2_we0(grp_mult_window_fu_2214_prod_IN_M_imag_2_we0),
    .prod_IN_M_imag_2_d0(grp_mult_window_fu_2214_prod_IN_M_imag_2_d0),
    .prod_IN_M_imag_2_address1(grp_mult_window_fu_2214_prod_IN_M_imag_2_address1),
    .prod_IN_M_imag_2_ce1(grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1),
    .prod_IN_M_imag_2_we1(grp_mult_window_fu_2214_prod_IN_M_imag_2_we1),
    .prod_IN_M_imag_2_d1(grp_mult_window_fu_2214_prod_IN_M_imag_2_d1)
);

FFT0 grp_FFT0_fu_2234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT0_fu_2234_ap_start),
    .ap_done(grp_FFT0_fu_2234_ap_done),
    .ap_idle(grp_FFT0_fu_2234_ap_idle),
    .ap_ready(grp_FFT0_fu_2234_ap_ready),
    .FFT_stage(grp_FFT0_fu_2234_FFT_stage),
    .pass_check(grp_FFT0_fu_2234_pass_check),
    .index_shift(grp_FFT0_fu_2234_index_shift),
    .pass_shift(grp_FFT0_fu_2234_pass_shift),
    .data_IN_M_real_address0(grp_FFT0_fu_2234_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_FFT0_fu_2234_data_IN_M_real_ce0),
    .data_IN_M_real_q0(grp_FFT0_fu_2234_data_IN_M_real_q0),
    .data_IN_M_imag_address0(grp_FFT0_fu_2234_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_FFT0_fu_2234_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(grp_FFT0_fu_2234_data_IN_M_imag_q0),
    .data_OUT_M_real_address0(grp_FFT0_fu_2234_data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(grp_FFT0_fu_2234_data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(grp_FFT0_fu_2234_data_OUT_M_real_we0),
    .data_OUT_M_real_d0(grp_FFT0_fu_2234_data_OUT_M_real_d0),
    .data_OUT_M_imag_address0(grp_FFT0_fu_2234_data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(grp_FFT0_fu_2234_data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(grp_FFT0_fu_2234_data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(grp_FFT0_fu_2234_data_OUT_M_imag_d0)
);

bitreverse grp_bitreverse_fu_2290(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bitreverse_fu_2290_ap_start),
    .ap_done(grp_bitreverse_fu_2290_ap_done),
    .ap_idle(grp_bitreverse_fu_2290_ap_idle),
    .ap_ready(grp_bitreverse_fu_2290_ap_ready),
    .prod_IN_M_real_address0(grp_bitreverse_fu_2290_prod_IN_M_real_address0),
    .prod_IN_M_real_ce0(grp_bitreverse_fu_2290_prod_IN_M_real_ce0),
    .prod_IN_M_real_q0(prod_IN_M_real_q0),
    .prod_IN_M_real_address1(grp_bitreverse_fu_2290_prod_IN_M_real_address1),
    .prod_IN_M_real_ce1(grp_bitreverse_fu_2290_prod_IN_M_real_ce1),
    .prod_IN_M_real_q1(prod_IN_M_real_q1),
    .data_OUT0_M_real_address0(grp_bitreverse_fu_2290_data_OUT0_M_real_address0),
    .data_OUT0_M_real_ce0(grp_bitreverse_fu_2290_data_OUT0_M_real_ce0),
    .data_OUT0_M_real_we0(grp_bitreverse_fu_2290_data_OUT0_M_real_we0),
    .data_OUT0_M_real_d0(grp_bitreverse_fu_2290_data_OUT0_M_real_d0),
    .data_OUT0_M_real_address1(grp_bitreverse_fu_2290_data_OUT0_M_real_address1),
    .data_OUT0_M_real_ce1(grp_bitreverse_fu_2290_data_OUT0_M_real_ce1),
    .data_OUT0_M_real_we1(grp_bitreverse_fu_2290_data_OUT0_M_real_we1),
    .data_OUT0_M_real_d1(grp_bitreverse_fu_2290_data_OUT0_M_real_d1),
    .prod_IN_M_imag_address0(grp_bitreverse_fu_2290_prod_IN_M_imag_address0),
    .prod_IN_M_imag_ce0(grp_bitreverse_fu_2290_prod_IN_M_imag_ce0),
    .prod_IN_M_imag_q0(prod_IN_M_imag_q0),
    .prod_IN_M_imag_address1(grp_bitreverse_fu_2290_prod_IN_M_imag_address1),
    .prod_IN_M_imag_ce1(grp_bitreverse_fu_2290_prod_IN_M_imag_ce1),
    .prod_IN_M_imag_q1(prod_IN_M_imag_q1),
    .data_OUT0_M_imag_address0(grp_bitreverse_fu_2290_data_OUT0_M_imag_address0),
    .data_OUT0_M_imag_ce0(grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0),
    .data_OUT0_M_imag_we0(grp_bitreverse_fu_2290_data_OUT0_M_imag_we0),
    .data_OUT0_M_imag_d0(grp_bitreverse_fu_2290_data_OUT0_M_imag_d0),
    .data_OUT0_M_imag_address1(grp_bitreverse_fu_2290_data_OUT0_M_imag_address1),
    .data_OUT0_M_imag_ce1(grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1),
    .data_OUT0_M_imag_we1(grp_bitreverse_fu_2290_data_OUT0_M_imag_we1),
    .data_OUT0_M_imag_d1(grp_bitreverse_fu_2290_data_OUT0_M_imag_d1)
);

FFT_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fadd_32ns_32ndEe_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_reg_2693),
    .din1(tmp_i_24_reg_2698),
    .ce(1'b1),
    .dout(grp_fu_2302_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(data_OUTfft_M_real_1_reg_2681),
    .din1(data_OUTfft_M_real_1_reg_2681),
    .ce(1'b1),
    .dout(grp_fu_2306_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(data_OUTfft_M_imag_1_reg_2687),
    .din1(data_OUTfft_M_imag_1_reg_2687),
    .ce(1'b1),
    .dout(grp_fu_2310_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state48) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state48)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT0_fu_2234_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38))) begin
            grp_FFT0_fu_2234_ap_start_reg <= 1'b1;
        end else if ((grp_FFT0_fu_2234_ap_ready == 1'b1)) begin
            grp_FFT0_fu_2234_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bitreverse_fu_2290_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_bitreverse_fu_2290_ap_start_reg <= 1'b1;
        end else if ((grp_bitreverse_fu_2290_ap_ready == 1'b1)) begin
            grp_bitreverse_fu_2290_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mult_window_fu_2214_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            grp_mult_window_fu_2214_ap_start_reg <= 1'b1;
        end else if ((grp_mult_window_fu_2214_ap_ready == 1'b1)) begin
            grp_mult_window_fu_2214_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln99_fu_2314_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_2203 <= i_fu_2320_p2;
    end else if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        i_0_i_reg_2203 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln99_reg_2657 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_OUTfft_M_imag_1_reg_2687 <= data_OUTfft_M_imag_q0;
        data_OUTfft_M_real_1_reg_2681 <= data_OUTfft_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln99_reg_2657 <= icmp_ln99_fu_2314_p2;
        icmp_ln99_reg_2657_pp0_iter1_reg <= icmp_ln99_reg_2657;
        zext_ln102_reg_2666_pp0_iter1_reg[5 : 0] <= zext_ln102_reg_2666[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln99_reg_2657_pp0_iter10_reg <= icmp_ln99_reg_2657_pp0_iter9_reg;
        icmp_ln99_reg_2657_pp0_iter2_reg <= icmp_ln99_reg_2657_pp0_iter1_reg;
        icmp_ln99_reg_2657_pp0_iter3_reg <= icmp_ln99_reg_2657_pp0_iter2_reg;
        icmp_ln99_reg_2657_pp0_iter4_reg <= icmp_ln99_reg_2657_pp0_iter3_reg;
        icmp_ln99_reg_2657_pp0_iter5_reg <= icmp_ln99_reg_2657_pp0_iter4_reg;
        icmp_ln99_reg_2657_pp0_iter6_reg <= icmp_ln99_reg_2657_pp0_iter5_reg;
        icmp_ln99_reg_2657_pp0_iter7_reg <= icmp_ln99_reg_2657_pp0_iter6_reg;
        icmp_ln99_reg_2657_pp0_iter8_reg <= icmp_ln99_reg_2657_pp0_iter7_reg;
        icmp_ln99_reg_2657_pp0_iter9_reg <= icmp_ln99_reg_2657_pp0_iter8_reg;
        zext_ln102_reg_2666_pp0_iter10_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter9_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter2_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter1_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter3_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter2_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter4_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter3_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter5_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter4_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter6_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter5_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter7_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter6_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter8_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter7_reg[5 : 0];
        zext_ln102_reg_2666_pp0_iter9_reg[5 : 0] <= zext_ln102_reg_2666_pp0_iter8_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_reg_2657_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_i_reg_2703 <= grp_fu_2302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_reg_2657_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_24_reg_2698 <= grp_fu_2310_p2;
        tmp_i_reg_2693 <= grp_fu_2306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        win_mode_read_reg_2652 <= win_mode;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln99_fu_2314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln102_reg_2666[5 : 0] <= zext_ln102_fu_2326_p1[5 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln99_fu_2314_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        data_IN_M_imag_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        data_IN_M_imag_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        data_IN_M_imag_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        data_IN_M_imag_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        data_IN_M_imag_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        data_IN_M_imag_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        data_IN_M_imag_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        data_IN_M_imag_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        data_IN_M_imag_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        data_IN_M_imag_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        data_IN_M_imag_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        data_IN_M_imag_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_IN_M_imag_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        data_IN_M_imag_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        data_IN_M_imag_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        data_IN_M_imag_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        data_IN_M_imag_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        data_IN_M_imag_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_IN_M_imag_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_IN_M_imag_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        data_IN_M_imag_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_IN_M_imag_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_IN_M_imag_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_IN_M_imag_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_IN_M_imag_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_IN_M_imag_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_IN_M_imag_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_IN_M_imag_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_IN_M_imag_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_IN_M_imag_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        data_IN_M_imag_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        data_IN_M_imag_address0 = 64'd0;
    end else begin
        data_IN_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_IN_M_imag_ce0 = 1'b1;
    end else begin
        data_IN_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        data_IN_M_real_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        data_IN_M_real_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        data_IN_M_real_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        data_IN_M_real_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        data_IN_M_real_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        data_IN_M_real_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        data_IN_M_real_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        data_IN_M_real_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        data_IN_M_real_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        data_IN_M_real_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        data_IN_M_real_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        data_IN_M_real_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_IN_M_real_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        data_IN_M_real_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        data_IN_M_real_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        data_IN_M_real_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        data_IN_M_real_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        data_IN_M_real_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_IN_M_real_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_IN_M_real_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        data_IN_M_real_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_IN_M_real_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_IN_M_real_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_IN_M_real_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_IN_M_real_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_IN_M_real_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_IN_M_real_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_IN_M_real_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_IN_M_real_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_IN_M_real_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        data_IN_M_real_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        data_IN_M_real_address0 = 64'd0;
    end else begin
        data_IN_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_IN_M_real_ce0 = 1'b1;
    end else begin
        data_IN_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_imag_address0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT0_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0;
    end else begin
        data_OUT0_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_imag_ce0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT0_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0;
    end else begin
        data_OUT0_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_imag_ce1 = grp_bitreverse_fu_2290_data_OUT0_M_imag_ce1;
    end else begin
        data_OUT0_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_imag_we0 = grp_bitreverse_fu_2290_data_OUT0_M_imag_we0;
    end else begin
        data_OUT0_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_imag_we1 = grp_bitreverse_fu_2290_data_OUT0_M_imag_we1;
    end else begin
        data_OUT0_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_real_address0 = grp_bitreverse_fu_2290_data_OUT0_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT0_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0;
    end else begin
        data_OUT0_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_real_ce0 = grp_bitreverse_fu_2290_data_OUT0_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT0_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0;
    end else begin
        data_OUT0_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_real_ce1 = grp_bitreverse_fu_2290_data_OUT0_M_real_ce1;
    end else begin
        data_OUT0_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_real_we0 = grp_bitreverse_fu_2290_data_OUT0_M_real_we0;
    end else begin
        data_OUT0_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_OUT0_M_real_we1 = grp_bitreverse_fu_2290_data_OUT0_M_real_we1;
    end else begin
        data_OUT0_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT1_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0;
    end else begin
        data_OUT1_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0;
    end else begin
        data_OUT1_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0;
    end else begin
        data_OUT1_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT1_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0;
    end else begin
        data_OUT1_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT1_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0;
    end else begin
        data_OUT1_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_OUT1_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0;
    end else begin
        data_OUT1_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT2_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0;
    end else begin
        data_OUT2_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0;
    end else begin
        data_OUT2_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0;
    end else begin
        data_OUT2_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT2_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0;
    end else begin
        data_OUT2_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT2_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0;
    end else begin
        data_OUT2_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        data_OUT2_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0;
    end else begin
        data_OUT2_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT3_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0;
    end else begin
        data_OUT3_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0;
    end else begin
        data_OUT3_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0;
    end else begin
        data_OUT3_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT3_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0;
    end else begin
        data_OUT3_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT3_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0;
    end else begin
        data_OUT3_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        data_OUT3_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0;
    end else begin
        data_OUT3_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUT4_M_imag_address0 = grp_FFT0_fu_2234_data_IN_M_imag_address0;
    end else begin
        data_OUT4_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_2234_data_IN_M_imag_ce0;
    end else begin
        data_OUT4_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0;
    end else begin
        data_OUT4_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUT4_M_real_address0 = grp_FFT0_fu_2234_data_IN_M_real_address0;
    end else begin
        data_OUT4_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUT4_M_real_ce0 = grp_FFT0_fu_2234_data_IN_M_real_ce0;
    end else begin
        data_OUT4_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        data_OUT4_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0;
    end else begin
        data_OUT4_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        data_OUT_M_imag_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        data_OUT_M_imag_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        data_OUT_M_imag_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        data_OUT_M_imag_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        data_OUT_M_imag_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        data_OUT_M_imag_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        data_OUT_M_imag_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        data_OUT_M_imag_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        data_OUT_M_imag_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        data_OUT_M_imag_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        data_OUT_M_imag_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        data_OUT_M_imag_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        data_OUT_M_imag_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        data_OUT_M_imag_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        data_OUT_M_imag_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        data_OUT_M_imag_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        data_OUT_M_imag_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        data_OUT_M_imag_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        data_OUT_M_imag_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        data_OUT_M_imag_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        data_OUT_M_imag_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        data_OUT_M_imag_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        data_OUT_M_imag_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        data_OUT_M_imag_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        data_OUT_M_imag_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        data_OUT_M_imag_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        data_OUT_M_imag_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        data_OUT_M_imag_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        data_OUT_M_imag_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        data_OUT_M_imag_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        data_OUT_M_imag_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        data_OUT_M_imag_address0 = 64'd0;
    end else begin
        data_OUT_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        data_OUT_M_imag_ce0 = 1'b1;
    end else begin
        data_OUT_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        data_OUT_M_imag_we0 = 1'b1;
    end else begin
        data_OUT_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        data_OUT_M_real_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        data_OUT_M_real_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        data_OUT_M_real_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        data_OUT_M_real_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        data_OUT_M_real_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        data_OUT_M_real_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        data_OUT_M_real_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        data_OUT_M_real_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        data_OUT_M_real_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        data_OUT_M_real_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        data_OUT_M_real_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        data_OUT_M_real_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        data_OUT_M_real_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        data_OUT_M_real_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        data_OUT_M_real_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        data_OUT_M_real_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        data_OUT_M_real_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        data_OUT_M_real_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        data_OUT_M_real_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        data_OUT_M_real_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        data_OUT_M_real_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        data_OUT_M_real_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        data_OUT_M_real_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        data_OUT_M_real_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        data_OUT_M_real_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        data_OUT_M_real_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        data_OUT_M_real_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        data_OUT_M_real_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        data_OUT_M_real_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        data_OUT_M_real_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        data_OUT_M_real_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        data_OUT_M_real_address0 = 64'd0;
    end else begin
        data_OUT_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        data_OUT_M_real_ce0 = 1'b1;
    end else begin
        data_OUT_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        data_OUT_M_real_we0 = 1'b1;
    end else begin
        data_OUT_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        data_OUTfft_M_imag_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        data_OUTfft_M_imag_address0 = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        data_OUTfft_M_imag_address0 = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        data_OUTfft_M_imag_address0 = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        data_OUTfft_M_imag_address0 = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        data_OUTfft_M_imag_address0 = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        data_OUTfft_M_imag_address0 = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        data_OUTfft_M_imag_address0 = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        data_OUTfft_M_imag_address0 = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        data_OUTfft_M_imag_address0 = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        data_OUTfft_M_imag_address0 = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        data_OUTfft_M_imag_address0 = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        data_OUTfft_M_imag_address0 = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        data_OUTfft_M_imag_address0 = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        data_OUTfft_M_imag_address0 = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        data_OUTfft_M_imag_address0 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        data_OUTfft_M_imag_address0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        data_OUTfft_M_imag_address0 = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        data_OUTfft_M_imag_address0 = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        data_OUTfft_M_imag_address0 = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        data_OUTfft_M_imag_address0 = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        data_OUTfft_M_imag_address0 = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        data_OUTfft_M_imag_address0 = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        data_OUTfft_M_imag_address0 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        data_OUTfft_M_imag_address0 = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        data_OUTfft_M_imag_address0 = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        data_OUTfft_M_imag_address0 = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        data_OUTfft_M_imag_address0 = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        data_OUTfft_M_imag_address0 = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        data_OUTfft_M_imag_address0 = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        data_OUTfft_M_imag_address0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        data_OUTfft_M_imag_address0 = 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_OUTfft_M_imag_address0 = zext_ln102_fu_2326_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_imag_address0 = grp_FFT0_fu_2234_data_OUT_M_imag_address0;
    end else begin
        data_OUTfft_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_OUTfft_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_imag_ce0 = grp_FFT0_fu_2234_data_OUT_M_imag_ce0;
    end else begin
        data_OUTfft_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_imag_we0 = grp_FFT0_fu_2234_data_OUT_M_imag_we0;
    end else begin
        data_OUTfft_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        data_OUTfft_M_real_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        data_OUTfft_M_real_address0 = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        data_OUTfft_M_real_address0 = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        data_OUTfft_M_real_address0 = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        data_OUTfft_M_real_address0 = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        data_OUTfft_M_real_address0 = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        data_OUTfft_M_real_address0 = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        data_OUTfft_M_real_address0 = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        data_OUTfft_M_real_address0 = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        data_OUTfft_M_real_address0 = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        data_OUTfft_M_real_address0 = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        data_OUTfft_M_real_address0 = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        data_OUTfft_M_real_address0 = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        data_OUTfft_M_real_address0 = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        data_OUTfft_M_real_address0 = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        data_OUTfft_M_real_address0 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        data_OUTfft_M_real_address0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        data_OUTfft_M_real_address0 = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        data_OUTfft_M_real_address0 = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        data_OUTfft_M_real_address0 = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        data_OUTfft_M_real_address0 = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        data_OUTfft_M_real_address0 = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        data_OUTfft_M_real_address0 = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        data_OUTfft_M_real_address0 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        data_OUTfft_M_real_address0 = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        data_OUTfft_M_real_address0 = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        data_OUTfft_M_real_address0 = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        data_OUTfft_M_real_address0 = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        data_OUTfft_M_real_address0 = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        data_OUTfft_M_real_address0 = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        data_OUTfft_M_real_address0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        data_OUTfft_M_real_address0 = 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_OUTfft_M_real_address0 = zext_ln102_fu_2326_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_real_address0 = grp_FFT0_fu_2234_data_OUT_M_real_address0;
    end else begin
        data_OUTfft_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_OUTfft_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_real_ce0 = grp_FFT0_fu_2234_data_OUT_M_real_ce0;
    end else begin
        data_OUTfft_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        data_OUTfft_M_real_we0 = grp_FFT0_fu_2234_data_OUT_M_real_we0;
    end else begin
        data_OUTfft_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_FFT_stage = 6'd16;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_FFT_stage = 6'd8;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_FFT_stage = 6'd4;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_FFT_stage = 6'd2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_FFT_stage = 6'd1;
    end else begin
        grp_FFT0_fu_2234_FFT_stage = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT4_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT3_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT2_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT1_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = data_OUT0_M_imag_q0;
    end else begin
        grp_FFT0_fu_2234_data_IN_M_imag_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT4_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT3_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT2_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT1_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = data_OUT0_M_real_q0;
    end else begin
        grp_FFT0_fu_2234_data_IN_M_real_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_index_shift = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_index_shift = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_index_shift = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_index_shift = 4'd3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_index_shift = 4'd4;
    end else begin
        grp_FFT0_fu_2234_index_shift = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_pass_check = 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_pass_check = 6'd2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_pass_check = 6'd4;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_pass_check = 6'd8;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_pass_check = 6'd16;
    end else begin
        grp_FFT0_fu_2234_pass_check = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_FFT0_fu_2234_pass_shift = 4'd5;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_FFT0_fu_2234_pass_shift = 4'd4;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_FFT0_fu_2234_pass_shift = 4'd3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_FFT0_fu_2234_pass_shift = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_FFT0_fu_2234_pass_shift = 4'd1;
    end else begin
        grp_FFT0_fu_2234_pass_shift = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        mag_OUT_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        mag_OUT_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        mag_OUT_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        mag_OUT_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        mag_OUT_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        mag_OUT_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        mag_OUT_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        mag_OUT_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        mag_OUT_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        mag_OUT_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        mag_OUT_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        mag_OUT_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        mag_OUT_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        mag_OUT_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        mag_OUT_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        mag_OUT_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        mag_OUT_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        mag_OUT_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        mag_OUT_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        mag_OUT_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        mag_OUT_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        mag_OUT_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        mag_OUT_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        mag_OUT_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        mag_OUT_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        mag_OUT_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        mag_OUT_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        mag_OUT_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        mag_OUT_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        mag_OUT_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        mag_OUT_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        mag_OUT_address0 = 64'd0;
    end else begin
        mag_OUT_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        mag_OUT_ce0 = 1'b1;
    end else begin
        mag_OUT_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        mag_OUT_we0 = 1'b1;
    end else begin
        mag_OUT_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_imag_address0 = grp_bitreverse_fu_2290_prod_IN_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_address0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_address0;
    end else begin
        prod_IN_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_imag_address1 = grp_bitreverse_fu_2290_prod_IN_M_imag_address1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_address1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_address1;
    end else begin
        prod_IN_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_imag_ce0 = grp_bitreverse_fu_2290_prod_IN_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_ce0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_ce0;
    end else begin
        prod_IN_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_imag_ce1 = grp_bitreverse_fu_2290_prod_IN_M_imag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_ce1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_ce1;
    end else begin
        prod_IN_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_we0 = grp_mult_window_fu_2214_prod_IN_M_imag_2_we0;
    end else begin
        prod_IN_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_imag_we1 = grp_mult_window_fu_2214_prod_IN_M_imag_2_we1;
    end else begin
        prod_IN_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_real_address0 = grp_bitreverse_fu_2290_prod_IN_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_address0 = grp_mult_window_fu_2214_prod_IN_M_real_2_address0;
    end else begin
        prod_IN_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_real_address1 = grp_bitreverse_fu_2290_prod_IN_M_real_address1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_address1 = grp_mult_window_fu_2214_prod_IN_M_real_2_address1;
    end else begin
        prod_IN_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_real_ce0 = grp_bitreverse_fu_2290_prod_IN_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_ce0 = grp_mult_window_fu_2214_prod_IN_M_real_2_ce0;
    end else begin
        prod_IN_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        prod_IN_M_real_ce1 = grp_bitreverse_fu_2290_prod_IN_M_real_ce1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_ce1 = grp_mult_window_fu_2214_prod_IN_M_real_2_ce1;
    end else begin
        prod_IN_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_we0 = grp_mult_window_fu_2214_prod_IN_M_real_2_we0;
    end else begin
        prod_IN_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        prod_IN_M_real_we1 = grp_mult_window_fu_2214_prod_IN_M_real_2_we1;
    end else begin
        prod_IN_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        xin_M_imag_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        xin_M_imag_address0 = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        xin_M_imag_address0 = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        xin_M_imag_address0 = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        xin_M_imag_address0 = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        xin_M_imag_address0 = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        xin_M_imag_address0 = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        xin_M_imag_address0 = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        xin_M_imag_address0 = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        xin_M_imag_address0 = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        xin_M_imag_address0 = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        xin_M_imag_address0 = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        xin_M_imag_address0 = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        xin_M_imag_address0 = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        xin_M_imag_address0 = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        xin_M_imag_address0 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        xin_M_imag_address0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        xin_M_imag_address0 = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xin_M_imag_address0 = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        xin_M_imag_address0 = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        xin_M_imag_address0 = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        xin_M_imag_address0 = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        xin_M_imag_address0 = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        xin_M_imag_address0 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        xin_M_imag_address0 = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        xin_M_imag_address0 = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        xin_M_imag_address0 = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        xin_M_imag_address0 = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_imag_address0 = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        xin_M_imag_address0 = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_imag_address0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        xin_M_imag_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        xin_M_imag_address0 = grp_mult_window_fu_2214_data_IN_M_imag_address0;
    end else begin
        xin_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state33))) begin
        xin_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        xin_M_imag_ce0 = grp_mult_window_fu_2214_data_IN_M_imag_ce0;
    end else begin
        xin_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state33))) begin
        xin_M_imag_we0 = 1'b1;
    end else begin
        xin_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        xin_M_real_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        xin_M_real_address0 = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        xin_M_real_address0 = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        xin_M_real_address0 = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        xin_M_real_address0 = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        xin_M_real_address0 = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        xin_M_real_address0 = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        xin_M_real_address0 = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        xin_M_real_address0 = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        xin_M_real_address0 = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        xin_M_real_address0 = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        xin_M_real_address0 = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        xin_M_real_address0 = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        xin_M_real_address0 = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        xin_M_real_address0 = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        xin_M_real_address0 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        xin_M_real_address0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        xin_M_real_address0 = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xin_M_real_address0 = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        xin_M_real_address0 = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        xin_M_real_address0 = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        xin_M_real_address0 = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        xin_M_real_address0 = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        xin_M_real_address0 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        xin_M_real_address0 = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        xin_M_real_address0 = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        xin_M_real_address0 = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        xin_M_real_address0 = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_real_address0 = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        xin_M_real_address0 = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_real_address0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        xin_M_real_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        xin_M_real_address0 = grp_mult_window_fu_2214_data_IN_M_real_address0;
    end else begin
        xin_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state33))) begin
        xin_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        xin_M_real_ce0 = grp_mult_window_fu_2214_data_IN_M_real_ce0;
    end else begin
        xin_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state33))) begin
        xin_M_real_we0 = 1'b1;
    end else begin
        xin_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        xout_mag_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        xout_mag_address0 = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        xout_mag_address0 = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        xout_mag_address0 = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        xout_mag_address0 = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        xout_mag_address0 = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        xout_mag_address0 = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        xout_mag_address0 = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        xout_mag_address0 = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        xout_mag_address0 = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        xout_mag_address0 = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        xout_mag_address0 = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        xout_mag_address0 = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        xout_mag_address0 = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        xout_mag_address0 = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        xout_mag_address0 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        xout_mag_address0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        xout_mag_address0 = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        xout_mag_address0 = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        xout_mag_address0 = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        xout_mag_address0 = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        xout_mag_address0 = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        xout_mag_address0 = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        xout_mag_address0 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        xout_mag_address0 = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        xout_mag_address0 = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        xout_mag_address0 = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        xout_mag_address0 = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        xout_mag_address0 = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        xout_mag_address0 = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        xout_mag_address0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        xout_mag_address0 = 5'd0;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        xout_mag_address0 = zext_ln102_reg_2666_pp0_iter10_reg;
    end else begin
        xout_mag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
        xout_mag_ce0 = 1'b1;
    end else begin
        xout_mag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln99_reg_2657_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        xout_mag_we0 = 1'b1;
    end else begin
        xout_mag_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_mult_window_fu_2214_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_bitreverse_fu_2290_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((grp_FFT0_fu_2234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln99_fu_2314_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln99_fu_2314_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd80];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_FFT0_fu_2234_ap_start = grp_FFT0_fu_2234_ap_start_reg;

assign grp_bitreverse_fu_2290_ap_start = grp_bitreverse_fu_2290_ap_start_reg;

assign grp_mult_window_fu_2214_ap_start = grp_mult_window_fu_2214_ap_start_reg;

assign i_fu_2320_p2 = (i_0_i_reg_2203 + 6'd1);

assign icmp_ln99_fu_2314_p2 = ((i_0_i_reg_2203 == 6'd32) ? 1'b1 : 1'b0);

assign zext_ln102_fu_2326_p1 = i_0_i_reg_2203;

always @ (posedge ap_clk) begin
    zext_ln102_reg_2666[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter9_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln102_reg_2666_pp0_iter10_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //FFT
