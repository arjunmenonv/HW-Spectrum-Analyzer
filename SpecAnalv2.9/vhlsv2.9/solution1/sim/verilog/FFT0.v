// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        FFT_stage,
        pass_check,
        index_shift,
        pass_shift,
        data_IN_M_real_address0,
        data_IN_M_real_ce0,
        data_IN_M_real_q0,
        data_IN_M_imag_address0,
        data_IN_M_imag_ce0,
        data_IN_M_imag_q0,
        data_OUT_M_real_address0,
        data_OUT_M_real_ce0,
        data_OUT_M_real_we0,
        data_OUT_M_real_d0,
        data_OUT_M_imag_address0,
        data_OUT_M_imag_ce0,
        data_OUT_M_imag_we0,
        data_OUT_M_imag_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state22 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] FFT_stage;
input  [5:0] pass_check;
input  [3:0] index_shift;
input  [3:0] pass_shift;
output  [4:0] data_IN_M_real_address0;
output   data_IN_M_real_ce0;
input  [31:0] data_IN_M_real_q0;
output  [4:0] data_IN_M_imag_address0;
output   data_IN_M_imag_ce0;
input  [31:0] data_IN_M_imag_q0;
output  [4:0] data_OUT_M_real_address0;
output   data_OUT_M_real_ce0;
output   data_OUT_M_real_we0;
output  [31:0] data_OUT_M_real_d0;
output  [4:0] data_OUT_M_imag_address0;
output   data_OUT_M_imag_ce0;
output   data_OUT_M_imag_we0;
output  [31:0] data_OUT_M_imag_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] data_IN_M_real_address0;
reg data_IN_M_real_ce0;
reg[4:0] data_IN_M_imag_address0;
reg data_IN_M_imag_ce0;
reg[4:0] data_OUT_M_real_address0;
reg data_OUT_M_real_ce0;
reg data_OUT_M_real_we0;
reg[31:0] data_OUT_M_real_d0;
reg[4:0] data_OUT_M_imag_address0;
reg data_OUT_M_imag_ce0;
reg data_OUT_M_imag_we0;
reg[31:0] data_OUT_M_imag_d0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] W_M_real_address0;
reg    W_M_real_ce0;
wire   [31:0] W_M_real_q0;
wire   [3:0] W_M_imag_address0;
reg    W_M_imag_ce0;
wire   [31:0] W_M_imag_q0;
reg   [31:0] butterfly_span_0_reg_190;
reg   [31:0] butterfly_pass_0_reg_202;
reg   [4:0] i_0_reg_214;
wire   [31:0] grp_fu_229_p2;
reg   [31:0] reg_245;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter8;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state18_pp0_stage0_iter8;
wire    ap_block_state20_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln77_reg_408;
reg   [0:0] icmp_ln77_reg_408_pp0_iter7_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_state13_pp0_stage1_iter5;
wire    ap_block_state15_pp0_stage1_iter6;
wire    ap_block_state17_pp0_stage1_iter7;
wire    ap_block_state19_pp0_stage1_iter8;
wire    ap_block_state21_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln77_reg_408_pp0_iter8_reg;
wire   [31:0] pass_shift_cast_fu_251_p1;
reg   [31:0] pass_shift_cast_reg_383;
wire   [31:0] index_shift_cast_fu_255_p1;
reg   [31:0] index_shift_cast_reg_388;
wire   [31:0] FFT_stage_cast1_fu_259_p1;
reg   [31:0] FFT_stage_cast1_reg_393;
wire   [31:0] zext_ln85_fu_273_p1;
reg   [31:0] zext_ln85_reg_398;
wire   [31:0] zext_ln87_fu_287_p1;
reg   [31:0] zext_ln87_reg_403;
wire   [0:0] icmp_ln77_fu_291_p2;
reg   [0:0] icmp_ln77_reg_408_pp0_iter1_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter2_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter3_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter4_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter5_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter6_reg;
reg   [0:0] icmp_ln77_reg_408_pp0_iter9_reg;
wire   [4:0] i_fu_297_p2;
reg   [4:0] i_reg_412;
reg    ap_enable_reg_pp0_iter0;
wire  signed [31:0] Ulimit_fu_308_p2;
reg  signed [31:0] Ulimit_reg_417;
reg  signed [31:0] Ulimit_reg_417_pp0_iter1_reg;
reg  signed [31:0] Ulimit_reg_417_pp0_iter2_reg;
reg  signed [31:0] Ulimit_reg_417_pp0_iter3_reg;
reg  signed [31:0] Ulimit_reg_417_pp0_iter4_reg;
wire   [0:0] icmp_ln85_fu_314_p2;
reg   [0:0] icmp_ln85_reg_423;
wire   [0:0] icmp_ln87_fu_319_p2;
reg   [0:0] icmp_ln87_reg_429;
wire  signed [63:0] sext_ln82_1_fu_339_p1;
reg  signed [63:0] sext_ln82_1_reg_444;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter1_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter2_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter3_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter4_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter5_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter6_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter7_reg;
reg  signed [63:0] sext_ln82_1_reg_444_pp0_iter8_reg;
wire   [31:0] select_ln85_fu_364_p3;
reg   [31:0] select_ln85_reg_460;
wire   [31:0] butterfly_pass_2_fu_371_p3;
reg   [31:0] butterfly_pass_2_reg_465;
reg   [31:0] p_r_M_real_reg_470;
reg   [31:0] p_r_M_imag_reg_476;
reg   [31:0] p_t_real_reg_482;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] p_t_imag_reg_487;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] tmp_i_i_reg_492;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] grp_fu_241_p2;
reg   [31:0] tmp_3_i_i_reg_497;
reg   [31:0] tmp_5_i_i_reg_502;
reg   [31:0] tmp_6_i_i_reg_507;
wire  signed [63:0] sext_ln83_fu_378_p1;
reg  signed [63:0] sext_ln83_reg_512;
reg  signed [63:0] sext_ln83_reg_512_pp0_iter6_reg;
reg  signed [63:0] sext_ln83_reg_512_pp0_iter7_reg;
reg  signed [63:0] sext_ln83_reg_512_pp0_iter8_reg;
reg  signed [63:0] sext_ln83_reg_512_pp0_iter9_reg;
wire   [31:0] grp_fu_225_p2;
reg   [31:0] Product_M_real_reg_528;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] p_r_M_real_2_reg_534;
reg   [31:0] p_r_M_imag_2_reg_540;
reg   [31:0] Product_M_imag_reg_546;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] grp_fu_233_p2;
reg   [31:0] complex_M_real_writ_2_reg_552;
reg   [31:0] complex_M_imag_writ_2_reg_557;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter9;
reg   [31:0] ap_phi_mux_butterfly_span_0_phi_fu_194_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_butterfly_pass_0_phi_fu_206_p4;
reg   [4:0] ap_phi_mux_i_0_phi_fu_218_p4;
wire  signed [63:0] sext_ln82_fu_333_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_225_p0;
reg   [31:0] grp_fu_225_p1;
reg   [31:0] grp_fu_229_p0;
reg   [31:0] grp_fu_229_p1;
reg   [31:0] grp_fu_233_p0;
reg   [31:0] grp_fu_233_p1;
reg   [31:0] grp_fu_237_p0;
reg   [31:0] grp_fu_241_p0;
wire   [4:0] trunc_ln85_fu_263_p1;
wire   [4:0] add_ln85_fu_267_p2;
wire   [4:0] trunc_ln87_fu_277_p1;
wire   [4:0] add_ln87_fu_281_p2;
wire   [31:0] shl_ln80_fu_303_p2;
wire   [31:0] index_fu_324_p2;
wire   [31:0] Llimit_fu_329_p2;
wire   [31:0] butterfly_pass_fu_351_p2;
wire   [31:0] butterfly_span_fu_345_p2;
wire   [31:0] butterfly_pass_1_fu_357_p3;
reg   [1:0] grp_fu_225_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state22;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_443;
reg    ap_condition_449;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

FFT0_W_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
W_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_M_real_address0),
    .ce0(W_M_real_ce0),
    .q0(W_M_real_q0)
);

FFT0_W_M_imag #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
W_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_M_imag_address0),
    .ce0(W_M_imag_ce0),
    .q0(W_M_imag_q0)
);

FFT_faddfsub_32nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_faddfsub_32nsfYi_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_225_p0),
    .din1(grp_fu_225_p1),
    .opcode(grp_fu_225_opcode),
    .ce(1'b1),
    .dout(grp_fu_225_p2)
);

FFT_fsub_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fsub_32ns_32ncud_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_229_p0),
    .din1(grp_fu_229_p1),
    .ce(1'b1),
    .dout(grp_fu_229_p2)
);

FFT_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fadd_32ns_32ndEe_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_233_p0),
    .din1(grp_fu_233_p1),
    .ce(1'b1),
    .dout(grp_fu_233_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_237_p0),
    .din1(p_t_real_reg_482),
    .ce(1'b1),
    .dout(grp_fu_237_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_241_p0),
    .din1(p_t_imag_reg_487),
    .ce(1'b1),
    .dout(grp_fu_241_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        butterfly_pass_0_reg_202 <= butterfly_pass_2_reg_465;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        butterfly_pass_0_reg_202 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        butterfly_span_0_reg_190 <= select_ln85_reg_460;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        butterfly_span_0_reg_190 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_214 <= i_reg_412;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_214 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        FFT_stage_cast1_reg_393[5 : 0] <= FFT_stage_cast1_fu_259_p1[5 : 0];
        index_shift_cast_reg_388[3 : 0] <= index_shift_cast_fu_255_p1[3 : 0];
        pass_shift_cast_reg_383[3 : 0] <= pass_shift_cast_fu_251_p1[3 : 0];
        zext_ln85_reg_398[4 : 0] <= zext_ln85_fu_273_p1[4 : 0];
        zext_ln87_reg_403[4 : 0] <= zext_ln87_fu_287_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln77_reg_408_pp0_iter5_reg == 1'd0))) begin
        Product_M_imag_reg_546 <= grp_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter5_reg == 1'd0))) begin
        Product_M_real_reg_528 <= grp_fu_225_p2;
        p_r_M_imag_2_reg_540 <= data_IN_M_imag_q0;
        p_r_M_real_2_reg_534 <= data_IN_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln77_fu_291_p2 == 1'd0))) begin
        Ulimit_reg_417 <= Ulimit_fu_308_p2;
        icmp_ln85_reg_423 <= icmp_ln85_fu_314_p2;
        icmp_ln87_reg_429 <= icmp_ln87_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ulimit_reg_417_pp0_iter1_reg <= Ulimit_reg_417;
        Ulimit_reg_417_pp0_iter2_reg <= Ulimit_reg_417_pp0_iter1_reg;
        Ulimit_reg_417_pp0_iter3_reg <= Ulimit_reg_417_pp0_iter2_reg;
        Ulimit_reg_417_pp0_iter4_reg <= Ulimit_reg_417_pp0_iter3_reg;
        icmp_ln77_reg_408 <= icmp_ln77_fu_291_p2;
        icmp_ln77_reg_408_pp0_iter1_reg <= icmp_ln77_reg_408;
        icmp_ln77_reg_408_pp0_iter2_reg <= icmp_ln77_reg_408_pp0_iter1_reg;
        icmp_ln77_reg_408_pp0_iter3_reg <= icmp_ln77_reg_408_pp0_iter2_reg;
        icmp_ln77_reg_408_pp0_iter4_reg <= icmp_ln77_reg_408_pp0_iter3_reg;
        icmp_ln77_reg_408_pp0_iter5_reg <= icmp_ln77_reg_408_pp0_iter4_reg;
        icmp_ln77_reg_408_pp0_iter6_reg <= icmp_ln77_reg_408_pp0_iter5_reg;
        icmp_ln77_reg_408_pp0_iter7_reg <= icmp_ln77_reg_408_pp0_iter6_reg;
        icmp_ln77_reg_408_pp0_iter8_reg <= icmp_ln77_reg_408_pp0_iter7_reg;
        icmp_ln77_reg_408_pp0_iter9_reg <= icmp_ln77_reg_408_pp0_iter8_reg;
        sext_ln83_reg_512_pp0_iter6_reg <= sext_ln83_reg_512;
        sext_ln83_reg_512_pp0_iter7_reg <= sext_ln83_reg_512_pp0_iter6_reg;
        sext_ln83_reg_512_pp0_iter8_reg <= sext_ln83_reg_512_pp0_iter7_reg;
        sext_ln83_reg_512_pp0_iter9_reg <= sext_ln83_reg_512_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        butterfly_pass_2_reg_465 <= butterfly_pass_2_fu_371_p3;
        select_ln85_reg_460 <= select_ln85_fu_364_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter8_reg == 1'd0))) begin
        complex_M_imag_writ_2_reg_557 <= grp_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln77_reg_408_pp0_iter7_reg == 1'd0))) begin
        complex_M_real_writ_2_reg_552 <= grp_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_412 <= i_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_imag_reg_476 <= W_M_imag_q0;
        p_r_M_real_reg_470 <= W_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_t_imag_reg_487 <= data_IN_M_imag_q0;
        p_t_real_reg_482 <= data_IN_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln77_reg_408_pp0_iter7_reg == 1'd0)))) begin
        reg_245 <= grp_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sext_ln82_1_reg_444 <= sext_ln82_1_fu_339_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sext_ln82_1_reg_444_pp0_iter1_reg <= sext_ln82_1_reg_444;
        sext_ln82_1_reg_444_pp0_iter2_reg <= sext_ln82_1_reg_444_pp0_iter1_reg;
        sext_ln82_1_reg_444_pp0_iter3_reg <= sext_ln82_1_reg_444_pp0_iter2_reg;
        sext_ln82_1_reg_444_pp0_iter4_reg <= sext_ln82_1_reg_444_pp0_iter3_reg;
        sext_ln82_1_reg_444_pp0_iter5_reg <= sext_ln82_1_reg_444_pp0_iter4_reg;
        sext_ln82_1_reg_444_pp0_iter6_reg <= sext_ln82_1_reg_444_pp0_iter5_reg;
        sext_ln82_1_reg_444_pp0_iter7_reg <= sext_ln82_1_reg_444_pp0_iter6_reg;
        sext_ln82_1_reg_444_pp0_iter8_reg <= sext_ln82_1_reg_444_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln77_reg_408_pp0_iter4_reg == 1'd0))) begin
        sext_ln83_reg_512 <= sext_ln83_fu_378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln77_reg_408_pp0_iter2_reg == 1'd0))) begin
        tmp_3_i_i_reg_497 <= grp_fu_241_p2;
        tmp_i_i_reg_492 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter3_reg == 1'd0))) begin
        tmp_5_i_i_reg_502 <= grp_fu_237_p2;
        tmp_6_i_i_reg_507 <= grp_fu_241_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W_M_imag_ce0 = 1'b1;
    end else begin
        W_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W_M_real_ce0 = 1'b1;
    end else begin
        W_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln77_fu_291_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_butterfly_pass_0_phi_fu_206_p4 = butterfly_pass_2_reg_465;
    end else begin
        ap_phi_mux_butterfly_pass_0_phi_fu_206_p4 = butterfly_pass_0_reg_202;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_butterfly_span_0_phi_fu_194_p4 = select_ln85_reg_460;
    end else begin
        ap_phi_mux_butterfly_span_0_phi_fu_194_p4 = butterfly_span_0_reg_190;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_408 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_0_phi_fu_218_p4 = i_reg_412;
    end else begin
        ap_phi_mux_i_0_phi_fu_218_p4 = i_0_reg_214;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        data_IN_M_imag_address0 = sext_ln83_fu_378_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_IN_M_imag_address0 = sext_ln82_1_fu_339_p1;
    end else begin
        data_IN_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        data_IN_M_imag_ce0 = 1'b1;
    end else begin
        data_IN_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        data_IN_M_real_address0 = sext_ln83_fu_378_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_IN_M_real_address0 = sext_ln82_1_fu_339_p1;
    end else begin
        data_IN_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        data_IN_M_real_ce0 = 1'b1;
    end else begin
        data_IN_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_OUT_M_imag_address0 = sext_ln83_reg_512_pp0_iter9_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_OUT_M_imag_address0 = sext_ln82_1_reg_444_pp0_iter8_reg;
        end else begin
            data_OUT_M_imag_address0 = 'bx;
        end
    end else begin
        data_OUT_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        data_OUT_M_imag_ce0 = 1'b1;
    end else begin
        data_OUT_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_OUT_M_imag_d0 = complex_M_imag_writ_2_reg_557;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_OUT_M_imag_d0 = reg_245;
        end else begin
            data_OUT_M_imag_d0 = 'bx;
        end
    end else begin
        data_OUT_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln77_reg_408_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter9_reg == 1'd0)))) begin
        data_OUT_M_imag_we0 = 1'b1;
    end else begin
        data_OUT_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_OUT_M_real_address0 = sext_ln83_reg_512_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_OUT_M_real_address0 = sext_ln82_1_reg_444_pp0_iter7_reg;
    end else begin
        data_OUT_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        data_OUT_M_real_ce0 = 1'b1;
    end else begin
        data_OUT_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_OUT_M_real_d0 = complex_M_real_writ_2_reg_552;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_OUT_M_real_d0 = reg_245;
    end else begin
        data_OUT_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln77_reg_408_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln77_reg_408_pp0_iter8_reg == 1'd0)))) begin
        data_OUT_M_real_we0 = 1'b1;
    end else begin
        data_OUT_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln77_reg_408_pp0_iter3_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_449)) begin
            grp_fu_225_opcode = 2'd1;
        end else if ((1'b1 == ap_condition_443)) begin
            grp_fu_225_opcode = 2'd0;
        end else begin
            grp_fu_225_opcode = 'bx;
        end
    end else begin
        grp_fu_225_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_fu_225_p0 = tmp_5_i_i_reg_502;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_225_p0 = tmp_i_i_reg_492;
    end else begin
        grp_fu_225_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_fu_225_p1 = tmp_6_i_i_reg_507;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_225_p1 = tmp_3_i_i_reg_497;
    end else begin
        grp_fu_225_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_229_p0 = p_r_M_imag_2_reg_540;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_229_p0 = p_r_M_real_2_reg_534;
        end else begin
            grp_fu_229_p0 = 'bx;
        end
    end else begin
        grp_fu_229_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_229_p1 = Product_M_imag_reg_546;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_229_p1 = Product_M_real_reg_528;
        end else begin
            grp_fu_229_p1 = 'bx;
        end
    end else begin
        grp_fu_229_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_233_p0 = p_r_M_imag_2_reg_540;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_233_p0 = p_r_M_real_2_reg_534;
        end else begin
            grp_fu_233_p0 = 'bx;
        end
    end else begin
        grp_fu_233_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_233_p1 = Product_M_imag_reg_546;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_233_p1 = Product_M_real_reg_528;
        end else begin
            grp_fu_233_p1 = 'bx;
        end
    end else begin
        grp_fu_233_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_237_p0 = p_r_M_imag_reg_476;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_237_p0 = p_r_M_real_reg_470;
    end else begin
        grp_fu_237_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_241_p0 = p_r_M_real_reg_470;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_241_p0 = p_r_M_imag_reg_476;
    end else begin
        grp_fu_241_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln77_fu_291_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln77_fu_291_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FFT_stage_cast1_fu_259_p1 = FFT_stage;

assign Llimit_fu_329_p2 = ($signed(Ulimit_reg_417) + $signed(FFT_stage_cast1_reg_393));

assign Ulimit_fu_308_p2 = (ap_phi_mux_butterfly_span_0_phi_fu_194_p4 + shl_ln80_fu_303_p2);

assign W_M_imag_address0 = sext_ln82_fu_333_p1;

assign W_M_real_address0 = sext_ln82_fu_333_p1;

assign add_ln85_fu_267_p2 = ($signed(5'd31) + $signed(trunc_ln85_fu_263_p1));

assign add_ln87_fu_281_p2 = ($signed(5'd31) + $signed(trunc_ln87_fu_277_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_443 = ((1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_449 = ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign butterfly_pass_1_fu_357_p3 = ((icmp_ln87_reg_429[0:0] === 1'b1) ? butterfly_pass_fu_351_p2 : 32'd0);

assign butterfly_pass_2_fu_371_p3 = ((icmp_ln85_reg_423[0:0] === 1'b1) ? butterfly_pass_0_reg_202 : butterfly_pass_1_fu_357_p3);

assign butterfly_pass_fu_351_p2 = (butterfly_pass_0_reg_202 + 32'd1);

assign butterfly_span_fu_345_p2 = (butterfly_span_0_reg_190 + 32'd1);

assign i_fu_297_p2 = (ap_phi_mux_i_0_phi_fu_218_p4 + 5'd1);

assign icmp_ln77_fu_291_p2 = ((ap_phi_mux_i_0_phi_fu_218_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_314_p2 = (($signed(ap_phi_mux_butterfly_span_0_phi_fu_194_p4) < $signed(zext_ln85_reg_398)) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_319_p2 = (($signed(ap_phi_mux_butterfly_pass_0_phi_fu_206_p4) < $signed(zext_ln87_reg_403)) ? 1'b1 : 1'b0);

assign index_fu_324_p2 = butterfly_span_0_reg_190 << index_shift_cast_reg_388;

assign index_shift_cast_fu_255_p1 = index_shift;

assign pass_shift_cast_fu_251_p1 = pass_shift;

assign select_ln85_fu_364_p3 = ((icmp_ln85_reg_423[0:0] === 1'b1) ? butterfly_span_fu_345_p2 : 32'd0);

assign sext_ln82_1_fu_339_p1 = $signed(Llimit_fu_329_p2);

assign sext_ln82_fu_333_p1 = $signed(index_fu_324_p2);

assign sext_ln83_fu_378_p1 = Ulimit_reg_417_pp0_iter4_reg;

assign shl_ln80_fu_303_p2 = ap_phi_mux_butterfly_pass_0_phi_fu_206_p4 << pass_shift_cast_reg_383;

assign trunc_ln85_fu_263_p1 = FFT_stage[4:0];

assign trunc_ln87_fu_277_p1 = pass_check[4:0];

assign zext_ln85_fu_273_p1 = add_ln85_fu_267_p2;

assign zext_ln87_fu_287_p1 = add_ln87_fu_281_p2;

always @ (posedge ap_clk) begin
    pass_shift_cast_reg_383[31:4] <= 28'b0000000000000000000000000000;
    index_shift_cast_reg_388[31:4] <= 28'b0000000000000000000000000000;
    FFT_stage_cast1_reg_393[31:6] <= 26'b00000000000000000000000000;
    zext_ln85_reg_398[31:5] <= 27'b000000000000000000000000000;
    zext_ln87_reg_403[31:5] <= 27'b000000000000000000000000000;
end

endmodule //FFT0
