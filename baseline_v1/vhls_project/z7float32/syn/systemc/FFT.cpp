// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> FFT::ap_ST_fsm_state1 = "1";
const sc_lv<17> FFT::ap_ST_fsm_state2 = "10";
const sc_lv<17> FFT::ap_ST_fsm_state3 = "100";
const sc_lv<17> FFT::ap_ST_fsm_state4 = "1000";
const sc_lv<17> FFT::ap_ST_fsm_state5 = "10000";
const sc_lv<17> FFT::ap_ST_fsm_state6 = "100000";
const sc_lv<17> FFT::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> FFT::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> FFT::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> FFT::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> FFT::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> FFT::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> FFT::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> FFT::ap_const_lv32_0 = "00000000000000000000000000000000";
const int FFT::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> FFT::ap_const_lv32_1 = "1";
const sc_lv<1> FFT::ap_const_lv1_0 = "0";
const sc_lv<32> FFT::ap_const_lv32_3 = "11";
const sc_lv<32> FFT::ap_const_lv32_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_F = "1111";
const sc_lv<6> FFT::ap_const_lv6_0 = "000000";
const sc_lv<32> FFT::ap_const_lv32_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_5 = "101";
const sc_lv<1> FFT::ap_const_lv1_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_E = "1110";
const sc_lv<32> FFT::ap_const_lv32_10 = "10000";
const sc_lv<32> FFT::ap_const_lv32_7 = "111";
const sc_lv<32> FFT::ap_const_lv32_9 = "1001";
const sc_lv<32> FFT::ap_const_lv32_B = "1011";
const sc_lv<32> FFT::ap_const_lv32_D = "1101";
const sc_lv<6> FFT::ap_const_lv6_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_6 = "110";
const sc_lv<6> FFT::ap_const_lv6_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_8 = "1000";
const sc_lv<6> FFT::ap_const_lv6_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_A = "1010";
const sc_lv<6> FFT::ap_const_lv6_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_C = "1100";
const sc_lv<6> FFT::ap_const_lv6_10 = "10000";
const sc_lv<4> FFT::ap_const_lv4_4 = "100";
const sc_lv<4> FFT::ap_const_lv4_3 = "11";
const sc_lv<4> FFT::ap_const_lv4_2 = "10";
const sc_lv<4> FFT::ap_const_lv4_1 = "1";
const sc_lv<4> FFT::ap_const_lv4_0 = "0000";
const sc_lv<4> FFT::ap_const_lv4_5 = "101";
const sc_lv<6> FFT::ap_const_lv6_20 = "100000";
const bool FFT::ap_const_boolean_1 = true;

FFT::FFT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xin_M_real_U = new FFT_xin_M_real("xin_M_real_U");
    xin_M_real_U->clk(ap_clk);
    xin_M_real_U->reset(ap_rst_n_inv);
    xin_M_real_U->address0(xin_M_real_address0);
    xin_M_real_U->ce0(xin_M_real_ce0);
    xin_M_real_U->we0(xin_M_real_we0);
    xin_M_real_U->d0(data_IN_M_real_q0);
    xin_M_real_U->q0(xin_M_real_q0);
    xin_M_imag_U = new FFT_xin_M_real("xin_M_imag_U");
    xin_M_imag_U->clk(ap_clk);
    xin_M_imag_U->reset(ap_rst_n_inv);
    xin_M_imag_U->address0(xin_M_imag_address0);
    xin_M_imag_U->ce0(xin_M_imag_ce0);
    xin_M_imag_U->we0(xin_M_imag_we0);
    xin_M_imag_U->d0(data_IN_M_imag_q0);
    xin_M_imag_U->q0(xin_M_imag_q0);
    rev_32_U = new FFT_rev_32("rev_32_U");
    rev_32_U->clk(ap_clk);
    rev_32_U->reset(ap_rst_n_inv);
    rev_32_U->address0(rev_32_address0);
    rev_32_U->ce0(rev_32_ce0);
    rev_32_U->q0(rev_32_q0);
    data_OUT0_M_real_U = new FFT_xin_M_real("data_OUT0_M_real_U");
    data_OUT0_M_real_U->clk(ap_clk);
    data_OUT0_M_real_U->reset(ap_rst_n_inv);
    data_OUT0_M_real_U->address0(data_OUT0_M_real_address0);
    data_OUT0_M_real_U->ce0(data_OUT0_M_real_ce0);
    data_OUT0_M_real_U->we0(data_OUT0_M_real_we0);
    data_OUT0_M_real_U->d0(xin_M_real_q0);
    data_OUT0_M_real_U->q0(data_OUT0_M_real_q0);
    data_OUT0_M_imag_U = new FFT_xin_M_real("data_OUT0_M_imag_U");
    data_OUT0_M_imag_U->clk(ap_clk);
    data_OUT0_M_imag_U->reset(ap_rst_n_inv);
    data_OUT0_M_imag_U->address0(data_OUT0_M_imag_address0);
    data_OUT0_M_imag_U->ce0(data_OUT0_M_imag_ce0);
    data_OUT0_M_imag_U->we0(data_OUT0_M_imag_we0);
    data_OUT0_M_imag_U->d0(xin_M_imag_q0);
    data_OUT0_M_imag_U->q0(data_OUT0_M_imag_q0);
    data_OUT1_M_real_U = new FFT_xin_M_real("data_OUT1_M_real_U");
    data_OUT1_M_real_U->clk(ap_clk);
    data_OUT1_M_real_U->reset(ap_rst_n_inv);
    data_OUT1_M_real_U->address0(data_OUT1_M_real_address0);
    data_OUT1_M_real_U->ce0(data_OUT1_M_real_ce0);
    data_OUT1_M_real_U->we0(data_OUT1_M_real_we0);
    data_OUT1_M_real_U->d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    data_OUT1_M_real_U->q0(data_OUT1_M_real_q0);
    data_OUT1_M_imag_U = new FFT_xin_M_real("data_OUT1_M_imag_U");
    data_OUT1_M_imag_U->clk(ap_clk);
    data_OUT1_M_imag_U->reset(ap_rst_n_inv);
    data_OUT1_M_imag_U->address0(data_OUT1_M_imag_address0);
    data_OUT1_M_imag_U->ce0(data_OUT1_M_imag_ce0);
    data_OUT1_M_imag_U->we0(data_OUT1_M_imag_we0);
    data_OUT1_M_imag_U->d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);
    data_OUT1_M_imag_U->q0(data_OUT1_M_imag_q0);
    data_OUT2_M_real_U = new FFT_xin_M_real("data_OUT2_M_real_U");
    data_OUT2_M_real_U->clk(ap_clk);
    data_OUT2_M_real_U->reset(ap_rst_n_inv);
    data_OUT2_M_real_U->address0(data_OUT2_M_real_address0);
    data_OUT2_M_real_U->ce0(data_OUT2_M_real_ce0);
    data_OUT2_M_real_U->we0(data_OUT2_M_real_we0);
    data_OUT2_M_real_U->d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    data_OUT2_M_real_U->q0(data_OUT2_M_real_q0);
    data_OUT2_M_imag_U = new FFT_xin_M_real("data_OUT2_M_imag_U");
    data_OUT2_M_imag_U->clk(ap_clk);
    data_OUT2_M_imag_U->reset(ap_rst_n_inv);
    data_OUT2_M_imag_U->address0(data_OUT2_M_imag_address0);
    data_OUT2_M_imag_U->ce0(data_OUT2_M_imag_ce0);
    data_OUT2_M_imag_U->we0(data_OUT2_M_imag_we0);
    data_OUT2_M_imag_U->d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);
    data_OUT2_M_imag_U->q0(data_OUT2_M_imag_q0);
    data_OUT3_M_real_U = new FFT_xin_M_real("data_OUT3_M_real_U");
    data_OUT3_M_real_U->clk(ap_clk);
    data_OUT3_M_real_U->reset(ap_rst_n_inv);
    data_OUT3_M_real_U->address0(data_OUT3_M_real_address0);
    data_OUT3_M_real_U->ce0(data_OUT3_M_real_ce0);
    data_OUT3_M_real_U->we0(data_OUT3_M_real_we0);
    data_OUT3_M_real_U->d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    data_OUT3_M_real_U->q0(data_OUT3_M_real_q0);
    data_OUT3_M_imag_U = new FFT_xin_M_real("data_OUT3_M_imag_U");
    data_OUT3_M_imag_U->clk(ap_clk);
    data_OUT3_M_imag_U->reset(ap_rst_n_inv);
    data_OUT3_M_imag_U->address0(data_OUT3_M_imag_address0);
    data_OUT3_M_imag_U->ce0(data_OUT3_M_imag_ce0);
    data_OUT3_M_imag_U->we0(data_OUT3_M_imag_we0);
    data_OUT3_M_imag_U->d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);
    data_OUT3_M_imag_U->q0(data_OUT3_M_imag_q0);
    data_OUT4_M_real_U = new FFT_xin_M_real("data_OUT4_M_real_U");
    data_OUT4_M_real_U->clk(ap_clk);
    data_OUT4_M_real_U->reset(ap_rst_n_inv);
    data_OUT4_M_real_U->address0(data_OUT4_M_real_address0);
    data_OUT4_M_real_U->ce0(data_OUT4_M_real_ce0);
    data_OUT4_M_real_U->we0(data_OUT4_M_real_we0);
    data_OUT4_M_real_U->d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    data_OUT4_M_real_U->q0(data_OUT4_M_real_q0);
    data_OUT4_M_imag_U = new FFT_xin_M_real("data_OUT4_M_imag_U");
    data_OUT4_M_imag_U->clk(ap_clk);
    data_OUT4_M_imag_U->reset(ap_rst_n_inv);
    data_OUT4_M_imag_U->address0(data_OUT4_M_imag_address0);
    data_OUT4_M_imag_U->ce0(data_OUT4_M_imag_ce0);
    data_OUT4_M_imag_U->we0(data_OUT4_M_imag_we0);
    data_OUT4_M_imag_U->d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);
    data_OUT4_M_imag_U->q0(data_OUT4_M_imag_q0);
    xout_M_real_U = new FFT_xin_M_real("xout_M_real_U");
    xout_M_real_U->clk(ap_clk);
    xout_M_real_U->reset(ap_rst_n_inv);
    xout_M_real_U->address0(xout_M_real_address0);
    xout_M_real_U->ce0(xout_M_real_ce0);
    xout_M_real_U->we0(xout_M_real_we0);
    xout_M_real_U->d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    xout_M_real_U->q0(xout_M_real_q0);
    xout_M_imag_U = new FFT_xin_M_real("xout_M_imag_U");
    xout_M_imag_U->clk(ap_clk);
    xout_M_imag_U->reset(ap_rst_n_inv);
    xout_M_imag_U->address0(xout_M_imag_address0);
    xout_M_imag_U->ce0(xout_M_imag_ce0);
    xout_M_imag_U->we0(xout_M_imag_we0);
    xout_M_imag_U->d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);
    xout_M_imag_U->q0(xout_M_imag_q0);
    FFT_AXILiteS_s_axi_U = new FFT_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("FFT_AXILiteS_s_axi_U");
    FFT_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    FFT_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    FFT_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    FFT_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    FFT_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    FFT_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    FFT_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    FFT_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    FFT_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    FFT_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    FFT_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    FFT_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    FFT_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    FFT_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    FFT_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    FFT_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    FFT_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    FFT_AXILiteS_s_axi_U->ACLK(ap_clk);
    FFT_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    FFT_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    FFT_AXILiteS_s_axi_U->ap_start(ap_start);
    FFT_AXILiteS_s_axi_U->interrupt(interrupt);
    FFT_AXILiteS_s_axi_U->ap_ready(ap_ready);
    FFT_AXILiteS_s_axi_U->ap_done(ap_done);
    FFT_AXILiteS_s_axi_U->ap_idle(ap_idle);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_address0(data_IN_M_real_address0);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_ce0(data_IN_M_real_ce0);
    FFT_AXILiteS_s_axi_U->data_IN_M_real_q0(data_IN_M_real_q0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_address0(data_IN_M_imag_address0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_ce0(data_IN_M_imag_ce0);
    FFT_AXILiteS_s_axi_U->data_IN_M_imag_q0(data_IN_M_imag_q0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_address0(data_OUT_M_real_address0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_ce0(data_OUT_M_real_ce0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_we0(data_OUT_M_real_we0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_real_d0(xout_M_real_q0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_address0(data_OUT_M_imag_address0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_ce0(data_OUT_M_imag_ce0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_we0(data_OUT_M_imag_we0);
    FFT_AXILiteS_s_axi_U->data_OUT_M_imag_d0(xout_M_imag_q0);
    grp_FFT0_fu_306 = new FFT0("grp_FFT0_fu_306");
    grp_FFT0_fu_306->ap_clk(ap_clk);
    grp_FFT0_fu_306->ap_rst(ap_rst_n_inv);
    grp_FFT0_fu_306->ap_start(grp_FFT0_fu_306_ap_start);
    grp_FFT0_fu_306->ap_done(grp_FFT0_fu_306_ap_done);
    grp_FFT0_fu_306->ap_idle(grp_FFT0_fu_306_ap_idle);
    grp_FFT0_fu_306->ap_ready(grp_FFT0_fu_306_ap_ready);
    grp_FFT0_fu_306->FFT_stage(grp_FFT0_fu_306_FFT_stage);
    grp_FFT0_fu_306->pass_check(grp_FFT0_fu_306_pass_check);
    grp_FFT0_fu_306->index_shift(grp_FFT0_fu_306_index_shift);
    grp_FFT0_fu_306->pass_shift(grp_FFT0_fu_306_pass_shift);
    grp_FFT0_fu_306->data_IN_M_real_address0(grp_FFT0_fu_306_data_IN_M_real_address0);
    grp_FFT0_fu_306->data_IN_M_real_ce0(grp_FFT0_fu_306_data_IN_M_real_ce0);
    grp_FFT0_fu_306->data_IN_M_real_q0(grp_FFT0_fu_306_data_IN_M_real_q0);
    grp_FFT0_fu_306->data_IN_M_imag_address0(grp_FFT0_fu_306_data_IN_M_imag_address0);
    grp_FFT0_fu_306->data_IN_M_imag_ce0(grp_FFT0_fu_306_data_IN_M_imag_ce0);
    grp_FFT0_fu_306->data_IN_M_imag_q0(grp_FFT0_fu_306_data_IN_M_imag_q0);
    grp_FFT0_fu_306->data_OUT_M_real_address0(grp_FFT0_fu_306_data_OUT_M_real_address0);
    grp_FFT0_fu_306->data_OUT_M_real_ce0(grp_FFT0_fu_306_data_OUT_M_real_ce0);
    grp_FFT0_fu_306->data_OUT_M_real_we0(grp_FFT0_fu_306_data_OUT_M_real_we0);
    grp_FFT0_fu_306->data_OUT_M_real_d0(grp_FFT0_fu_306_data_OUT_M_real_d0);
    grp_FFT0_fu_306->data_OUT_M_imag_address0(grp_FFT0_fu_306_data_OUT_M_imag_address0);
    grp_FFT0_fu_306->data_OUT_M_imag_ce0(grp_FFT0_fu_306_data_OUT_M_imag_ce0);
    grp_FFT0_fu_306->data_OUT_M_imag_we0(grp_FFT0_fu_306_data_OUT_M_imag_we0);
    grp_FFT0_fu_306->data_OUT_M_imag_d0(grp_FFT0_fu_306_data_OUT_M_imag_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln72_fu_403_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln72_fu_403_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_IN_M_imag_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln62_fu_374_p1 );

    SC_METHOD(thread_data_IN_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_data_IN_M_real_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln62_fu_374_p1 );

    SC_METHOD(thread_data_IN_M_real_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_data_OUT0_M_imag_address0);
    sensitive << ( zext_ln18_reg_453 );
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_imag_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_real_address0);
    sensitive << ( zext_ln18_reg_453 );
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_real_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_real_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT1_M_imag_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_imag_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT1_M_real_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_real_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_real_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT2_M_imag_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_imag_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT2_M_real_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_real_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_real_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT3_M_imag_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_imag_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT3_M_real_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_real_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_real_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT4_M_imag_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_imag_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_imag_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_imag_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_address0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_address0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_ce0);
    sensitive << ( grp_FFT0_fu_306_data_IN_M_real_ce0 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT_M_imag_address0);
    sensitive << ( zext_ln72_reg_482 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_M_imag_we0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_M_real_address0);
    sensitive << ( zext_ln72_reg_482 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_M_real_ce0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_M_real_we0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_FFT0_fu_306_FFT_stage);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_306_ap_start);
    sensitive << ( grp_FFT0_fu_306_ap_start_reg );

    SC_METHOD(thread_grp_FFT0_fu_306_data_IN_M_imag_q0);
    sensitive << ( data_OUT0_M_imag_q0 );
    sensitive << ( data_OUT1_M_imag_q0 );
    sensitive << ( data_OUT2_M_imag_q0 );
    sensitive << ( data_OUT3_M_imag_q0 );
    sensitive << ( data_OUT4_M_imag_q0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_306_data_IN_M_real_q0);
    sensitive << ( data_OUT0_M_real_q0 );
    sensitive << ( data_OUT1_M_real_q0 );
    sensitive << ( data_OUT2_M_real_q0 );
    sensitive << ( data_OUT3_M_real_q0 );
    sensitive << ( data_OUT4_M_real_q0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_306_index_shift);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_306_pass_check);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_306_pass_shift);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_1_fu_386_p2);
    sensitive << ( i_0_i_reg_284 );

    SC_METHOD(thread_i_2_fu_409_p2);
    sensitive << ( i1_0_reg_295 );

    SC_METHOD(thread_i_fu_368_p2);
    sensitive << ( i_0_reg_273 );

    SC_METHOD(thread_icmp_ln17_fu_380_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_i_reg_284 );

    SC_METHOD(thread_icmp_ln62_fu_362_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_273 );

    SC_METHOD(thread_icmp_ln72_fu_403_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i1_0_reg_295 );

    SC_METHOD(thread_rev_32_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln18_fu_392_p1 );

    SC_METHOD(thread_rev_32_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xin_M_imag_address0);
    sensitive << ( zext_ln62_reg_429 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln19_fu_397_p1 );

    SC_METHOD(thread_xin_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_imag_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_real_address0);
    sensitive << ( zext_ln62_reg_429 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln19_fu_397_p1 );

    SC_METHOD(thread_xin_M_real_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_real_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xout_M_imag_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln72_fu_415_p1 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_imag_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_imag_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_real_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln72_fu_415_p1 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_address0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_real_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_real_we0);
    sensitive << ( grp_FFT0_fu_306_data_OUT_M_real_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_zext_ln18_fu_392_p1);
    sensitive << ( i_0_i_reg_284 );

    SC_METHOD(thread_zext_ln19_fu_397_p1);
    sensitive << ( rev_32_q0 );

    SC_METHOD(thread_zext_ln62_fu_374_p1);
    sensitive << ( i_0_reg_273 );

    SC_METHOD(thread_zext_ln72_fu_415_p1);
    sensitive << ( i1_0_reg_295 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln62_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln17_fu_380_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln72_fu_403_p2 );
    sensitive << ( grp_FFT0_fu_306_ap_done );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    grp_FFT0_fu_306_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, data_IN_M_real_address0, "data_IN_M_real_address0");
    sc_trace(mVcdFile, data_IN_M_real_ce0, "data_IN_M_real_ce0");
    sc_trace(mVcdFile, data_IN_M_real_q0, "data_IN_M_real_q0");
    sc_trace(mVcdFile, data_IN_M_imag_address0, "data_IN_M_imag_address0");
    sc_trace(mVcdFile, data_IN_M_imag_ce0, "data_IN_M_imag_ce0");
    sc_trace(mVcdFile, data_IN_M_imag_q0, "data_IN_M_imag_q0");
    sc_trace(mVcdFile, data_OUT_M_real_address0, "data_OUT_M_real_address0");
    sc_trace(mVcdFile, data_OUT_M_real_ce0, "data_OUT_M_real_ce0");
    sc_trace(mVcdFile, data_OUT_M_real_we0, "data_OUT_M_real_we0");
    sc_trace(mVcdFile, data_OUT_M_imag_address0, "data_OUT_M_imag_address0");
    sc_trace(mVcdFile, data_OUT_M_imag_ce0, "data_OUT_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT_M_imag_we0, "data_OUT_M_imag_we0");
    sc_trace(mVcdFile, xin_M_real_address0, "xin_M_real_address0");
    sc_trace(mVcdFile, xin_M_real_ce0, "xin_M_real_ce0");
    sc_trace(mVcdFile, xin_M_real_we0, "xin_M_real_we0");
    sc_trace(mVcdFile, xin_M_real_q0, "xin_M_real_q0");
    sc_trace(mVcdFile, xin_M_imag_address0, "xin_M_imag_address0");
    sc_trace(mVcdFile, xin_M_imag_ce0, "xin_M_imag_ce0");
    sc_trace(mVcdFile, xin_M_imag_we0, "xin_M_imag_we0");
    sc_trace(mVcdFile, xin_M_imag_q0, "xin_M_imag_q0");
    sc_trace(mVcdFile, rev_32_address0, "rev_32_address0");
    sc_trace(mVcdFile, rev_32_ce0, "rev_32_ce0");
    sc_trace(mVcdFile, rev_32_q0, "rev_32_q0");
    sc_trace(mVcdFile, data_OUT0_M_real_address0, "data_OUT0_M_real_address0");
    sc_trace(mVcdFile, data_OUT0_M_real_ce0, "data_OUT0_M_real_ce0");
    sc_trace(mVcdFile, data_OUT0_M_real_we0, "data_OUT0_M_real_we0");
    sc_trace(mVcdFile, data_OUT0_M_real_q0, "data_OUT0_M_real_q0");
    sc_trace(mVcdFile, data_OUT0_M_imag_address0, "data_OUT0_M_imag_address0");
    sc_trace(mVcdFile, data_OUT0_M_imag_ce0, "data_OUT0_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT0_M_imag_we0, "data_OUT0_M_imag_we0");
    sc_trace(mVcdFile, data_OUT0_M_imag_q0, "data_OUT0_M_imag_q0");
    sc_trace(mVcdFile, data_OUT1_M_real_address0, "data_OUT1_M_real_address0");
    sc_trace(mVcdFile, data_OUT1_M_real_ce0, "data_OUT1_M_real_ce0");
    sc_trace(mVcdFile, data_OUT1_M_real_we0, "data_OUT1_M_real_we0");
    sc_trace(mVcdFile, data_OUT1_M_real_q0, "data_OUT1_M_real_q0");
    sc_trace(mVcdFile, data_OUT1_M_imag_address0, "data_OUT1_M_imag_address0");
    sc_trace(mVcdFile, data_OUT1_M_imag_ce0, "data_OUT1_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT1_M_imag_we0, "data_OUT1_M_imag_we0");
    sc_trace(mVcdFile, data_OUT1_M_imag_q0, "data_OUT1_M_imag_q0");
    sc_trace(mVcdFile, data_OUT2_M_real_address0, "data_OUT2_M_real_address0");
    sc_trace(mVcdFile, data_OUT2_M_real_ce0, "data_OUT2_M_real_ce0");
    sc_trace(mVcdFile, data_OUT2_M_real_we0, "data_OUT2_M_real_we0");
    sc_trace(mVcdFile, data_OUT2_M_real_q0, "data_OUT2_M_real_q0");
    sc_trace(mVcdFile, data_OUT2_M_imag_address0, "data_OUT2_M_imag_address0");
    sc_trace(mVcdFile, data_OUT2_M_imag_ce0, "data_OUT2_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT2_M_imag_we0, "data_OUT2_M_imag_we0");
    sc_trace(mVcdFile, data_OUT2_M_imag_q0, "data_OUT2_M_imag_q0");
    sc_trace(mVcdFile, data_OUT3_M_real_address0, "data_OUT3_M_real_address0");
    sc_trace(mVcdFile, data_OUT3_M_real_ce0, "data_OUT3_M_real_ce0");
    sc_trace(mVcdFile, data_OUT3_M_real_we0, "data_OUT3_M_real_we0");
    sc_trace(mVcdFile, data_OUT3_M_real_q0, "data_OUT3_M_real_q0");
    sc_trace(mVcdFile, data_OUT3_M_imag_address0, "data_OUT3_M_imag_address0");
    sc_trace(mVcdFile, data_OUT3_M_imag_ce0, "data_OUT3_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT3_M_imag_we0, "data_OUT3_M_imag_we0");
    sc_trace(mVcdFile, data_OUT3_M_imag_q0, "data_OUT3_M_imag_q0");
    sc_trace(mVcdFile, data_OUT4_M_real_address0, "data_OUT4_M_real_address0");
    sc_trace(mVcdFile, data_OUT4_M_real_ce0, "data_OUT4_M_real_ce0");
    sc_trace(mVcdFile, data_OUT4_M_real_we0, "data_OUT4_M_real_we0");
    sc_trace(mVcdFile, data_OUT4_M_real_q0, "data_OUT4_M_real_q0");
    sc_trace(mVcdFile, data_OUT4_M_imag_address0, "data_OUT4_M_imag_address0");
    sc_trace(mVcdFile, data_OUT4_M_imag_ce0, "data_OUT4_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT4_M_imag_we0, "data_OUT4_M_imag_we0");
    sc_trace(mVcdFile, data_OUT4_M_imag_q0, "data_OUT4_M_imag_q0");
    sc_trace(mVcdFile, xout_M_real_address0, "xout_M_real_address0");
    sc_trace(mVcdFile, xout_M_real_ce0, "xout_M_real_ce0");
    sc_trace(mVcdFile, xout_M_real_we0, "xout_M_real_we0");
    sc_trace(mVcdFile, xout_M_real_q0, "xout_M_real_q0");
    sc_trace(mVcdFile, xout_M_imag_address0, "xout_M_imag_address0");
    sc_trace(mVcdFile, xout_M_imag_ce0, "xout_M_imag_ce0");
    sc_trace(mVcdFile, xout_M_imag_we0, "xout_M_imag_we0");
    sc_trace(mVcdFile, xout_M_imag_q0, "xout_M_imag_q0");
    sc_trace(mVcdFile, i_fu_368_p2, "i_fu_368_p2");
    sc_trace(mVcdFile, i_reg_424, "i_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln62_fu_374_p1, "zext_ln62_fu_374_p1");
    sc_trace(mVcdFile, zext_ln62_reg_429, "zext_ln62_reg_429");
    sc_trace(mVcdFile, icmp_ln62_fu_362_p2, "icmp_ln62_fu_362_p2");
    sc_trace(mVcdFile, i_1_fu_386_p2, "i_1_fu_386_p2");
    sc_trace(mVcdFile, i_1_reg_448, "i_1_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln18_fu_392_p1, "zext_ln18_fu_392_p1");
    sc_trace(mVcdFile, zext_ln18_reg_453, "zext_ln18_reg_453");
    sc_trace(mVcdFile, icmp_ln17_fu_380_p2, "icmp_ln17_fu_380_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_2_fu_409_p2, "i_2_fu_409_p2");
    sc_trace(mVcdFile, i_2_reg_477, "i_2_reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, zext_ln72_fu_415_p1, "zext_ln72_fu_415_p1");
    sc_trace(mVcdFile, zext_ln72_reg_482, "zext_ln72_reg_482");
    sc_trace(mVcdFile, icmp_ln72_fu_403_p2, "icmp_ln72_fu_403_p2");
    sc_trace(mVcdFile, grp_FFT0_fu_306_ap_start, "grp_FFT0_fu_306_ap_start");
    sc_trace(mVcdFile, grp_FFT0_fu_306_ap_done, "grp_FFT0_fu_306_ap_done");
    sc_trace(mVcdFile, grp_FFT0_fu_306_ap_idle, "grp_FFT0_fu_306_ap_idle");
    sc_trace(mVcdFile, grp_FFT0_fu_306_ap_ready, "grp_FFT0_fu_306_ap_ready");
    sc_trace(mVcdFile, grp_FFT0_fu_306_FFT_stage, "grp_FFT0_fu_306_FFT_stage");
    sc_trace(mVcdFile, grp_FFT0_fu_306_pass_check, "grp_FFT0_fu_306_pass_check");
    sc_trace(mVcdFile, grp_FFT0_fu_306_index_shift, "grp_FFT0_fu_306_index_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_306_pass_shift, "grp_FFT0_fu_306_pass_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_real_address0, "grp_FFT0_fu_306_data_IN_M_real_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_real_ce0, "grp_FFT0_fu_306_data_IN_M_real_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_real_q0, "grp_FFT0_fu_306_data_IN_M_real_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_imag_address0, "grp_FFT0_fu_306_data_IN_M_imag_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_imag_ce0, "grp_FFT0_fu_306_data_IN_M_imag_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_IN_M_imag_q0, "grp_FFT0_fu_306_data_IN_M_imag_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_real_address0, "grp_FFT0_fu_306_data_OUT_M_real_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_real_ce0, "grp_FFT0_fu_306_data_OUT_M_real_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_real_we0, "grp_FFT0_fu_306_data_OUT_M_real_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_real_d0, "grp_FFT0_fu_306_data_OUT_M_real_d0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_imag_address0, "grp_FFT0_fu_306_data_OUT_M_imag_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_imag_ce0, "grp_FFT0_fu_306_data_OUT_M_imag_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_imag_we0, "grp_FFT0_fu_306_data_OUT_M_imag_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_306_data_OUT_M_imag_d0, "grp_FFT0_fu_306_data_OUT_M_imag_d0");
    sc_trace(mVcdFile, i_0_reg_273, "i_0_reg_273");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_0_i_reg_284, "i_0_i_reg_284");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i1_0_reg_295, "i1_0_reg_295");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_FFT0_fu_306_ap_start_reg, "grp_FFT0_fu_306_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, zext_ln19_fu_397_p1, "zext_ln19_fu_397_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("FFT.hdltvin.dat");
    mHdltvoutHandle.open("FFT.hdltvout.dat");
}

FFT::~FFT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete xin_M_real_U;
    delete xin_M_imag_U;
    delete rev_32_U;
    delete data_OUT0_M_real_U;
    delete data_OUT0_M_imag_U;
    delete data_OUT1_M_real_U;
    delete data_OUT1_M_imag_U;
    delete data_OUT2_M_real_U;
    delete data_OUT2_M_imag_U;
    delete data_OUT3_M_real_U;
    delete data_OUT3_M_imag_U;
    delete data_OUT4_M_real_U;
    delete data_OUT4_M_imag_U;
    delete xout_M_real_U;
    delete xout_M_imag_U;
    delete FFT_AXILiteS_s_axi_U;
    delete grp_FFT0_fu_306;
}

void FFT::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void FFT::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_FFT0_fu_306_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(icmp_ln17_fu_380_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
            grp_FFT0_fu_306_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_FFT0_fu_306_ap_ready.read())) {
            grp_FFT0_fu_306_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i1_0_reg_295 = i_2_reg_477.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_295 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln62_fu_362_p2.read(), ap_const_lv1_1))) {
        i_0_i_reg_284 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_0_i_reg_284 = i_1_reg_448.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_273 = i_reg_424.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_273 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_448 = i_1_fu_386_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_2_reg_477 = i_2_fu_409_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_424 = i_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_380_p2.read()))) {
        zext_ln18_reg_453 = zext_ln18_fu_392_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln62_fu_362_p2.read(), ap_const_lv1_0))) {
        zext_ln62_reg_429 = zext_ln62_fu_374_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln72_fu_403_p2.read()))) {
        zext_ln72_reg_482 = zext_ln72_fu_415_p1.read();
    }
}

void FFT::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void FFT::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void FFT::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void FFT::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void FFT::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void FFT::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void FFT::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void FFT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void FFT::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void FFT::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln72_fu_403_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln72_fu_403_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void FFT::thread_data_IN_M_imag_address0() {
    data_IN_M_imag_address0 =  (sc_lv<5>) (zext_ln62_fu_374_p1.read());
}

void FFT::thread_data_IN_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_IN_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_IN_M_real_address0() {
    data_IN_M_real_address0 =  (sc_lv<5>) (zext_ln62_fu_374_p1.read());
}

void FFT::thread_data_IN_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_IN_M_real_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_address0 =  (sc_lv<5>) (zext_ln18_reg_453.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_imag_address0 = grp_FFT0_fu_306_data_IN_M_imag_address0.read();
    } else {
        data_OUT0_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_imag_ce0 = grp_FFT0_fu_306_data_IN_M_imag_ce0.read();
    } else {
        data_OUT0_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_address0 =  (sc_lv<5>) (zext_ln18_reg_453.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_real_address0 = grp_FFT0_fu_306_data_IN_M_real_address0.read();
    } else {
        data_OUT0_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_real_ce0 = grp_FFT0_fu_306_data_IN_M_real_ce0.read();
    } else {
        data_OUT0_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_address0 = grp_FFT0_fu_306_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_imag_address0 = grp_FFT0_fu_306_data_IN_M_imag_address0.read();
    } else {
        data_OUT1_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_306_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_imag_ce0 = grp_FFT0_fu_306_data_IN_M_imag_ce0.read();
    } else {
        data_OUT1_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_we0 = grp_FFT0_fu_306_data_OUT_M_imag_we0.read();
    } else {
        data_OUT1_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_address0 = grp_FFT0_fu_306_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_real_address0 = grp_FFT0_fu_306_data_IN_M_real_address0.read();
    } else {
        data_OUT1_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_ce0 = grp_FFT0_fu_306_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_real_ce0 = grp_FFT0_fu_306_data_IN_M_real_ce0.read();
    } else {
        data_OUT1_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_we0 = grp_FFT0_fu_306_data_OUT_M_real_we0.read();
    } else {
        data_OUT1_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_address0 = grp_FFT0_fu_306_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_imag_address0 = grp_FFT0_fu_306_data_IN_M_imag_address0.read();
    } else {
        data_OUT2_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_306_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_imag_ce0 = grp_FFT0_fu_306_data_IN_M_imag_ce0.read();
    } else {
        data_OUT2_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_we0 = grp_FFT0_fu_306_data_OUT_M_imag_we0.read();
    } else {
        data_OUT2_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_address0 = grp_FFT0_fu_306_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_real_address0 = grp_FFT0_fu_306_data_IN_M_real_address0.read();
    } else {
        data_OUT2_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_ce0 = grp_FFT0_fu_306_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_real_ce0 = grp_FFT0_fu_306_data_IN_M_real_ce0.read();
    } else {
        data_OUT2_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_we0 = grp_FFT0_fu_306_data_OUT_M_real_we0.read();
    } else {
        data_OUT2_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_address0 = grp_FFT0_fu_306_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_imag_address0 = grp_FFT0_fu_306_data_IN_M_imag_address0.read();
    } else {
        data_OUT3_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_306_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_imag_ce0 = grp_FFT0_fu_306_data_IN_M_imag_ce0.read();
    } else {
        data_OUT3_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_we0 = grp_FFT0_fu_306_data_OUT_M_imag_we0.read();
    } else {
        data_OUT3_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_address0 = grp_FFT0_fu_306_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_real_address0 = grp_FFT0_fu_306_data_IN_M_real_address0.read();
    } else {
        data_OUT3_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_ce0 = grp_FFT0_fu_306_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_real_ce0 = grp_FFT0_fu_306_data_IN_M_real_ce0.read();
    } else {
        data_OUT3_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_we0 = grp_FFT0_fu_306_data_OUT_M_real_we0.read();
    } else {
        data_OUT3_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_address0 = grp_FFT0_fu_306_data_OUT_M_imag_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_imag_address0 = grp_FFT0_fu_306_data_IN_M_imag_address0.read();
    } else {
        data_OUT4_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_306_data_OUT_M_imag_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_imag_ce0 = grp_FFT0_fu_306_data_IN_M_imag_ce0.read();
    } else {
        data_OUT4_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_we0 = grp_FFT0_fu_306_data_OUT_M_imag_we0.read();
    } else {
        data_OUT4_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_address0 = grp_FFT0_fu_306_data_OUT_M_real_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_real_address0 = grp_FFT0_fu_306_data_IN_M_real_address0.read();
    } else {
        data_OUT4_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_ce0 = grp_FFT0_fu_306_data_OUT_M_real_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_real_ce0 = grp_FFT0_fu_306_data_IN_M_real_ce0.read();
    } else {
        data_OUT4_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_we0 = grp_FFT0_fu_306_data_OUT_M_real_we0.read();
    } else {
        data_OUT4_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_imag_address0() {
    data_OUT_M_imag_address0 =  (sc_lv<5>) (zext_ln72_reg_482.read());
}

void FFT::thread_data_OUT_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_OUT_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_OUT_M_imag_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_real_address0() {
    data_OUT_M_real_address0 =  (sc_lv<5>) (zext_ln72_reg_482.read());
}

void FFT::thread_data_OUT_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_OUT_M_real_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data_OUT_M_real_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_grp_FFT0_fu_306_FFT_stage() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_FFT_stage = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_FFT_stage = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_FFT_stage = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_FFT_stage = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_FFT_stage = ap_const_lv6_1;
    } else {
        grp_FFT0_fu_306_FFT_stage =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_306_ap_start() {
    grp_FFT0_fu_306_ap_start = grp_FFT0_fu_306_ap_start_reg.read();
}

void FFT::thread_grp_FFT0_fu_306_data_IN_M_imag_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_data_IN_M_imag_q0 = data_OUT4_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_data_IN_M_imag_q0 = data_OUT3_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_data_IN_M_imag_q0 = data_OUT2_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_data_IN_M_imag_q0 = data_OUT1_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_data_IN_M_imag_q0 = data_OUT0_M_imag_q0.read();
    } else {
        grp_FFT0_fu_306_data_IN_M_imag_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_306_data_IN_M_real_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_data_IN_M_real_q0 = data_OUT4_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_data_IN_M_real_q0 = data_OUT3_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_data_IN_M_real_q0 = data_OUT2_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_data_IN_M_real_q0 = data_OUT1_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_data_IN_M_real_q0 = data_OUT0_M_real_q0.read();
    } else {
        grp_FFT0_fu_306_data_IN_M_real_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_306_index_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_index_shift = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_index_shift = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_index_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_index_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_index_shift = ap_const_lv4_4;
    } else {
        grp_FFT0_fu_306_index_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_grp_FFT0_fu_306_pass_check() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_pass_check = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_pass_check = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_pass_check = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_pass_check = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_pass_check = ap_const_lv6_10;
    } else {
        grp_FFT0_fu_306_pass_check =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_306_pass_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_306_pass_shift = ap_const_lv4_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_306_pass_shift = ap_const_lv4_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_306_pass_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_306_pass_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_306_pass_shift = ap_const_lv4_1;
    } else {
        grp_FFT0_fu_306_pass_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_i_1_fu_386_p2() {
    i_1_fu_386_p2 = (!i_0_i_reg_284.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_reg_284.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_2_fu_409_p2() {
    i_2_fu_409_p2 = (!i1_0_reg_295.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i1_0_reg_295.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_fu_368_p2() {
    i_fu_368_p2 = (!i_0_reg_273.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_273.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_icmp_ln17_fu_380_p2() {
    icmp_ln17_fu_380_p2 = (!i_0_i_reg_284.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_284.read() == ap_const_lv6_20);
}

void FFT::thread_icmp_ln62_fu_362_p2() {
    icmp_ln62_fu_362_p2 = (!i_0_reg_273.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_273.read() == ap_const_lv6_20);
}

void FFT::thread_icmp_ln72_fu_403_p2() {
    icmp_ln72_fu_403_p2 = (!i1_0_reg_295.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_295.read() == ap_const_lv6_20);
}

void FFT::thread_rev_32_address0() {
    rev_32_address0 =  (sc_lv<5>) (zext_ln18_fu_392_p1.read());
}

void FFT::thread_rev_32_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rev_32_ce0 = ap_const_logic_1;
    } else {
        rev_32_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (zext_ln19_fu_397_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_address0 =  (sc_lv<5>) (zext_ln62_reg_429.read());
    } else {
        xin_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        xin_M_imag_ce0 = ap_const_logic_1;
    } else {
        xin_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_we0 = ap_const_logic_1;
    } else {
        xin_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (zext_ln19_fu_397_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_address0 =  (sc_lv<5>) (zext_ln62_reg_429.read());
    } else {
        xin_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        xin_M_real_ce0 = ap_const_logic_1;
    } else {
        xin_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_we0 = ap_const_logic_1;
    } else {
        xin_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_imag_address0 =  (sc_lv<5>) (zext_ln72_fu_415_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_address0 = grp_FFT0_fu_306_data_OUT_M_imag_address0.read();
    } else {
        xout_M_imag_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_imag_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_ce0 = grp_FFT0_fu_306_data_OUT_M_imag_ce0.read();
    } else {
        xout_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_we0 = grp_FFT0_fu_306_data_OUT_M_imag_we0.read();
    } else {
        xout_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_real_address0 =  (sc_lv<5>) (zext_ln72_fu_415_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_address0 = grp_FFT0_fu_306_data_OUT_M_real_address0.read();
    } else {
        xout_M_real_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_real_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_ce0 = grp_FFT0_fu_306_data_OUT_M_real_ce0.read();
    } else {
        xout_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_we0 = grp_FFT0_fu_306_data_OUT_M_real_we0.read();
    } else {
        xout_M_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_zext_ln18_fu_392_p1() {
    zext_ln18_fu_392_p1 = esl_zext<64,6>(i_0_i_reg_284.read());
}

void FFT::thread_zext_ln19_fu_397_p1() {
    zext_ln19_fu_397_p1 = esl_zext<64,5>(rev_32_q0.read());
}

void FFT::thread_zext_ln62_fu_374_p1() {
    zext_ln62_fu_374_p1 = esl_zext<64,6>(i_0_reg_273.read());
}

void FFT::thread_zext_ln72_fu_415_p1() {
    zext_ln72_fu_415_p1 = esl_zext<64,6>(i1_0_reg_295.read());
}

void FFT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln62_fu_362_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_380_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(grp_FFT0_fu_306_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(icmp_ln72_fu_403_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void FFT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

