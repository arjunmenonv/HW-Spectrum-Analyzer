// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT0::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT0::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> FFT0::ap_ST_fsm_state1 = "1";
const sc_lv<20> FFT0::ap_ST_fsm_state2 = "10";
const sc_lv<20> FFT0::ap_ST_fsm_state3 = "100";
const sc_lv<20> FFT0::ap_ST_fsm_state4 = "1000";
const sc_lv<20> FFT0::ap_ST_fsm_state5 = "10000";
const sc_lv<20> FFT0::ap_ST_fsm_state6 = "100000";
const sc_lv<20> FFT0::ap_ST_fsm_state7 = "1000000";
const sc_lv<20> FFT0::ap_ST_fsm_state8 = "10000000";
const sc_lv<20> FFT0::ap_ST_fsm_state9 = "100000000";
const sc_lv<20> FFT0::ap_ST_fsm_state10 = "1000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state11 = "10000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state12 = "100000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<20> FFT0::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> FFT0::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> FFT0::ap_const_lv32_3 = "11";
const sc_lv<32> FFT0::ap_const_lv32_C = "1100";
const sc_lv<32> FFT0::ap_const_lv32_11 = "10001";
const sc_lv<32> FFT0::ap_const_lv32_1 = "1";
const sc_lv<1> FFT0::ap_const_lv1_0 = "0";
const sc_lv<32> FFT0::ap_const_lv32_2 = "10";
const sc_lv<32> FFT0::ap_const_lv32_7 = "111";
const sc_lv<32> FFT0::ap_const_lv32_B = "1011";
const sc_lv<32> FFT0::ap_const_lv32_13 = "10011";
const sc_lv<5> FFT0::ap_const_lv5_0 = "00000";
const sc_lv<32> FFT0::ap_const_lv32_12 = "10010";
const sc_lv<32> FFT0::ap_const_lv32_8 = "1000";
const sc_lv<32> FFT0::ap_const_lv32_D = "1101";
const sc_lv<32> FFT0::ap_const_lv32_4 = "100";
const sc_lv<5> FFT0::ap_const_lv5_1F = "11111";
const sc_lv<5> FFT0::ap_const_lv5_10 = "10000";
const sc_lv<5> FFT0::ap_const_lv5_1 = "1";
const sc_lv<2> FFT0::ap_const_lv2_0 = "00";
const sc_lv<2> FFT0::ap_const_lv2_1 = "1";
const sc_lv<1> FFT0::ap_const_lv1_1 = "1";
const bool FFT0::ap_const_boolean_1 = true;

FFT0::FFT0(sc_module_name name) : sc_module(name), mVcdFile(0) {
    W_M_real_U = new FFT0_W_M_real("W_M_real_U");
    W_M_real_U->clk(ap_clk);
    W_M_real_U->reset(ap_rst);
    W_M_real_U->address0(W_M_real_address0);
    W_M_real_U->ce0(W_M_real_ce0);
    W_M_real_U->q0(W_M_real_q0);
    W_M_imag_U = new FFT0_W_M_imag("W_M_imag_U");
    W_M_imag_U->clk(ap_clk);
    W_M_imag_U->reset(ap_rst);
    W_M_imag_U->address0(W_M_imag_address0);
    W_M_imag_U->ce0(W_M_imag_ce0);
    W_M_imag_U->q0(W_M_imag_q0);
    FFT_fsub_32ns_32nbkb_U1 = new FFT_fsub_32ns_32nbkb<1,5,32,32,32>("FFT_fsub_32ns_32nbkb_U1");
    FFT_fsub_32ns_32nbkb_U1->clk(ap_clk);
    FFT_fsub_32ns_32nbkb_U1->reset(ap_rst);
    FFT_fsub_32ns_32nbkb_U1->din0(grp_fu_213_p0);
    FFT_fsub_32ns_32nbkb_U1->din1(grp_fu_213_p1);
    FFT_fsub_32ns_32nbkb_U1->ce(ap_var_for_const0);
    FFT_fsub_32ns_32nbkb_U1->dout(grp_fu_213_p2);
    FFT_faddfsub_32nscud_U2 = new FFT_faddfsub_32nscud<1,5,32,32,32>("FFT_faddfsub_32nscud_U2");
    FFT_faddfsub_32nscud_U2->clk(ap_clk);
    FFT_faddfsub_32nscud_U2->reset(ap_rst);
    FFT_faddfsub_32nscud_U2->din0(grp_fu_217_p0);
    FFT_faddfsub_32nscud_U2->din1(grp_fu_217_p1);
    FFT_faddfsub_32nscud_U2->opcode(grp_fu_217_opcode);
    FFT_faddfsub_32nscud_U2->ce(ap_var_for_const0);
    FFT_faddfsub_32nscud_U2->dout(grp_fu_217_p2);
    FFT_fadd_32ns_32ndEe_U3 = new FFT_fadd_32ns_32ndEe<1,5,32,32,32>("FFT_fadd_32ns_32ndEe_U3");
    FFT_fadd_32ns_32ndEe_U3->clk(ap_clk);
    FFT_fadd_32ns_32ndEe_U3->reset(ap_rst);
    FFT_fadd_32ns_32ndEe_U3->din0(reg_245);
    FFT_fadd_32ns_32ndEe_U3->din1(reg_261);
    FFT_fadd_32ns_32ndEe_U3->ce(ap_var_for_const0);
    FFT_fadd_32ns_32ndEe_U3->dout(grp_fu_221_p2);
    FFT_fadd_32ns_32ndEe_U4 = new FFT_fadd_32ns_32ndEe<1,5,32,32,32>("FFT_fadd_32ns_32ndEe_U4");
    FFT_fadd_32ns_32ndEe_U4->clk(ap_clk);
    FFT_fadd_32ns_32ndEe_U4->reset(ap_rst);
    FFT_fadd_32ns_32ndEe_U4->din0(reg_253);
    FFT_fadd_32ns_32ndEe_U4->din1(reg_268);
    FFT_fadd_32ns_32ndEe_U4->ce(ap_var_for_const0);
    FFT_fadd_32ns_32ndEe_U4->dout(grp_fu_225_p2);
    FFT_fmul_32ns_32neOg_U5 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U5");
    FFT_fmul_32ns_32neOg_U5->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U5->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U5->din0(p_r_M_real_reg_489);
    FFT_fmul_32ns_32neOg_U5->din1(reg_245);
    FFT_fmul_32ns_32neOg_U5->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U5->dout(grp_fu_229_p2);
    FFT_fmul_32ns_32neOg_U6 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U6");
    FFT_fmul_32ns_32neOg_U6->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U6->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U6->din0(p_r_M_imag_reg_495);
    FFT_fmul_32ns_32neOg_U6->din1(reg_253);
    FFT_fmul_32ns_32neOg_U6->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U6->dout(grp_fu_233_p2);
    FFT_fmul_32ns_32neOg_U7 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U7");
    FFT_fmul_32ns_32neOg_U7->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U7->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U7->din0(p_r_M_imag_reg_495);
    FFT_fmul_32ns_32neOg_U7->din1(reg_245);
    FFT_fmul_32ns_32neOg_U7->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U7->dout(grp_fu_237_p2);
    FFT_fmul_32ns_32neOg_U8 = new FFT_fmul_32ns_32neOg<1,4,32,32,32>("FFT_fmul_32ns_32neOg_U8");
    FFT_fmul_32ns_32neOg_U8->clk(ap_clk);
    FFT_fmul_32ns_32neOg_U8->reset(ap_rst);
    FFT_fmul_32ns_32neOg_U8->din0(p_r_M_real_reg_489);
    FFT_fmul_32ns_32neOg_U8->din1(reg_253);
    FFT_fmul_32ns_32neOg_U8->ce(ap_var_for_const0);
    FFT_fmul_32ns_32neOg_U8->dout(grp_fu_241_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FFT_stage_cast1_fu_283_p1);
    sensitive << ( FFT_stage );

    SC_METHOD(thread_Llimit_fu_389_p2);
    sensitive << ( FFT_stage_cast1_reg_419 );
    sensitive << ( Ulimit_reg_447 );

    SC_METHOD(thread_Ulimit_fu_337_p2);
    sensitive << ( butterfly_span_0_reg_180 );
    sensitive << ( shl_ln28_fu_332_p2 );

    SC_METHOD(thread_W_M_imag_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln30_fu_393_p1 );

    SC_METHOD(thread_W_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_W_M_real_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln30_fu_393_p1 );

    SC_METHOD(thread_W_M_real_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln33_fu_291_p2);
    sensitive << ( trunc_ln33_fu_287_p1 );

    SC_METHOD(thread_add_ln35_fu_305_p2);
    sensitive << ( trunc_ln35_fu_301_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_315_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_315_p2 );

    SC_METHOD(thread_butterfly_pass_1_fu_365_p3);
    sensitive << ( icmp_ln35_fu_354_p2 );
    sensitive << ( butterfly_pass_fu_359_p2 );

    SC_METHOD(thread_butterfly_pass_2_fu_381_p3);
    sensitive << ( butterfly_pass_0_reg_191 );
    sensitive << ( icmp_ln33_fu_343_p2 );
    sensitive << ( butterfly_pass_1_fu_365_p3 );

    SC_METHOD(thread_butterfly_pass_fu_359_p2);
    sensitive << ( butterfly_pass_0_reg_191 );

    SC_METHOD(thread_butterfly_span_fu_348_p2);
    sensitive << ( butterfly_span_0_reg_180 );

    SC_METHOD(thread_data_IN_M_imag_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln30_1_fu_398_p1 );
    sensitive << ( sext_ln31_fu_404_p1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_IN_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_IN_M_real_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln30_1_fu_398_p1 );
    sensitive << ( sext_ln31_fu_404_p1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_IN_M_real_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT_M_imag_address0);
    sensitive << ( sext_ln30_1_reg_473 );
    sensitive << ( sext_ln31_reg_521 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_imag_ce0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_imag_d0);
    sensitive << ( reg_268 );
    sensitive << ( complex_M_imag_writ_1_reg_542 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_imag_we0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_real_address0);
    sensitive << ( sext_ln30_1_reg_473 );
    sensitive << ( sext_ln31_reg_521 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_real_ce0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_real_d0);
    sensitive << ( reg_261 );
    sensitive << ( complex_M_real_writ_1_reg_537 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_OUT_M_real_we0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_213_p0);
    sensitive << ( reg_245 );
    sensitive << ( tmp_i_i_reg_501 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_213_p1);
    sensitive << ( reg_261 );
    sensitive << ( tmp_3_i_i_reg_506 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_217_opcode);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_217_p0);
    sensitive << ( reg_253 );
    sensitive << ( tmp_5_i_i_reg_511 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_217_p1);
    sensitive << ( reg_268 );
    sensitive << ( tmp_6_i_i_reg_516 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_fu_321_p2);
    sensitive << ( i_0_reg_202 );

    SC_METHOD(thread_icmp_ln26_fu_315_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_202 );

    SC_METHOD(thread_icmp_ln33_fu_343_p2);
    sensitive << ( zext_ln33_reg_424 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_315_p2 );
    sensitive << ( butterfly_span_0_reg_180 );

    SC_METHOD(thread_icmp_ln35_fu_354_p2);
    sensitive << ( zext_ln35_reg_429 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_315_p2 );
    sensitive << ( butterfly_pass_0_reg_191 );

    SC_METHOD(thread_index_fu_327_p2);
    sensitive << ( index_shift_cast_reg_414 );
    sensitive << ( butterfly_span_0_reg_180 );

    SC_METHOD(thread_index_shift_cast_fu_279_p1);
    sensitive << ( index_shift );

    SC_METHOD(thread_pass_shift_cast_fu_275_p1);
    sensitive << ( pass_shift );

    SC_METHOD(thread_select_ln33_fu_373_p3);
    sensitive << ( icmp_ln33_fu_343_p2 );
    sensitive << ( butterfly_span_fu_348_p2 );

    SC_METHOD(thread_sext_ln30_1_fu_398_p1);
    sensitive << ( Llimit_fu_389_p2 );

    SC_METHOD(thread_sext_ln30_fu_393_p1);
    sensitive << ( index_reg_442 );

    SC_METHOD(thread_sext_ln31_fu_404_p1);
    sensitive << ( Ulimit_reg_447 );

    SC_METHOD(thread_shl_ln28_fu_332_p2);
    sensitive << ( pass_shift_cast_reg_409 );
    sensitive << ( butterfly_pass_0_reg_191 );

    SC_METHOD(thread_trunc_ln33_fu_287_p1);
    sensitive << ( FFT_stage );

    SC_METHOD(thread_trunc_ln35_fu_301_p1);
    sensitive << ( pass_check );

    SC_METHOD(thread_zext_ln33_fu_297_p1);
    sensitive << ( add_ln33_fu_291_p2 );

    SC_METHOD(thread_zext_ln35_fu_311_p1);
    sensitive << ( add_ln35_fu_305_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_315_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, FFT_stage, "(port)FFT_stage");
    sc_trace(mVcdFile, pass_check, "(port)pass_check");
    sc_trace(mVcdFile, index_shift, "(port)index_shift");
    sc_trace(mVcdFile, pass_shift, "(port)pass_shift");
    sc_trace(mVcdFile, data_IN_M_real_address0, "(port)data_IN_M_real_address0");
    sc_trace(mVcdFile, data_IN_M_real_ce0, "(port)data_IN_M_real_ce0");
    sc_trace(mVcdFile, data_IN_M_real_q0, "(port)data_IN_M_real_q0");
    sc_trace(mVcdFile, data_IN_M_imag_address0, "(port)data_IN_M_imag_address0");
    sc_trace(mVcdFile, data_IN_M_imag_ce0, "(port)data_IN_M_imag_ce0");
    sc_trace(mVcdFile, data_IN_M_imag_q0, "(port)data_IN_M_imag_q0");
    sc_trace(mVcdFile, data_OUT_M_real_address0, "(port)data_OUT_M_real_address0");
    sc_trace(mVcdFile, data_OUT_M_real_ce0, "(port)data_OUT_M_real_ce0");
    sc_trace(mVcdFile, data_OUT_M_real_we0, "(port)data_OUT_M_real_we0");
    sc_trace(mVcdFile, data_OUT_M_real_d0, "(port)data_OUT_M_real_d0");
    sc_trace(mVcdFile, data_OUT_M_imag_address0, "(port)data_OUT_M_imag_address0");
    sc_trace(mVcdFile, data_OUT_M_imag_ce0, "(port)data_OUT_M_imag_ce0");
    sc_trace(mVcdFile, data_OUT_M_imag_we0, "(port)data_OUT_M_imag_we0");
    sc_trace(mVcdFile, data_OUT_M_imag_d0, "(port)data_OUT_M_imag_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, W_M_real_address0, "W_M_real_address0");
    sc_trace(mVcdFile, W_M_real_ce0, "W_M_real_ce0");
    sc_trace(mVcdFile, W_M_real_q0, "W_M_real_q0");
    sc_trace(mVcdFile, W_M_imag_address0, "W_M_imag_address0");
    sc_trace(mVcdFile, W_M_imag_ce0, "W_M_imag_ce0");
    sc_trace(mVcdFile, W_M_imag_q0, "W_M_imag_q0");
    sc_trace(mVcdFile, reg_245, "reg_245");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, reg_253, "reg_253");
    sc_trace(mVcdFile, grp_fu_213_p2, "grp_fu_213_p2");
    sc_trace(mVcdFile, reg_261, "reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_217_p2, "grp_fu_217_p2");
    sc_trace(mVcdFile, reg_268, "reg_268");
    sc_trace(mVcdFile, pass_shift_cast_fu_275_p1, "pass_shift_cast_fu_275_p1");
    sc_trace(mVcdFile, pass_shift_cast_reg_409, "pass_shift_cast_reg_409");
    sc_trace(mVcdFile, index_shift_cast_fu_279_p1, "index_shift_cast_fu_279_p1");
    sc_trace(mVcdFile, index_shift_cast_reg_414, "index_shift_cast_reg_414");
    sc_trace(mVcdFile, FFT_stage_cast1_fu_283_p1, "FFT_stage_cast1_fu_283_p1");
    sc_trace(mVcdFile, FFT_stage_cast1_reg_419, "FFT_stage_cast1_reg_419");
    sc_trace(mVcdFile, zext_ln33_fu_297_p1, "zext_ln33_fu_297_p1");
    sc_trace(mVcdFile, zext_ln33_reg_424, "zext_ln33_reg_424");
    sc_trace(mVcdFile, zext_ln35_fu_311_p1, "zext_ln35_fu_311_p1");
    sc_trace(mVcdFile, zext_ln35_reg_429, "zext_ln35_reg_429");
    sc_trace(mVcdFile, i_fu_321_p2, "i_fu_321_p2");
    sc_trace(mVcdFile, i_reg_437, "i_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, index_fu_327_p2, "index_fu_327_p2");
    sc_trace(mVcdFile, index_reg_442, "index_reg_442");
    sc_trace(mVcdFile, icmp_ln26_fu_315_p2, "icmp_ln26_fu_315_p2");
    sc_trace(mVcdFile, Ulimit_fu_337_p2, "Ulimit_fu_337_p2");
    sc_trace(mVcdFile, Ulimit_reg_447, "Ulimit_reg_447");
    sc_trace(mVcdFile, select_ln33_fu_373_p3, "select_ln33_fu_373_p3");
    sc_trace(mVcdFile, select_ln33_reg_453, "select_ln33_reg_453");
    sc_trace(mVcdFile, butterfly_pass_2_fu_381_p3, "butterfly_pass_2_fu_381_p3");
    sc_trace(mVcdFile, butterfly_pass_2_reg_458, "butterfly_pass_2_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln30_1_fu_398_p1, "sext_ln30_1_fu_398_p1");
    sc_trace(mVcdFile, sext_ln30_1_reg_473, "sext_ln30_1_reg_473");
    sc_trace(mVcdFile, p_r_M_real_reg_489, "p_r_M_real_reg_489");
    sc_trace(mVcdFile, p_r_M_imag_reg_495, "p_r_M_imag_reg_495");
    sc_trace(mVcdFile, grp_fu_229_p2, "grp_fu_229_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_501, "tmp_i_i_reg_501");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_233_p2, "grp_fu_233_p2");
    sc_trace(mVcdFile, tmp_3_i_i_reg_506, "tmp_3_i_i_reg_506");
    sc_trace(mVcdFile, grp_fu_237_p2, "grp_fu_237_p2");
    sc_trace(mVcdFile, tmp_5_i_i_reg_511, "tmp_5_i_i_reg_511");
    sc_trace(mVcdFile, grp_fu_241_p2, "grp_fu_241_p2");
    sc_trace(mVcdFile, tmp_6_i_i_reg_516, "tmp_6_i_i_reg_516");
    sc_trace(mVcdFile, sext_ln31_fu_404_p1, "sext_ln31_fu_404_p1");
    sc_trace(mVcdFile, sext_ln31_reg_521, "sext_ln31_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_221_p2, "grp_fu_221_p2");
    sc_trace(mVcdFile, complex_M_real_writ_1_reg_537, "complex_M_real_writ_1_reg_537");
    sc_trace(mVcdFile, grp_fu_225_p2, "grp_fu_225_p2");
    sc_trace(mVcdFile, complex_M_imag_writ_1_reg_542, "complex_M_imag_writ_1_reg_542");
    sc_trace(mVcdFile, butterfly_span_0_reg_180, "butterfly_span_0_reg_180");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, butterfly_pass_0_reg_191, "butterfly_pass_0_reg_191");
    sc_trace(mVcdFile, i_0_reg_202, "i_0_reg_202");
    sc_trace(mVcdFile, sext_ln30_fu_393_p1, "sext_ln30_fu_393_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_213_p0, "grp_fu_213_p0");
    sc_trace(mVcdFile, grp_fu_213_p1, "grp_fu_213_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_217_p0, "grp_fu_217_p0");
    sc_trace(mVcdFile, grp_fu_217_p1, "grp_fu_217_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, trunc_ln33_fu_287_p1, "trunc_ln33_fu_287_p1");
    sc_trace(mVcdFile, add_ln33_fu_291_p2, "add_ln33_fu_291_p2");
    sc_trace(mVcdFile, trunc_ln35_fu_301_p1, "trunc_ln35_fu_301_p1");
    sc_trace(mVcdFile, add_ln35_fu_305_p2, "add_ln35_fu_305_p2");
    sc_trace(mVcdFile, shl_ln28_fu_332_p2, "shl_ln28_fu_332_p2");
    sc_trace(mVcdFile, icmp_ln35_fu_354_p2, "icmp_ln35_fu_354_p2");
    sc_trace(mVcdFile, butterfly_pass_fu_359_p2, "butterfly_pass_fu_359_p2");
    sc_trace(mVcdFile, icmp_ln33_fu_343_p2, "icmp_ln33_fu_343_p2");
    sc_trace(mVcdFile, butterfly_span_fu_348_p2, "butterfly_span_fu_348_p2");
    sc_trace(mVcdFile, butterfly_pass_1_fu_365_p3, "butterfly_pass_1_fu_365_p3");
    sc_trace(mVcdFile, Llimit_fu_389_p2, "Llimit_fu_389_p2");
    sc_trace(mVcdFile, grp_fu_217_opcode, "grp_fu_217_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

FFT0::~FFT0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete W_M_real_U;
    delete W_M_imag_U;
    delete FFT_fsub_32ns_32nbkb_U1;
    delete FFT_faddfsub_32nscud_U2;
    delete FFT_fadd_32ns_32ndEe_U3;
    delete FFT_fadd_32ns_32ndEe_U4;
    delete FFT_fmul_32ns_32neOg_U5;
    delete FFT_fmul_32ns_32neOg_U6;
    delete FFT_fmul_32ns_32neOg_U7;
    delete FFT_fmul_32ns_32neOg_U8;
}

void FFT0::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void FFT0::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        butterfly_pass_0_reg_191 = butterfly_pass_2_reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        butterfly_pass_0_reg_191 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        butterfly_span_0_reg_180 = select_ln33_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        butterfly_span_0_reg_180 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_0_reg_202 = i_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_202 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        FFT_stage_cast1_reg_419 = FFT_stage_cast1_fu_283_p1.read();
        index_shift_cast_reg_414 = index_shift_cast_fu_279_p1.read();
        pass_shift_cast_reg_409 = pass_shift_cast_fu_275_p1.read();
        zext_ln33_reg_424 = zext_ln33_fu_297_p1.read();
        zext_ln35_reg_429 = zext_ln35_fu_311_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_315_p2.read(), ap_const_lv1_0))) {
        Ulimit_reg_447 = Ulimit_fu_337_p2.read();
        butterfly_pass_2_reg_458 = butterfly_pass_2_fu_381_p3.read();
        index_reg_442 = index_fu_327_p2.read();
        select_ln33_reg_453 = select_ln33_fu_373_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        complex_M_imag_writ_1_reg_542 = grp_fu_225_p2.read();
        complex_M_real_writ_1_reg_537 = grp_fu_221_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_437 = i_fu_321_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_r_M_imag_reg_495 = W_M_imag_q0.read();
        p_r_M_real_reg_489 = W_M_real_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_245 = data_IN_M_real_q0.read();
        reg_253 = data_IN_M_imag_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        reg_261 = grp_fu_213_p2.read();
        reg_268 = grp_fu_217_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sext_ln30_1_reg_473 = sext_ln30_1_fu_398_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sext_ln31_reg_521 = sext_ln31_fu_404_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_3_i_i_reg_506 = grp_fu_233_p2.read();
        tmp_5_i_i_reg_511 = grp_fu_237_p2.read();
        tmp_6_i_i_reg_516 = grp_fu_241_p2.read();
        tmp_i_i_reg_501 = grp_fu_229_p2.read();
    }
}

void FFT0::thread_FFT_stage_cast1_fu_283_p1() {
    FFT_stage_cast1_fu_283_p1 = esl_zext<32,6>(FFT_stage.read());
}

void FFT0::thread_Llimit_fu_389_p2() {
    Llimit_fu_389_p2 = (!Ulimit_reg_447.read().is_01() || !FFT_stage_cast1_reg_419.read().is_01())? sc_lv<32>(): (sc_bigint<32>(Ulimit_reg_447.read()) + sc_biguint<32>(FFT_stage_cast1_reg_419.read()));
}

void FFT0::thread_Ulimit_fu_337_p2() {
    Ulimit_fu_337_p2 = (!butterfly_span_0_reg_180.read().is_01() || !shl_ln28_fu_332_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(butterfly_span_0_reg_180.read()) + sc_biguint<32>(shl_ln28_fu_332_p2.read()));
}

void FFT0::thread_W_M_imag_address0() {
    W_M_imag_address0 =  (sc_lv<4>) (sext_ln30_fu_393_p1.read());
}

void FFT0::thread_W_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        W_M_imag_ce0 = ap_const_logic_1;
    } else {
        W_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_W_M_real_address0() {
    W_M_real_address0 =  (sc_lv<4>) (sext_ln30_fu_393_p1.read());
}

void FFT0::thread_W_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        W_M_real_ce0 = ap_const_logic_1;
    } else {
        W_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_add_ln33_fu_291_p2() {
    add_ln33_fu_291_p2 = (!ap_const_lv5_1F.is_01() || !trunc_ln33_fu_287_p1.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1F) + sc_biguint<5>(trunc_ln33_fu_287_p1.read()));
}

void FFT0::thread_add_ln35_fu_305_p2() {
    add_ln35_fu_305_p2 = (!ap_const_lv5_1F.is_01() || !trunc_ln35_fu_301_p1.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1F) + sc_biguint<5>(trunc_ln35_fu_301_p1.read()));
}

void FFT0::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT0::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT0::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void FFT0::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void FFT0::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void FFT0::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void FFT0::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT0::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void FFT0::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT0::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT0::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT0::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT0::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT0::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln26_fu_315_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT0::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT0::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_315_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT0::thread_butterfly_pass_1_fu_365_p3() {
    butterfly_pass_1_fu_365_p3 = (!icmp_ln35_fu_354_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln35_fu_354_p2.read()[0].to_bool())? butterfly_pass_fu_359_p2.read(): ap_const_lv32_0);
}

void FFT0::thread_butterfly_pass_2_fu_381_p3() {
    butterfly_pass_2_fu_381_p3 = (!icmp_ln33_fu_343_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln33_fu_343_p2.read()[0].to_bool())? butterfly_pass_0_reg_191.read(): butterfly_pass_1_fu_365_p3.read());
}

void FFT0::thread_butterfly_pass_fu_359_p2() {
    butterfly_pass_fu_359_p2 = (!butterfly_pass_0_reg_191.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(butterfly_pass_0_reg_191.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void FFT0::thread_butterfly_span_fu_348_p2() {
    butterfly_span_fu_348_p2 = (!butterfly_span_0_reg_180.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(butterfly_span_0_reg_180.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void FFT0::thread_data_IN_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (sext_ln31_fu_404_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_IN_M_imag_address0 =  (sc_lv<5>) (sext_ln30_1_fu_398_p1.read());
    } else {
        data_IN_M_imag_address0 = "XXXXX";
    }
}

void FFT0::thread_data_IN_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        data_IN_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_data_IN_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (sext_ln31_fu_404_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_IN_M_real_address0 =  (sc_lv<5>) (sext_ln30_1_fu_398_p1.read());
    } else {
        data_IN_M_real_address0 = "XXXXX";
    }
}

void FFT0::thread_data_IN_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        data_IN_M_real_ce0 = ap_const_logic_1;
    } else {
        data_IN_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_data_OUT_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (sext_ln31_reg_521.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_OUT_M_imag_address0 =  (sc_lv<5>) (sext_ln30_1_reg_473.read());
    } else {
        data_OUT_M_imag_address0 = "XXXXX";
    }
}

void FFT0::thread_data_OUT_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        data_OUT_M_imag_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_data_OUT_M_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_OUT_M_imag_d0 = complex_M_imag_writ_1_reg_542.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_OUT_M_imag_d0 = reg_268.read();
    } else {
        data_OUT_M_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_data_OUT_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        data_OUT_M_imag_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_imag_we0 = ap_const_logic_0;
    }
}

void FFT0::thread_data_OUT_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (sext_ln31_reg_521.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_OUT_M_real_address0 =  (sc_lv<5>) (sext_ln30_1_reg_473.read());
    } else {
        data_OUT_M_real_address0 = "XXXXX";
    }
}

void FFT0::thread_data_OUT_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        data_OUT_M_real_ce0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_ce0 = ap_const_logic_0;
    }
}

void FFT0::thread_data_OUT_M_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_OUT_M_real_d0 = complex_M_real_writ_1_reg_537.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        data_OUT_M_real_d0 = reg_261.read();
    } else {
        data_OUT_M_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_data_OUT_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        data_OUT_M_real_we0 = ap_const_logic_1;
    } else {
        data_OUT_M_real_we0 = ap_const_logic_0;
    }
}

void FFT0::thread_grp_fu_213_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_213_p0 = reg_245.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_213_p0 = tmp_i_i_reg_501.read();
    } else {
        grp_fu_213_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_grp_fu_213_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_213_p1 = reg_261.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_213_p1 = tmp_3_i_i_reg_506.read();
    } else {
        grp_fu_213_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_grp_fu_217_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_217_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_217_opcode = ap_const_lv2_0;
    } else {
        grp_fu_217_opcode =  (sc_lv<2>) ("XX");
    }
}

void FFT0::thread_grp_fu_217_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_217_p0 = reg_253.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_217_p0 = tmp_5_i_i_reg_511.read();
    } else {
        grp_fu_217_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_grp_fu_217_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_217_p1 = reg_268.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_217_p1 = tmp_6_i_i_reg_516.read();
    } else {
        grp_fu_217_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT0::thread_i_fu_321_p2() {
    i_fu_321_p2 = (!i_0_reg_202.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_202.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void FFT0::thread_icmp_ln26_fu_315_p2() {
    icmp_ln26_fu_315_p2 = (!i_0_reg_202.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_202.read() == ap_const_lv5_10);
}

void FFT0::thread_icmp_ln33_fu_343_p2() {
    icmp_ln33_fu_343_p2 = (!butterfly_span_0_reg_180.read().is_01() || !zext_ln33_reg_424.read().is_01())? sc_lv<1>(): (sc_bigint<32>(butterfly_span_0_reg_180.read()) < sc_bigint<32>(zext_ln33_reg_424.read()));
}

void FFT0::thread_icmp_ln35_fu_354_p2() {
    icmp_ln35_fu_354_p2 = (!butterfly_pass_0_reg_191.read().is_01() || !zext_ln35_reg_429.read().is_01())? sc_lv<1>(): (sc_bigint<32>(butterfly_pass_0_reg_191.read()) < sc_bigint<32>(zext_ln35_reg_429.read()));
}

void FFT0::thread_index_fu_327_p2() {
    index_fu_327_p2 = (!index_shift_cast_reg_414.read().is_01())? sc_lv<32>(): butterfly_span_0_reg_180.read() << (unsigned short)index_shift_cast_reg_414.read().to_uint();
}

void FFT0::thread_index_shift_cast_fu_279_p1() {
    index_shift_cast_fu_279_p1 = esl_zext<32,4>(index_shift.read());
}

void FFT0::thread_pass_shift_cast_fu_275_p1() {
    pass_shift_cast_fu_275_p1 = esl_zext<32,4>(pass_shift.read());
}

void FFT0::thread_select_ln33_fu_373_p3() {
    select_ln33_fu_373_p3 = (!icmp_ln33_fu_343_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln33_fu_343_p2.read()[0].to_bool())? butterfly_span_fu_348_p2.read(): ap_const_lv32_0);
}

void FFT0::thread_sext_ln30_1_fu_398_p1() {
    sext_ln30_1_fu_398_p1 = esl_sext<64,32>(Llimit_fu_389_p2.read());
}

void FFT0::thread_sext_ln30_fu_393_p1() {
    sext_ln30_fu_393_p1 = esl_sext<64,32>(index_reg_442.read());
}

void FFT0::thread_sext_ln31_fu_404_p1() {
    sext_ln31_fu_404_p1 = esl_sext<64,32>(Ulimit_reg_447.read());
}

void FFT0::thread_shl_ln28_fu_332_p2() {
    shl_ln28_fu_332_p2 = (!pass_shift_cast_reg_409.read().is_01())? sc_lv<32>(): butterfly_pass_0_reg_191.read() << (unsigned short)pass_shift_cast_reg_409.read().to_uint();
}

void FFT0::thread_trunc_ln33_fu_287_p1() {
    trunc_ln33_fu_287_p1 = FFT_stage.read().range(5-1, 0);
}

void FFT0::thread_trunc_ln35_fu_301_p1() {
    trunc_ln35_fu_301_p1 = pass_check.read().range(5-1, 0);
}

void FFT0::thread_zext_ln33_fu_297_p1() {
    zext_ln33_fu_297_p1 = esl_zext<32,5>(add_ln33_fu_291_p2.read());
}

void FFT0::thread_zext_ln35_fu_311_p1() {
    zext_ln35_fu_311_p1 = esl_zext<32,5>(add_ln35_fu_305_p2.read());
}

void FFT0::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_315_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

