# This script segment is generated automatically by AutoPilot

set id 10
set name FFT_fsub_32ns_32ncud
set corename simcore_fsub
set op fsub
set stage_num 5
set max_latency -1
set registered_input 1
set impl_style full_dsp
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fsub] == "ap_gen_simcore_fsub"} {
eval "ap_gen_simcore_fsub { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fsub, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fsub
set corename FAddSub
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


set id 11
set name FFT_fadd_32ns_32ndEe
set corename simcore_fadd
set op fadd
set stage_num 5
set max_latency -1
set registered_input 1
set impl_style full_dsp
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fadd] == "ap_gen_simcore_fadd"} {
eval "ap_gen_simcore_fadd { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fadd, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fadd
set corename FAddSub
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


set id 14
set name FFT_fmul_32ns_32neOg
set corename simcore_fmul
set op fmul
set stage_num 4
set max_latency -1
set registered_input 1
set impl_style max_dsp
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fmul] == "ap_gen_simcore_fmul"} {
eval "ap_gen_simcore_fmul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fmul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fmul
set corename FMul
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 25
set hasByteEnable 0
set MemName mult_window_Blackbkb
set CoreName ap_simcore_mem
set PortList { 1 1 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "10100011100000000000000000000000" "00111000011001010011101110100001" "00111001011001010110001000110001" "00111010000000010010101101011011" "00111010011001011111110000101110" "00111010101101000000011100000100" "00111011000000011110110110101001" "00111011001100010101011110001010" "00111011011010000101111110110011" "00111011100100111001010010001100" "00111011101101101110110101111000" "00111011110111100101000001001011" "00111100000001001110101001011000" "00111100000111001100101000011100" "00111100001101101101010100011111" "00111100010100110001100111101101" "00111100011100011010011111011001" "00111100100010010100011101111100" "00111100100110101111000000000110" "00111100101011011101011000111011" "00111100110000100000001100010000" "00111100110101110111111110111010" "00111100111011100101010110100011" "00111101000000110100011100101111" "00111101000100000001100111010001" "00111101000111011010011110011101" "00111101001010111111010110000011" "00111101001110110000100001110001" "00111101010010101110010101010011" "00111101010110111001000100001100" "00111101011011010001000001110010" "00111101011111110110100001000101" "00111101100010010100111010010111" "00111101100100110101100111011100" "00111101100111011101100000100101" "00111101101010001100101110010000" "00111101101101000011011000100110" "00111101110000000001100111010011" "00111101110011000111100001101011" "00111101110110010101001110011110" "00111101111001101010110011111110" "00111101111101001000010111111000" "00111110000000010110111111101010" "00111110000010001101110111010111" "00111110000100001000110100111101" "00111110000110000111111001111111" "00111110001000001011000111101001" "00111110001010010010011110101110" "00111110001100011101111111100110" "00111110001110101101101010010000" "00111110010001000001011110010001" "00111110010011011001011010110000" "00111110010101110101011110011000" "00111110011000010101100111010101" "00111110011010111001110011011001" "00111110011101100001111111110010" "00111110100000000111000100101010" "00111110100001011111000110001000" "00111110100010111001000010001100" "00111110100100010100110110100001" "00111110100101110010100000011111" "00111110100111010001111101001111" "00111110101000110011001001101011" "00111110101010010110000010011100" "00111110101011111010100011111001" "00111110101101100000101010001110" "00111110101111001000010001010001" "00111110110000110001010100101110" "00111110110010011011101111111111" "00111110110100000111011110001110" "00111110110101110100011010011000" "00111110110111100010011111001011" "00111110111001010001100111000110" "00111110111011000001101100011010" "00111110111100110010101001001110" "00111110111110100100010111011000" "00111111000000001011011000010010" "00111111000001000100110111001001" "00111111000001111110100100111100" "00111111000010111000011110001110" "00111111000011110010011111100000" "00111111000100101100100101001111" "00111111000101100110101011101111" "00111111000110100000101111010101" "00111111000111011010101100010001" "00111111001000010100011110101110" "00111111001001001110000010110110" "00111111001010000111010100110001" "00111111001011000000010000100010" "00111111001011111000110010001111" "00111111001100110000110101111000" "00111111001101101000010111100001" "00111111001110011111010011001001" "00111111001111010101100100110011" "00111111010000001011001000100001" "00111111010000111111111010010101" "00111111010001110011110110010101" "00111111010010100110111000100110" "00111111010011011000111101010001" "00111111010100001010000000100010" "00111111010100111001111110101000" "00111111010101101000110011110110" "00111111010110010110011100100001" "00111111010111000010110101000101" "00111111010111101101111010000010" "00111111011000010111100111111101" "00111111011000111111111011100010" "00111111011001100110110001100001" "00111111011010001100000110110100" "00111111011010101111111000010111" "00111111011011010010000011010011" "00111111011011110010100100110011" "00111111011100010001011010001111" "00111111011100101110100001000011" "00111111011101001001110110110111" "00111111011101100011011001011001" "00111111011101111011000110100010" "00111111011110010000111100010100" "00111111011110100100111000111011" "00111111011110110110111010101011" "00111111011111000111000000000110" "00111111011111010101000111110011" "00111111011111100001010000101000" "00111111011111101011011001100011" "00111111011111110011100001101110" "00111111011111111001101000011101" "00111111011111111101101101001110" "00111111011111111111101111101100" "00111111011111111111101111101100" "00111111011111111101101101001110" "00111111011111111001101000011101" "00111111011111110011100001101110" "00111111011111101011011001100011" "00111111011111100001010000101000" "00111111011111010101000111110011" "00111111011111000111000000000110" "00111111011110110110111010101011" "00111111011110100100111000111011" "00111111011110010000111100010100" "00111111011101111011000110100010" "00111111011101100011011001011001" "00111111011101001001110110110111" "00111111011100101110100001000011" "00111111011100010001011010001111" "00111111011011110010100100110011" "00111111011011010010000011010011" "00111111011010101111111000010111" "00111111011010001100000110110100" "00111111011001100110110001100001" "00111111011000111111111011100010" "00111111011000010111100111111101" "00111111010111101101111010000010" "00111111010111000010110101000101" "00111111010110010110011100100001" "00111111010101101000110011110110" "00111111010100111001111110101000" "00111111010100001010000000100010" "00111111010011011000111101010001" "00111111010010100110111000100110" "00111111010001110011110110010101" "00111111010000111111111010010101" "00111111010000001011001000100001" "00111111001111010101100100110011" "00111111001110011111010011001001" "00111111001101101000010111100001" "00111111001100110000110101111000" "00111111001011111000110010001111" "00111111001011000000010000100010" "00111111001010000111010100110001" "00111111001001001110000010110110" "00111111001000010100011110101110" "00111111000111011010101100010001" "00111111000110100000101111010101" "00111111000101100110101011101111" "00111111000100101100100101001111" "00111111000011110010011111100000" "00111111000010111000011110001110" "00111111000001111110100100111100" "00111111000001000100110111001001" "00111111000000001011011000010010" "00111110111110100100010111011000" "00111110111100110010101001001110" "00111110111011000001101100011010" "00111110111001010001100111000110" "00111110110111100010011111001011" "00111110110101110100011010011000" "00111110110100000111011110001110" "00111110110010011011101111111111" "00111110110000110001010100101110" "00111110101111001000010001010001" "00111110101101100000101010001110" "00111110101011111010100011111001" "00111110101010010110000010011100" "00111110101000110011001001101011" "00111110100111010001111101001111" "00111110100101110010100000011111" "00111110100100010100110110100001" "00111110100010111001000010001100" "00111110100001011111000110001000" "00111110100000000111000100101010" "00111110011101100001111111110010" "00111110011010111001110011011001" "00111110011000010101100111010101" "00111110010101110101011110011000" "00111110010011011001011010110000" "00111110010001000001011110010001" "00111110001110101101101010010000" "00111110001100011101111111100110" "00111110001010010010011110101110" "00111110001000001011000111101001" "00111110000110000111111001111111" "00111110000100001000110100111101" "00111110000010001101110111010111" "00111110000000010110111111101010" "00111101111101001000010111111000" "00111101111001101010110011111110" "00111101110110010101001110011110" "00111101110011000111100001101011" "00111101110000000001100111010011" "00111101101101000011011000100110" "00111101101010001100101110010000" "00111101100111011101100000100101" "00111101100100110101100111011100" "00111101100010010100111010010111" "00111101011111110110100001000101" "00111101011011010001000001110010" "00111101010110111001000100001100" "00111101010010101110010101010011" "00111101001110110000100001110001" "00111101001010111111010110000011" "00111101000111011010011110011101" "00111101000100000001100111010001" "00111101000000110100011100101111" "00111100111011100101010110100011" "00111100110101110111111110111010" "00111100110000100000001100010000" "00111100101011011101011000111011" "00111100100110101111000000000110" "00111100100010010100011101111100" "00111100011100011010011111011001" "00111100010100110001100111101101" "00111100001101101101010100011111" "00111100000111001100101000011100" "00111100000001001110101001011000" "00111011110111100101000001001011" "00111011101101101110110101111000" "00111011100100111001010010001100" "00111011011010000101111110110011" "00111011001100010101011110001010" "00111011000000011110110110101001" "00111010101101000000011100000100" "00111010011001011111110000101110" "00111010000000010010101101011011" "00111001011001010110001000110001" "00111000011001010011101110100001" "10100011100000000000000000000000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 26
set hasByteEnable 0
set MemName mult_window_Hamm256
set CoreName ap_simcore_mem
set PortList { 1 1 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "00111101101000111101011100001010" "00111101101001000010000000111111" "00111101101001001111101111010011" "00111101101001100110100110100100" "00111101101010000110100101111001" "00111101101010101111101100000010" "00111101101011100001110111011000" "00111101101100011101000110000000" "00111101101101100001010101100111" "00111101101110101110100011100000" "00111101110000000100101100110000" "00111101110001100011101101111101" "00111101110011001011100011011100" "00111101110100111100001001001011" "00111101110110110101011010110000" "00111101111000110111010011100001" "00111101111011000001101110011001" "00111101111101010100100101111111" "00111101111111101111110100100111" "00111110000001001001101010000111" "00111110000010011111011111010000" "00111110000011111001010110010111" "00111110000101010111001011111110" "00111110000110111000111100011100" "00111110001000011110100011111110" "00111110001010000111111110100101" "00111110001011110101001000001101" "00111110001101100101111100100101" "00111110001111011010010111010111" "00111110010001010010010011111111" "00111110010011001101101101110100" "00111110010101001100100000000011" "00111110010111001110100101110000" "00111110011001010011111001111001" "00111110011011011100010111010001" "00111110011101100111111000100101" "00111110011111110110011000011011" "00111110100001000011111000101000" "00111110100010001101111110101101" "00111110100011011001011011100100" "00111110100100100110001100010010" "00111110100101110100001101111001" "00111110100111000011011101010101" "00111110101000010011110111100010" "00111110101001100101011001011000" "00111110101010110111111111101101" "00111110101100001011100111010001" "00111110101101100000001100110111" "00111110101110110101101101001100" "00111110110000001100000100111011" "00111110110001100011010000101100" "00111110110010111011001101001000" "00111110110100010011110110110100" "00111110110101101101001010010011" "00111110110111000111000100000110" "00111110111000100001100000110000" "00111110111001111100011100101110" "00111110111011010111110100011111" "00111110111100110011100100011111" "00111110111110001111101001001010" "00111110111111101011111110111011" "00111111000000100100010001000111" "00111111000001010010100111101101" "00111111000010000001000001011101" "00111111000010101111011100100100" "00111111000011011101110111001110" "00111111000100001100001111101000" "00111111000100111010100011111110" "00111111000101101000110010011101" "00111111000110010110111001010011" "00111111000111000100110110101100" "00111111000111110010101000110110" "00111111001000100000001110000000" "00111111001001001101100100011000" "00111111001001111010101010001110" "00111111001010100111011101110000" "00111111001011010011111101010000" "00111111001100000000000111000000" "00111111001100101011111001010001" "00111111001101010111010010010110" "00111111001110000010010000100101" "00111111001110101100110010010001" "00111111001111010110110101110000" "00111111010000000000011001011100" "00111111010000101001011011101011" "00111111010001010001111010111000" "00111111010001111001110101011111" "00111111010010100001001001111100" "00111111010011000111110110101101" "00111111010011101101111010010010" "00111111010100010011010011001101" "00111111010100111000000000000000" "00111111010101011011111111010001" "00111111010101111111001111100101" "00111111010110100001101111100101" "00111111010111000011011101111100" "00111111010111100100011001010101" "00111111011000000100100000011110" "00111111011000100011110010001001" "00111111011001000010001101000110" "00111111011001011111110000001010" "00111111011001111100011010001100" "00111111011010011000001010000101" "00111111011010110010111110101111" "00111111011011001100110111001000" "00111111011011100101110010010000" "00111111011011111101101111001000" "00111111011100010100101100110101" "00111111011100101010101010011110" "00111111011100111111100111001100" "00111111011101010011100010001011" "00111111011101100110011010101010" "00111111011101111000001111111001" "00111111011110001001000001001101" "00111111011110011000101101111011" "00111111011110100111010101011101" "00111111011110110100110111001110" "00111111011111000001010010101101" "00111111011111001100100111011010" "00111111011111010110110100111010" "00111111011111011111111010110011" "00111111011111100111111000101110" "00111111011111101110101110011000" "00111111011111110100011011100000" "00111111011111111000111111110111" "00111111011111111100011011010010" "00111111011111111110101101101001" "00111111011111111111110110110110" "00111111011111111111110110110110" "00111111011111111110101101101001" "00111111011111111100011011010010" "00111111011111111000111111110111" "00111111011111110100011011100000" "00111111011111101110101110011000" "00111111011111100111111000101110" "00111111011111011111111010110011" "00111111011111010110110100111010" "00111111011111001100100111011010" "00111111011111000001010010101101" "00111111011110110100110111001110" "00111111011110100111010101011101" "00111111011110011000101101111011" "00111111011110001001000001001101" "00111111011101111000001111111001" "00111111011101100110011010101010" "00111111011101010011100010001011" "00111111011100111111100111001100" "00111111011100101010101010011110" "00111111011100010100101100110101" "00111111011011111101101111001000" "00111111011011100101110010010000" "00111111011011001100110111001000" "00111111011010110010111110101111" "00111111011010011000001010000101" "00111111011001111100011010001100" "00111111011001011111110000001010" "00111111011001000010001101000110" "00111111011000100011110010001001" "00111111011000000100100000011110" "00111111010111100100011001010101" "00111111010111000011011101111100" "00111111010110100001101111100101" "00111111010101111111001111100101" "00111111010101011011111111010001" "00111111010100111000000000000000" "00111111010100010011010011001101" "00111111010011101101111010010010" "00111111010011000111110110101101" "00111111010010100001001001111100" "00111111010001111001110101011111" "00111111010001010001111010111000" "00111111010000101001011011101011" "00111111010000000000011001011100" "00111111001111010110110101110000" "00111111001110101100110010010001" "00111111001110000010010000100101" "00111111001101010111010010010110" "00111111001100101011111001010001" "00111111001100000000000111000000" "00111111001011010011111101010000" "00111111001010100111011101110000" "00111111001001111010101010001110" "00111111001001001101100100011000" "00111111001000100000001110000000" "00111111000111110010101000110110" "00111111000111000100110110101100" "00111111000110010110111001010011" "00111111000101101000110010011101" "00111111000100111010100011111110" "00111111000100001100001111101000" "00111111000011011101110111001110" "00111111000010101111011100100100" "00111111000010000001000001011101" "00111111000001010010100111101101" "00111111000000100100010001000111" "00111110111111101011111110111011" "00111110111110001111101001001010" "00111110111100110011100100011111" "00111110111011010111110100011111" "00111110111001111100011100101110" "00111110111000100001100000110000" "00111110110111000111000100000110" "00111110110101101101001010010011" "00111110110100010011110110110100" "00111110110010111011001101001000" "00111110110001100011010000101100" "00111110110000001100000100111011" "00111110101110110101101101001100" "00111110101101100000001100110111" "00111110101100001011100111010001" "00111110101010110111111111101101" "00111110101001100101011001011000" "00111110101000010011110111100010" "00111110100111000011011101010101" "00111110100101110100001101111001" "00111110100100100110001100010010" "00111110100011011001011011100100" "00111110100010001101111110101101" "00111110100001000011111000101000" "00111110011111110110011000011011" "00111110011101100111111000100101" "00111110011011011100010111010001" "00111110011001010011111001111001" "00111110010111001110100101110000" "00111110010101001100100000000011" "00111110010011001101101101110100" "00111110010001010010010011111111" "00111110001111011010010111010111" "00111110001101100101111100100101" "00111110001011110101001000001101" "00111110001010000111111110100101" "00111110001000011110100011111110" "00111110000110111000111100011100" "00111110000101010111001011111110" "00111110000011111001010110010111" "00111110000010011111011111010000" "00111110000001001001101010000111" "00111101111111101111110100100111" "00111101111101010100100101111111" "00111101111011000001101110011001" "00111101111000110111010011100001" "00111101110110110101011010110000" "00111101110100111100001001001011" "00111101110011001011100011011100" "00111101110001100011101101111101" "00111101110000000100101100110000" "00111101101110101110100011100000" "00111101101101100001010101100111" "00111101101100011101000110000000" "00111101101011100001110111011000" "00111101101010101111101100000010" "00111101101010000110100101111001" "00111101101001100110100110100100" "00111101101001001111101111010011" "00111101101001000010000000111111" "00111101101000111101011100001010" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 27
set hasByteEnable 0
set MemName mult_window_Hann256
set CoreName ap_simcore_mem
set PortList { 1 1 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "00000000000000000000000000000000" "00111001000111110010010110000111" "00111010000111110001111101011000" "00111010101100101111011110101011" "00111011000111110000011010011110" "00111011011110000101110101100000" "00111011101100101011100100011100" "00111011111100110001101000011011" "00111100000111101010001111010100" "00111100010010001001101100100000" "00111100011101110110110001101011" "00111100100101011000100000110110" "00111100101100011011111110010000" "00111100110100000101011111100001" "00111100111100010100110001100101" "00111101000010100100110000000000" "00111101000111010001101010011010" "00111101001100010000111100010100" "00111101010001100010011001010101" "00111101010111000101110100010101" "00111101011100111010111111100001" "00111101100001100000110110001100" "00111101100100101100110101111000" "00111101101000000001010110111000" "00111101101011011110010000111101" "00111101101111000011011011100000" "00111101110010110000101101101001" "00111101110110100101111110001001" "00111101111010100011000011011110" "00111101111110100111110011110011" "00111110000001011010000010100000" "00111110000011100011110110010100" "00111110000101110001010000000000" "00111110001000000010001010000011" "00111110001010010110011110110111" "00111110001100101110001000101000" "00111110001111001001000001100000" "00111110010001100111000011011100" "00111110010100001000001000010011" "00111110010110101100001001110110" "00111110011001010011000001101011" "00111110011011111100101001010101" "00111110011110101000111010001100" "00111110100000101011110110110011" "00111110100010000100011110011000" "00111110100011011110010000010111" "00111110100100111001001001010011" "00111110100110010101000101101001" "00111110100111110010000001110100" "00111110101001001111111010001101" "00111110101010101110101011001100" "00111110101100001110010001000011" "00111110101101101110101000000110" "00111110101111001111101100100101" "00111110110000110001011010101110" "00111110110010010011101110101110" "00111110110011110110100100110010" "00111110110101011001111001000011" "00111110110110111101100111101010" "00111110111000100001101100101111" "00111110111010000110000100011010" "00111110111011101010101010110000" "00111110111101001111011011111000" "00111110111110110100010011110111" "00111111000000001100100111011001" "00111111000000111111000100011000" "00111111000001110001011110111001" "00111111000010100011110101000000" "00111111000011010110000100110000" "00111111000100001000001100001100" "00111111000100111010001001010110" "00111111000101101011111010010100" "00111111000110011101011101001000" "00111111000111001110101111111001" "00111111000111111111110000101010" "00111111001000110000011101100100" "00111111001001100000110100101011" "00111111001010010000110100001000" "00111111001011000000011010000101" "00111111001011101111100100101001" "00111111001100011110010010000001" "00111111001101001100100000011000" "00111111001101111010001101111010" "00111111001110100111011000110111" "00111111001111010011111111011110" "00111111010000000000000000000000" "00111111010000101011011000110000" "00111111010001010110001000000001" "00111111010010000000001100001010" "00111111010010101001100011100010" "00111111010011010010001100100010" "00111111010011111010000101100101" "00111111010100100001001101000111" "00111111010101000111100001101000" "00111111010101101101000001101001" "00111111010110010001101011101011" "00111111010110110101011110010100" "00111111010111011000011000001011" "00111111010111111010010111111001" "00111111011000011011011100001001" "00111111011000111011100011101010" "00111111011001011010101101001011" "00111111011001111000110111011110" "00111111011010010110000001011010" "00111111011010110010001001110110" "00111111011011001101001111101010" "00111111011011100111010001110101" "00111111011100000000001111010101" "00111111011100011000000111001101" "00111111011100101110111000100000" "00111111011101000100100010010111" "00111111011101011001000011111011" "00111111011101101100011100011010" "00111111011101111110101011000011" "00111111011110001111101111001001" "00111111011110011111101000000001" "00111111011110101110010101000100" "00111111011110111011110101101110" "00111111011111001000001001011100" "00111111011111010011001111110001" "00111111011111011101001000010000" "00111111011111100101110010100001" "00111111011111101101001110001111" "00111111011111110011011011000111" "00111111011111111000011000111001" "00111111011111111100000111011010" "00111111011111111110100110011111" "00111111011111111111110110000011" "00111111011111111111110110000011" "00111111011111111110100110011111" "00111111011111111100000111011010" "00111111011111111000011000111001" "00111111011111110011011011000111" "00111111011111101101001110001111" "00111111011111100101110010100001" "00111111011111011101001000010000" "00111111011111010011001111110001" "00111111011111001000001001011100" "00111111011110111011110101101110" "00111111011110101110010101000100" "00111111011110011111101000000001" "00111111011110001111101111001001" "00111111011101111110101011000011" "00111111011101101100011100011010" "00111111011101011001000011111011" "00111111011101000100100010010111" "00111111011100101110111000100000" "00111111011100011000000111001101" "00111111011100000000001111010101" "00111111011011100111010001110101" "00111111011011001101001111101010" "00111111011010110010001001110110" "00111111011010010110000001011010" "00111111011001111000110111011110" "00111111011001011010101101001011" "00111111011000111011100011101010" "00111111011000011011011100001001" "00111111010111111010010111111001" "00111111010111011000011000001011" "00111111010110110101011110010100" "00111111010110010001101011101011" "00111111010101101101000001101001" "00111111010101000111100001101000" "00111111010100100001001101000111" "00111111010011111010000101100101" "00111111010011010010001100100010" "00111111010010101001100011100010" "00111111010010000000001100001010" "00111111010001010110001000000001" "00111111010000101011011000110000" "00111111010000000000000000000000" "00111111001111010011111111011110" "00111111001110100111011000110111" "00111111001101111010001101111010" "00111111001101001100100000011000" "00111111001100011110010010000001" "00111111001011101111100100101001" "00111111001011000000011010000101" "00111111001010010000110100001000" "00111111001001100000110100101011" "00111111001000110000011101100100" "00111111000111111111110000101010" "00111111000111001110101111111001" "00111111000110011101011101001000" "00111111000101101011111010010100" "00111111000100111010001001010110" "00111111000100001000001100001100" "00111111000011010110000100110000" "00111111000010100011110101000000" "00111111000001110001011110111001" "00111111000000111111000100011000" "00111111000000001100100111011001" "00111110111110110100010011110111" "00111110111101001111011011111000" "00111110111011101010101010110000" "00111110111010000110000100011010" "00111110111000100001101100101111" "00111110110110111101100111101010" "00111110110101011001111001000011" "00111110110011110110100100110010" "00111110110010010011101110101110" "00111110110000110001011010101110" "00111110101111001111101100100101" "00111110101101101110101000000110" "00111110101100001110010001000011" "00111110101010101110101011001100" "00111110101001001111111010001101" "00111110100111110010000001110100" "00111110100110010101000101101001" "00111110100100111001001001010011" "00111110100011011110010000010111" "00111110100010000100011110011000" "00111110100000101011110110110011" "00111110011110101000111010001100" "00111110011011111100101001010101" "00111110011001010011000001101011" "00111110010110101100001001110110" "00111110010100001000001000010011" "00111110010001100111000011011100" "00111110001111001001000001100000" "00111110001100101110001000101000" "00111110001010010110011110110111" "00111110001000000010001010000011" "00111110000101110001010000000000" "00111110000011100011110110010100" "00111110000001011010000010100000" "00111101111110100111110011110011" "00111101111010100011000011011110" "00111101110110100101111110001001" "00111101110010110000101101101001" "00111101101111000011011011100000" "00111101101011011110010000111101" "00111101101000000001010110111000" "00111101100100101100110101111000" "00111101100001100000110110001100" "00111101011100111010111111100001" "00111101010111000101110100010101" "00111101010001100010011001010101" "00111101001100010000111100010100" "00111101000111010001101010011010" "00111101000010100100110000000000" "00111100111100010100110001100101" "00111100110100000101011111100001" "00111100101100011011111110010000" "00111100100101011000100000110110" "00111100011101110110110001101011" "00111100010010001001101100100000" "00111100000111101010001111010100" "00111011111100110001101000011011" "00111011101100101011100100011100" "00111011011110000101110101100000" "00111011000111110000011010011110" "00111010101100101111011110101011" "00111010000111110001111101011000" "00111001000111110010010110000111" "00000000000000000000000000000000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 28
set hasByteEnable 0
set MemName mult_window_window
set CoreName ap_simcore_mem
set PortList { 2 2 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 30 \
    name xin_M_real \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename xin_M_real \
    op interface \
    ports { xin_M_real_address0 { O 8 vector } xin_M_real_ce0 { O 1 bit } xin_M_real_q0 { I 32 vector } xin_M_real_address1 { O 8 vector } xin_M_real_ce1 { O 1 bit } xin_M_real_q1 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'xin_M_real'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 31 \
    name xin_M_imag \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename xin_M_imag \
    op interface \
    ports { xin_M_imag_address0 { O 8 vector } xin_M_imag_ce0 { O 1 bit } xin_M_imag_q0 { I 32 vector } xin_M_imag_address1 { O 8 vector } xin_M_imag_ce1 { O 1 bit } xin_M_imag_q1 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'xin_M_imag'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 32 \
    name win_IN_M_real \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename win_IN_M_real \
    op interface \
    ports { win_IN_M_real_address0 { O 8 vector } win_IN_M_real_ce0 { O 1 bit } win_IN_M_real_we0 { O 1 bit } win_IN_M_real_d0 { O 32 vector } win_IN_M_real_address1 { O 8 vector } win_IN_M_real_ce1 { O 1 bit } win_IN_M_real_we1 { O 1 bit } win_IN_M_real_d1 { O 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'win_IN_M_real'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 33 \
    name win_IN_M_imag \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename win_IN_M_imag \
    op interface \
    ports { win_IN_M_imag_address0 { O 8 vector } win_IN_M_imag_ce0 { O 1 bit } win_IN_M_imag_we0 { O 1 bit } win_IN_M_imag_d0 { O 32 vector } win_IN_M_imag_address1 { O 8 vector } win_IN_M_imag_ce1 { O 1 bit } win_IN_M_imag_we1 { O 1 bit } win_IN_M_imag_d1 { O 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'win_IN_M_imag'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 29 \
    name win_mode \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_win_mode \
    op interface \
    ports { win_mode_dout { I 8 vector } win_mode_empty_n { I 1 bit } win_mode_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } ap_continue { I 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


