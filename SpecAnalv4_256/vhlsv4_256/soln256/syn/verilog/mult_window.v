// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mult_window (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        win_mode_dout,
        win_mode_empty_n,
        win_mode_read,
        xin_M_real_address0,
        xin_M_real_ce0,
        xin_M_real_q0,
        xin_M_real_address1,
        xin_M_real_ce1,
        xin_M_real_q1,
        xin_M_imag_address0,
        xin_M_imag_ce0,
        xin_M_imag_q0,
        xin_M_imag_address1,
        xin_M_imag_ce1,
        xin_M_imag_q1,
        win_IN_M_real_address0,
        win_IN_M_real_ce0,
        win_IN_M_real_we0,
        win_IN_M_real_d0,
        win_IN_M_real_address1,
        win_IN_M_real_ce1,
        win_IN_M_real_we1,
        win_IN_M_real_d1,
        win_IN_M_imag_address0,
        win_IN_M_imag_ce0,
        win_IN_M_imag_we0,
        win_IN_M_imag_d0,
        win_IN_M_imag_address1,
        win_IN_M_imag_ce1,
        win_IN_M_imag_we1,
        win_IN_M_imag_d1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_state4 = 8'd4;
parameter    ap_ST_fsm_pp1_stage0 = 8'd8;
parameter    ap_ST_fsm_pp2_stage0 = 8'd16;
parameter    ap_ST_fsm_state9 = 8'd32;
parameter    ap_ST_fsm_pp3_stage0 = 8'd64;
parameter    ap_ST_fsm_state22 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] win_mode_dout;
input   win_mode_empty_n;
output   win_mode_read;
output  [7:0] xin_M_real_address0;
output   xin_M_real_ce0;
input  [31:0] xin_M_real_q0;
output  [7:0] xin_M_real_address1;
output   xin_M_real_ce1;
input  [31:0] xin_M_real_q1;
output  [7:0] xin_M_imag_address0;
output   xin_M_imag_ce0;
input  [31:0] xin_M_imag_q0;
output  [7:0] xin_M_imag_address1;
output   xin_M_imag_ce1;
input  [31:0] xin_M_imag_q1;
output  [7:0] win_IN_M_real_address0;
output   win_IN_M_real_ce0;
output   win_IN_M_real_we0;
output  [31:0] win_IN_M_real_d0;
output  [7:0] win_IN_M_real_address1;
output   win_IN_M_real_ce1;
output   win_IN_M_real_we1;
output  [31:0] win_IN_M_real_d1;
output  [7:0] win_IN_M_imag_address0;
output   win_IN_M_imag_ce0;
output   win_IN_M_imag_we0;
output  [31:0] win_IN_M_imag_d0;
output  [7:0] win_IN_M_imag_address1;
output   win_IN_M_imag_ce1;
output   win_IN_M_imag_we1;
output  [31:0] win_IN_M_imag_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg win_mode_read;
reg xin_M_real_ce0;
reg xin_M_real_ce1;
reg xin_M_imag_ce0;
reg xin_M_imag_ce1;
reg win_IN_M_real_ce0;
reg win_IN_M_real_we0;
reg win_IN_M_real_ce1;
reg win_IN_M_real_we1;
reg win_IN_M_imag_ce0;
reg win_IN_M_imag_we0;
reg win_IN_M_imag_ce1;
reg win_IN_M_imag_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] Blackman256_address0;
reg    Blackman256_ce0;
wire   [31:0] Blackman256_q0;
wire   [7:0] Blackman256_address1;
reg    Blackman256_ce1;
wire   [31:0] Blackman256_q1;
wire   [7:0] Hamm256_address0;
reg    Hamm256_ce0;
wire   [31:0] Hamm256_q0;
wire   [7:0] Hamm256_address1;
reg    Hamm256_ce1;
wire   [31:0] Hamm256_q1;
wire   [7:0] Hann256_address0;
reg    Hann256_ce0;
wire   [31:0] Hann256_q0;
wire   [7:0] Hann256_address1;
reg    Hann256_ce1;
wire   [31:0] Hann256_q1;
reg    win_mode_blk_n;
reg   [8:0] i2_0_0_i_reg_356;
reg   [8:0] i1_0_0_i_reg_367;
reg   [8:0] i_0_0_i_reg_378;
reg   [8:0] i4_0_0_i_reg_400;
wire   [7:0] win_mode_read_read_fu_88_p2;
reg    ap_block_state1;
wire   [0:0] icmp_ln55_fu_463_p2;
reg   [0:0] icmp_ln55_reg_631;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln59_fu_473_p1;
reg   [63:0] zext_ln59_reg_635;
wire   [63:0] zext_ln59_1_fu_484_p1;
reg   [63:0] zext_ln59_1_reg_645;
wire   [8:0] add_ln55_fu_489_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln47_fu_495_p2;
reg   [0:0] icmp_ln47_reg_660;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [63:0] zext_ln51_fu_505_p1;
reg   [63:0] zext_ln51_reg_664;
wire   [63:0] zext_ln51_1_fu_516_p1;
reg   [63:0] zext_ln51_1_reg_674;
wire   [8:0] add_ln47_fu_521_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln39_fu_527_p2;
reg   [0:0] icmp_ln39_reg_689;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state7_pp2_stage0_iter0;
wire    ap_block_state8_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [63:0] zext_ln43_fu_537_p1;
reg   [63:0] zext_ln43_reg_693;
wire   [63:0] zext_ln43_1_fu_548_p1;
reg   [63:0] zext_ln43_1_reg_703;
wire   [8:0] add_ln39_fu_553_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [8:0] add_ln62_fu_585_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln62_fu_559_p2;
wire   [0:0] icmp_ln68_fu_591_p2;
reg   [0:0] icmp_ln68_reg_726;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state10_pp3_stage0_iter0;
wire    ap_block_state11_pp3_stage0_iter1;
wire    ap_block_state12_pp3_stage0_iter2;
wire    ap_block_state13_pp3_stage0_iter3;
wire    ap_block_state14_pp3_stage0_iter4;
wire    ap_block_state15_pp3_stage0_iter5;
wire    ap_block_state16_pp3_stage0_iter6;
wire    ap_block_state17_pp3_stage0_iter7;
wire    ap_block_state18_pp3_stage0_iter8;
wire    ap_block_state19_pp3_stage0_iter9;
wire    ap_block_state20_pp3_stage0_iter10;
wire    ap_block_state21_pp3_stage0_iter11;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln68_reg_726_pp3_iter1_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter2_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter3_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter4_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter5_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter6_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter7_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter8_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter9_reg;
reg   [0:0] icmp_ln68_reg_726_pp3_iter10_reg;
wire   [63:0] zext_ln71_fu_601_p1;
reg   [63:0] zext_ln71_reg_730;
reg   [63:0] zext_ln71_reg_730_pp3_iter1_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter2_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter3_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter4_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter5_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter6_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter7_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter8_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter9_reg;
reg   [63:0] zext_ln71_reg_730_pp3_iter10_reg;
wire   [63:0] zext_ln71_1_fu_614_p1;
reg   [63:0] zext_ln71_1_reg_751;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter1_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter2_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter3_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter4_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter5_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter6_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter7_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter8_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter9_reg;
reg   [63:0] zext_ln71_1_reg_751_pp3_iter10_reg;
wire   [8:0] add_ln68_fu_621_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [31:0] p_r_M_real_reg_777;
reg    ap_enable_reg_pp3_iter1;
reg   [31:0] p_r_M_imag_reg_783;
wire   [31:0] window_q0;
reg   [31:0] window_load_reg_789;
reg   [31:0] p_r_M_real_1_reg_795;
reg   [31:0] p_r_M_imag_1_reg_801;
wire   [31:0] window_q1;
reg   [31:0] window_load_1_reg_807;
wire   [31:0] grp_fu_427_p2;
reg   [31:0] tmp_i_i_i_reg_813;
wire   [31:0] grp_fu_431_p2;
reg   [31:0] tmp_8_i_i_i_reg_818;
wire   [31:0] grp_fu_436_p2;
reg   [31:0] tmp_i_i_i_16_reg_823;
wire   [31:0] grp_fu_440_p2;
reg   [31:0] tmp_1_i_i_i_reg_828;
wire   [31:0] grp_fu_445_p2;
reg   [31:0] tmp_i_i35_i_reg_833;
wire   [31:0] grp_fu_449_p2;
reg   [31:0] tmp_8_i_i36_i_reg_838;
wire   [31:0] grp_fu_454_p2;
reg   [31:0] tmp_i_i38_i_reg_843;
wire   [31:0] grp_fu_458_p2;
reg   [31:0] tmp_1_i_i39_i_reg_848;
wire   [31:0] grp_fu_411_p2;
reg   [31:0] complex_M_real_writ_reg_853;
wire   [31:0] grp_fu_415_p2;
reg   [31:0] complex_M_imag_writ_reg_858;
wire   [31:0] grp_fu_419_p2;
reg   [31:0] complex_M_real_writ_1_reg_863;
wire   [31:0] grp_fu_423_p2;
reg   [31:0] complex_M_imag_writ_1_reg_868;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state7;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state10;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg   [7:0] window_address0;
reg    window_ce0;
reg    window_we0;
reg   [31:0] window_d0;
reg   [7:0] window_address1;
reg    window_ce1;
reg    window_we1;
reg   [31:0] window_d1;
reg   [8:0] i3_0_0_i_reg_389;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln64_fu_565_p1;
wire   [63:0] zext_ln64_1_fu_580_p1;
wire    ap_block_pp3_stage0;
wire   [7:0] empty_6_fu_469_p1;
wire   [7:0] or_ln55_fu_478_p2;
wire   [7:0] empty_9_fu_501_p1;
wire   [7:0] or_ln47_fu_510_p2;
wire   [7:0] empty_12_fu_533_p1;
wire   [7:0] or_ln39_fu_542_p2;
wire   [7:0] empty_4_fu_570_p1;
wire   [7:0] or_ln62_fu_574_p2;
wire   [7:0] empty_15_fu_597_p1;
wire   [7:0] or_ln68_fu_608_p2;
wire    ap_CS_fsm_state22;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
end

mult_window_Blackbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Blackman256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Blackman256_address0),
    .ce0(Blackman256_ce0),
    .q0(Blackman256_q0),
    .address1(Blackman256_address1),
    .ce1(Blackman256_ce1),
    .q1(Blackman256_q1)
);

mult_window_Hamm256 #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Hamm256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hamm256_address0),
    .ce0(Hamm256_ce0),
    .q0(Hamm256_q0),
    .address1(Hamm256_address1),
    .ce1(Hamm256_ce1),
    .q1(Hamm256_q1)
);

mult_window_Hann256 #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Hann256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann256_address0),
    .ce0(Hann256_ce0),
    .q0(Hann256_q0),
    .address1(Hann256_address1),
    .ce1(Hann256_ce1),
    .q1(Hann256_q1)
);

mult_window_window #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
window_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(window_address0),
    .ce0(window_ce0),
    .we0(window_we0),
    .d0(window_d0),
    .q0(window_q0),
    .address1(window_address1),
    .ce1(window_ce1),
    .we1(window_we1),
    .d1(window_d1),
    .q1(window_q1)
);

FFT_fsub_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fsub_32ns_32ncud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_i_reg_813),
    .din1(tmp_8_i_i_i_reg_818),
    .ce(1'b1),
    .dout(grp_fu_411_p2)
);

FFT_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fadd_32ns_32ndEe_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_i_16_reg_823),
    .din1(tmp_1_i_i_i_reg_828),
    .ce(1'b1),
    .dout(grp_fu_415_p2)
);

FFT_fsub_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fsub_32ns_32ncud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i35_i_reg_833),
    .din1(tmp_8_i_i36_i_reg_838),
    .ce(1'b1),
    .dout(grp_fu_419_p2)
);

FFT_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fadd_32ns_32ndEe_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i38_i_reg_843),
    .din1(tmp_1_i_i39_i_reg_848),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_777),
    .din1(window_load_reg_789),
    .ce(1'b1),
    .dout(grp_fu_427_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_783),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_783),
    .din1(window_load_reg_789),
    .ce(1'b1),
    .dout(grp_fu_436_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_777),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_440_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_795),
    .din1(window_load_1_reg_807),
    .ce(1'b1),
    .dout(grp_fu_445_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_801),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_449_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_801),
    .din1(window_load_1_reg_807),
    .ce(1'b1),
    .dout(grp_fu_454_p2)
);

FFT_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FFT_fmul_32ns_32neOg_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_795),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_458_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state7))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd1))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state10)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp3_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd2))) begin
        i1_0_0_i_reg_367 <= 9'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln47_fu_495_p2 == 1'd0))) begin
        i1_0_0_i_reg_367 <= add_ln47_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd4))) begin
        i2_0_0_i_reg_356 <= 9'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_fu_463_p2 == 1'd0))) begin
        i2_0_0_i_reg_356 <= add_ln55_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(win_mode_read_read_fu_88_p2 == 8'd1) & ~(win_mode_read_read_fu_88_p2 == 8'd2) & ~(win_mode_read_read_fu_88_p2 == 8'd4) & ~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i3_0_0_i_reg_389 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln62_fu_559_p2 == 1'd0))) begin
        i3_0_0_i_reg_389 <= add_ln62_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln68_fu_591_p2 == 1'd0))) begin
        i4_0_0_i_reg_400 <= add_ln68_fu_621_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i4_0_0_i_reg_400 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd1))) begin
        i_0_0_i_reg_378 <= 9'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln39_fu_527_p2 == 1'd0))) begin
        i_0_0_i_reg_378 <= add_ln39_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln68_reg_726_pp3_iter9_reg == 1'd0))) begin
        complex_M_imag_writ_1_reg_868 <= grp_fu_423_p2;
        complex_M_imag_writ_reg_858 <= grp_fu_415_p2;
        complex_M_real_writ_1_reg_863 <= grp_fu_419_p2;
        complex_M_real_writ_reg_853 <= grp_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln39_reg_689 <= icmp_ln39_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln47_reg_660 <= icmp_ln47_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln55_reg_631 <= icmp_ln55_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln68_reg_726 <= icmp_ln68_fu_591_p2;
        icmp_ln68_reg_726_pp3_iter1_reg <= icmp_ln68_reg_726;
        zext_ln71_1_reg_751_pp3_iter1_reg[7 : 1] <= zext_ln71_1_reg_751[7 : 1];
        zext_ln71_reg_730_pp3_iter1_reg[8 : 0] <= zext_ln71_reg_730[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln68_reg_726_pp3_iter10_reg <= icmp_ln68_reg_726_pp3_iter9_reg;
        icmp_ln68_reg_726_pp3_iter2_reg <= icmp_ln68_reg_726_pp3_iter1_reg;
        icmp_ln68_reg_726_pp3_iter3_reg <= icmp_ln68_reg_726_pp3_iter2_reg;
        icmp_ln68_reg_726_pp3_iter4_reg <= icmp_ln68_reg_726_pp3_iter3_reg;
        icmp_ln68_reg_726_pp3_iter5_reg <= icmp_ln68_reg_726_pp3_iter4_reg;
        icmp_ln68_reg_726_pp3_iter6_reg <= icmp_ln68_reg_726_pp3_iter5_reg;
        icmp_ln68_reg_726_pp3_iter7_reg <= icmp_ln68_reg_726_pp3_iter6_reg;
        icmp_ln68_reg_726_pp3_iter8_reg <= icmp_ln68_reg_726_pp3_iter7_reg;
        icmp_ln68_reg_726_pp3_iter9_reg <= icmp_ln68_reg_726_pp3_iter8_reg;
        zext_ln71_1_reg_751_pp3_iter10_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter9_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter2_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter1_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter3_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter2_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter4_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter3_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter5_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter4_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter6_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter5_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter7_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter6_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter8_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter7_reg[7 : 1];
        zext_ln71_1_reg_751_pp3_iter9_reg[7 : 1] <= zext_ln71_1_reg_751_pp3_iter8_reg[7 : 1];
        zext_ln71_reg_730_pp3_iter10_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter9_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter2_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter1_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter3_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter2_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter4_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter3_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter5_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter4_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter6_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter5_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter7_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter6_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter8_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter7_reg[8 : 0];
        zext_ln71_reg_730_pp3_iter9_reg[8 : 0] <= zext_ln71_reg_730_pp3_iter8_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln68_reg_726 == 1'd0))) begin
        p_r_M_imag_1_reg_801 <= xin_M_imag_q1;
        p_r_M_imag_reg_783 <= xin_M_imag_q0;
        p_r_M_real_1_reg_795 <= xin_M_real_q1;
        p_r_M_real_reg_777 <= xin_M_real_q0;
        window_load_1_reg_807 <= window_q1;
        window_load_reg_789 <= window_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln68_reg_726_pp3_iter4_reg == 1'd0))) begin
        tmp_1_i_i39_i_reg_848 <= grp_fu_458_p2;
        tmp_1_i_i_i_reg_828 <= grp_fu_440_p2;
        tmp_8_i_i36_i_reg_838 <= grp_fu_449_p2;
        tmp_8_i_i_i_reg_818 <= grp_fu_431_p2;
        tmp_i_i35_i_reg_833 <= grp_fu_445_p2;
        tmp_i_i38_i_reg_843 <= grp_fu_454_p2;
        tmp_i_i_i_16_reg_823 <= grp_fu_436_p2;
        tmp_i_i_i_reg_813 <= grp_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln39_fu_527_p2 == 1'd0))) begin
        zext_ln43_1_reg_703[7 : 1] <= zext_ln43_1_fu_548_p1[7 : 1];
        zext_ln43_reg_693[8 : 0] <= zext_ln43_fu_537_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln47_fu_495_p2 == 1'd0))) begin
        zext_ln51_1_reg_674[7 : 1] <= zext_ln51_1_fu_516_p1[7 : 1];
        zext_ln51_reg_664[8 : 0] <= zext_ln51_fu_505_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_fu_463_p2 == 1'd0))) begin
        zext_ln59_1_reg_645[7 : 1] <= zext_ln59_1_fu_484_p1[7 : 1];
        zext_ln59_reg_635[8 : 0] <= zext_ln59_fu_473_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln68_fu_591_p2 == 1'd0))) begin
        zext_ln71_1_reg_751[7 : 1] <= zext_ln71_1_fu_614_p1[7 : 1];
        zext_ln71_reg_730[8 : 0] <= zext_ln71_fu_601_p1[8 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Blackman256_ce0 = 1'b1;
    end else begin
        Blackman256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Blackman256_ce1 = 1'b1;
    end else begin
        Blackman256_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        Hamm256_ce0 = 1'b1;
    end else begin
        Hamm256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        Hamm256_ce1 = 1'b1;
    end else begin
        Hamm256_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        Hann256_ce0 = 1'b1;
    end else begin
        Hann256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        Hann256_ce1 = 1'b1;
    end else begin
        Hann256_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_463_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln47_fu_495_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln39_fu_527_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_591_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1))) begin
        win_IN_M_imag_ce0 = 1'b1;
    end else begin
        win_IN_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1))) begin
        win_IN_M_imag_ce1 = 1'b1;
    end else begin
        win_IN_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1) & (icmp_ln68_reg_726_pp3_iter10_reg == 1'd0))) begin
        win_IN_M_imag_we0 = 1'b1;
    end else begin
        win_IN_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1) & (icmp_ln68_reg_726_pp3_iter10_reg == 1'd0))) begin
        win_IN_M_imag_we1 = 1'b1;
    end else begin
        win_IN_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1))) begin
        win_IN_M_real_ce0 = 1'b1;
    end else begin
        win_IN_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1))) begin
        win_IN_M_real_ce1 = 1'b1;
    end else begin
        win_IN_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1) & (icmp_ln68_reg_726_pp3_iter10_reg == 1'd0))) begin
        win_IN_M_real_we0 = 1'b1;
    end else begin
        win_IN_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter11 == 1'b1) & (icmp_ln68_reg_726_pp3_iter10_reg == 1'd0))) begin
        win_IN_M_real_we1 = 1'b1;
    end else begin
        win_IN_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        win_mode_blk_n = win_mode_empty_n;
    end else begin
        win_mode_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        win_mode_read = 1'b1;
    end else begin
        win_mode_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        window_address0 = zext_ln71_fu_601_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        window_address0 = zext_ln64_fu_565_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        window_address0 = zext_ln43_reg_693;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        window_address0 = zext_ln51_reg_664;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_address0 = zext_ln59_reg_635;
    end else begin
        window_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        window_address1 = zext_ln71_1_fu_614_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        window_address1 = zext_ln64_1_fu_580_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        window_address1 = zext_ln43_1_reg_703;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        window_address1 = zext_ln51_1_reg_674;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_address1 = zext_ln59_1_reg_645;
    end else begin
        window_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        window_ce0 = 1'b1;
    end else begin
        window_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        window_ce1 = 1'b1;
    end else begin
        window_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        window_d0 = 32'd1065353216;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        window_d0 = Hann256_q0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        window_d0 = Hamm256_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_d0 = Blackman256_q0;
    end else begin
        window_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        window_d1 = 32'd1065353216;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        window_d1 = Hann256_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        window_d1 = Hamm256_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_d1 = Blackman256_q1;
    end else begin
        window_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (icmp_ln62_fu_559_p2 == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln39_reg_689 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln47_reg_660 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_631 == 1'd0)))) begin
        window_we0 = 1'b1;
    end else begin
        window_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (icmp_ln62_fu_559_p2 == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln39_reg_689 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln47_reg_660 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_631 == 1'd0)))) begin
        window_we1 = 1'b1;
    end else begin
        window_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        xin_M_imag_ce0 = 1'b1;
    end else begin
        xin_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        xin_M_imag_ce1 = 1'b1;
    end else begin
        xin_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        xin_M_real_ce0 = 1'b1;
    end else begin
        xin_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        xin_M_real_ce1 = 1'b1;
    end else begin
        xin_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(win_mode_read_read_fu_88_p2 == 8'd1) & ~(win_mode_read_read_fu_88_p2 == 8'd2) & ~(win_mode_read_read_fu_88_p2 == 8'd4) & ~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (win_mode_read_read_fu_88_p2 == 8'd4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_463_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_463_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln47_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln47_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln39_fu_527_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln39_fu_527_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln62_fu_559_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln68_fu_591_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter10 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter10 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter11 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln68_fu_591_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Blackman256_address0 = zext_ln59_fu_473_p1;

assign Blackman256_address1 = zext_ln59_1_fu_484_p1;

assign Hamm256_address0 = zext_ln51_fu_505_p1;

assign Hamm256_address1 = zext_ln51_1_fu_516_p1;

assign Hann256_address0 = zext_ln43_fu_537_p1;

assign Hann256_address1 = zext_ln43_1_fu_548_p1;

assign add_ln39_fu_553_p2 = (9'd2 + i_0_0_i_reg_378);

assign add_ln47_fu_521_p2 = (9'd2 + i1_0_0_i_reg_367);

assign add_ln55_fu_489_p2 = (9'd2 + i2_0_0_i_reg_356);

assign add_ln62_fu_585_p2 = (9'd2 + i3_0_0_i_reg_389);

assign add_ln68_fu_621_p2 = (9'd2 + i4_0_0_i_reg_400);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((win_mode_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_12_fu_533_p1 = i_0_0_i_reg_378[7:0];

assign empty_15_fu_597_p1 = i4_0_0_i_reg_400[7:0];

assign empty_4_fu_570_p1 = i3_0_0_i_reg_389[7:0];

assign empty_6_fu_469_p1 = i2_0_0_i_reg_356[7:0];

assign empty_9_fu_501_p1 = i1_0_0_i_reg_367[7:0];

assign icmp_ln39_fu_527_p2 = ((i_0_0_i_reg_378 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_495_p2 = ((i1_0_0_i_reg_367 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_463_p2 = ((i2_0_0_i_reg_356 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_559_p2 = ((i3_0_0_i_reg_389 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_591_p2 = ((i4_0_0_i_reg_400 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln39_fu_542_p2 = (empty_12_fu_533_p1 | 8'd1);

assign or_ln47_fu_510_p2 = (empty_9_fu_501_p1 | 8'd1);

assign or_ln55_fu_478_p2 = (empty_6_fu_469_p1 | 8'd1);

assign or_ln62_fu_574_p2 = (empty_4_fu_570_p1 | 8'd1);

assign or_ln68_fu_608_p2 = (empty_15_fu_597_p1 | 8'd1);

assign win_IN_M_imag_address0 = zext_ln71_reg_730_pp3_iter10_reg;

assign win_IN_M_imag_address1 = zext_ln71_1_reg_751_pp3_iter10_reg;

assign win_IN_M_imag_d0 = complex_M_imag_writ_reg_858;

assign win_IN_M_imag_d1 = complex_M_imag_writ_1_reg_868;

assign win_IN_M_real_address0 = zext_ln71_reg_730_pp3_iter10_reg;

assign win_IN_M_real_address1 = zext_ln71_1_reg_751_pp3_iter10_reg;

assign win_IN_M_real_d0 = complex_M_real_writ_reg_853;

assign win_IN_M_real_d1 = complex_M_real_writ_1_reg_863;

assign win_mode_read_read_fu_88_p2 = win_mode_dout;

assign xin_M_imag_address0 = zext_ln71_fu_601_p1;

assign xin_M_imag_address1 = zext_ln71_1_fu_614_p1;

assign xin_M_real_address0 = zext_ln71_fu_601_p1;

assign xin_M_real_address1 = zext_ln71_1_fu_614_p1;

assign zext_ln43_1_fu_548_p1 = or_ln39_fu_542_p2;

assign zext_ln43_fu_537_p1 = i_0_0_i_reg_378;

assign zext_ln51_1_fu_516_p1 = or_ln47_fu_510_p2;

assign zext_ln51_fu_505_p1 = i1_0_0_i_reg_367;

assign zext_ln59_1_fu_484_p1 = or_ln55_fu_478_p2;

assign zext_ln59_fu_473_p1 = i2_0_0_i_reg_356;

assign zext_ln64_1_fu_580_p1 = or_ln62_fu_574_p2;

assign zext_ln64_fu_565_p1 = i3_0_0_i_reg_389;

assign zext_ln71_1_fu_614_p1 = or_ln68_fu_608_p2;

assign zext_ln71_fu_601_p1 = i4_0_0_i_reg_400;

always @ (posedge ap_clk) begin
    zext_ln59_reg_635[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln59_1_reg_645[0] <= 1'b1;
    zext_ln59_1_reg_645[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln51_reg_664[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln51_1_reg_674[0] <= 1'b1;
    zext_ln51_1_reg_674[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln43_reg_693[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln43_1_reg_703[0] <= 1'b1;
    zext_ln43_1_reg_703[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter8_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter9_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_reg_730_pp3_iter10_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751[0] <= 1'b1;
    zext_ln71_1_reg_751[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter1_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter2_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter3_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter4_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter5_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter6_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter7_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter8_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter9_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln71_1_reg_751_pp3_iter10_reg[0] <= 1'b1;
    zext_ln71_1_reg_751_pp3_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //mult_window
