// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __mult_window_Hann256_H__
#define __mult_window_Hann256_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct mult_window_Hann256_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 256;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in <sc_lv<AddressWidth> > address1;
sc_core::sc_in <sc_logic> ce1;
sc_core::sc_out <sc_lv<DataWidth> > q1;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(mult_window_Hann256_ram) {
        ram[0] = "0b00000000000000000000000000000000";
        ram[1] = "0b00111001000111110010010110000111";
        ram[2] = "0b00111010000111110001111101011000";
        ram[3] = "0b00111010101100101111011110101011";
        ram[4] = "0b00111011000111110000011010011110";
        ram[5] = "0b00111011011110000101110101100000";
        ram[6] = "0b00111011101100101011100100011100";
        ram[7] = "0b00111011111100110001101000011011";
        ram[8] = "0b00111100000111101010001111010100";
        ram[9] = "0b00111100010010001001101100100000";
        ram[10] = "0b00111100011101110110110001101011";
        ram[11] = "0b00111100100101011000100000110110";
        ram[12] = "0b00111100101100011011111110010000";
        ram[13] = "0b00111100110100000101011111100001";
        ram[14] = "0b00111100111100010100110001100101";
        ram[15] = "0b00111101000010100100110000000000";
        ram[16] = "0b00111101000111010001101010011010";
        ram[17] = "0b00111101001100010000111100010100";
        ram[18] = "0b00111101010001100010011001010101";
        ram[19] = "0b00111101010111000101110100010101";
        ram[20] = "0b00111101011100111010111111100001";
        ram[21] = "0b00111101100001100000110110001100";
        ram[22] = "0b00111101100100101100110101111000";
        ram[23] = "0b00111101101000000001010110111000";
        ram[24] = "0b00111101101011011110010000111101";
        ram[25] = "0b00111101101111000011011011100000";
        ram[26] = "0b00111101110010110000101101101001";
        ram[27] = "0b00111101110110100101111110001001";
        ram[28] = "0b00111101111010100011000011011110";
        ram[29] = "0b00111101111110100111110011110011";
        ram[30] = "0b00111110000001011010000010100000";
        ram[31] = "0b00111110000011100011110110010100";
        ram[32] = "0b00111110000101110001010000000000";
        ram[33] = "0b00111110001000000010001010000011";
        ram[34] = "0b00111110001010010110011110110111";
        ram[35] = "0b00111110001100101110001000101000";
        ram[36] = "0b00111110001111001001000001100000";
        ram[37] = "0b00111110010001100111000011011100";
        ram[38] = "0b00111110010100001000001000010011";
        ram[39] = "0b00111110010110101100001001110110";
        ram[40] = "0b00111110011001010011000001101011";
        ram[41] = "0b00111110011011111100101001010101";
        ram[42] = "0b00111110011110101000111010001100";
        ram[43] = "0b00111110100000101011110110110011";
        ram[44] = "0b00111110100010000100011110011000";
        ram[45] = "0b00111110100011011110010000010111";
        ram[46] = "0b00111110100100111001001001010011";
        ram[47] = "0b00111110100110010101000101101001";
        ram[48] = "0b00111110100111110010000001110100";
        ram[49] = "0b00111110101001001111111010001101";
        ram[50] = "0b00111110101010101110101011001100";
        ram[51] = "0b00111110101100001110010001000011";
        ram[52] = "0b00111110101101101110101000000110";
        ram[53] = "0b00111110101111001111101100100101";
        ram[54] = "0b00111110110000110001011010101110";
        ram[55] = "0b00111110110010010011101110101110";
        ram[56] = "0b00111110110011110110100100110010";
        ram[57] = "0b00111110110101011001111001000011";
        ram[58] = "0b00111110110110111101100111101010";
        ram[59] = "0b00111110111000100001101100101111";
        ram[60] = "0b00111110111010000110000100011010";
        ram[61] = "0b00111110111011101010101010110000";
        ram[62] = "0b00111110111101001111011011111000";
        ram[63] = "0b00111110111110110100010011110111";
        ram[64] = "0b00111111000000001100100111011001";
        ram[65] = "0b00111111000000111111000100011000";
        ram[66] = "0b00111111000001110001011110111001";
        ram[67] = "0b00111111000010100011110101000000";
        ram[68] = "0b00111111000011010110000100110000";
        ram[69] = "0b00111111000100001000001100001100";
        ram[70] = "0b00111111000100111010001001010110";
        ram[71] = "0b00111111000101101011111010010100";
        ram[72] = "0b00111111000110011101011101001000";
        ram[73] = "0b00111111000111001110101111111001";
        ram[74] = "0b00111111000111111111110000101010";
        ram[75] = "0b00111111001000110000011101100100";
        ram[76] = "0b00111111001001100000110100101011";
        ram[77] = "0b00111111001010010000110100001000";
        ram[78] = "0b00111111001011000000011010000101";
        ram[79] = "0b00111111001011101111100100101001";
        ram[80] = "0b00111111001100011110010010000001";
        ram[81] = "0b00111111001101001100100000011000";
        ram[82] = "0b00111111001101111010001101111010";
        ram[83] = "0b00111111001110100111011000110111";
        ram[84] = "0b00111111001111010011111111011110";
        ram[85] = "0b00111111010000000000000000000000";
        ram[86] = "0b00111111010000101011011000110000";
        ram[87] = "0b00111111010001010110001000000001";
        ram[88] = "0b00111111010010000000001100001010";
        ram[89] = "0b00111111010010101001100011100010";
        ram[90] = "0b00111111010011010010001100100010";
        ram[91] = "0b00111111010011111010000101100101";
        ram[92] = "0b00111111010100100001001101000111";
        ram[93] = "0b00111111010101000111100001101000";
        ram[94] = "0b00111111010101101101000001101001";
        ram[95] = "0b00111111010110010001101011101011";
        ram[96] = "0b00111111010110110101011110010100";
        ram[97] = "0b00111111010111011000011000001011";
        ram[98] = "0b00111111010111111010010111111001";
        ram[99] = "0b00111111011000011011011100001001";
        ram[100] = "0b00111111011000111011100011101010";
        ram[101] = "0b00111111011001011010101101001011";
        ram[102] = "0b00111111011001111000110111011110";
        ram[103] = "0b00111111011010010110000001011010";
        ram[104] = "0b00111111011010110010001001110110";
        ram[105] = "0b00111111011011001101001111101010";
        ram[106] = "0b00111111011011100111010001110101";
        ram[107] = "0b00111111011100000000001111010101";
        ram[108] = "0b00111111011100011000000111001101";
        ram[109] = "0b00111111011100101110111000100000";
        ram[110] = "0b00111111011101000100100010010111";
        ram[111] = "0b00111111011101011001000011111011";
        ram[112] = "0b00111111011101101100011100011010";
        ram[113] = "0b00111111011101111110101011000011";
        ram[114] = "0b00111111011110001111101111001001";
        ram[115] = "0b00111111011110011111101000000001";
        ram[116] = "0b00111111011110101110010101000100";
        ram[117] = "0b00111111011110111011110101101110";
        ram[118] = "0b00111111011111001000001001011100";
        ram[119] = "0b00111111011111010011001111110001";
        ram[120] = "0b00111111011111011101001000010000";
        ram[121] = "0b00111111011111100101110010100001";
        ram[122] = "0b00111111011111101101001110001111";
        ram[123] = "0b00111111011111110011011011000111";
        ram[124] = "0b00111111011111111000011000111001";
        ram[125] = "0b00111111011111111100000111011010";
        ram[126] = "0b00111111011111111110100110011111";
        ram[127] = "0b00111111011111111111110110000011";
        ram[128] = "0b00111111011111111111110110000011";
        ram[129] = "0b00111111011111111110100110011111";
        ram[130] = "0b00111111011111111100000111011010";
        ram[131] = "0b00111111011111111000011000111001";
        ram[132] = "0b00111111011111110011011011000111";
        ram[133] = "0b00111111011111101101001110001111";
        ram[134] = "0b00111111011111100101110010100001";
        ram[135] = "0b00111111011111011101001000010000";
        ram[136] = "0b00111111011111010011001111110001";
        ram[137] = "0b00111111011111001000001001011100";
        ram[138] = "0b00111111011110111011110101101110";
        ram[139] = "0b00111111011110101110010101000100";
        ram[140] = "0b00111111011110011111101000000001";
        ram[141] = "0b00111111011110001111101111001001";
        ram[142] = "0b00111111011101111110101011000011";
        ram[143] = "0b00111111011101101100011100011010";
        ram[144] = "0b00111111011101011001000011111011";
        ram[145] = "0b00111111011101000100100010010111";
        ram[146] = "0b00111111011100101110111000100000";
        ram[147] = "0b00111111011100011000000111001101";
        ram[148] = "0b00111111011100000000001111010101";
        ram[149] = "0b00111111011011100111010001110101";
        ram[150] = "0b00111111011011001101001111101010";
        ram[151] = "0b00111111011010110010001001110110";
        ram[152] = "0b00111111011010010110000001011010";
        ram[153] = "0b00111111011001111000110111011110";
        ram[154] = "0b00111111011001011010101101001011";
        ram[155] = "0b00111111011000111011100011101010";
        ram[156] = "0b00111111011000011011011100001001";
        ram[157] = "0b00111111010111111010010111111001";
        ram[158] = "0b00111111010111011000011000001011";
        ram[159] = "0b00111111010110110101011110010100";
        ram[160] = "0b00111111010110010001101011101011";
        ram[161] = "0b00111111010101101101000001101001";
        ram[162] = "0b00111111010101000111100001101000";
        ram[163] = "0b00111111010100100001001101000111";
        ram[164] = "0b00111111010011111010000101100101";
        ram[165] = "0b00111111010011010010001100100010";
        ram[166] = "0b00111111010010101001100011100010";
        ram[167] = "0b00111111010010000000001100001010";
        ram[168] = "0b00111111010001010110001000000001";
        ram[169] = "0b00111111010000101011011000110000";
        ram[170] = "0b00111111010000000000000000000000";
        ram[171] = "0b00111111001111010011111111011110";
        ram[172] = "0b00111111001110100111011000110111";
        ram[173] = "0b00111111001101111010001101111010";
        ram[174] = "0b00111111001101001100100000011000";
        ram[175] = "0b00111111001100011110010010000001";
        ram[176] = "0b00111111001011101111100100101001";
        ram[177] = "0b00111111001011000000011010000101";
        ram[178] = "0b00111111001010010000110100001000";
        ram[179] = "0b00111111001001100000110100101011";
        ram[180] = "0b00111111001000110000011101100100";
        ram[181] = "0b00111111000111111111110000101010";
        ram[182] = "0b00111111000111001110101111111001";
        ram[183] = "0b00111111000110011101011101001000";
        ram[184] = "0b00111111000101101011111010010100";
        ram[185] = "0b00111111000100111010001001010110";
        ram[186] = "0b00111111000100001000001100001100";
        ram[187] = "0b00111111000011010110000100110000";
        ram[188] = "0b00111111000010100011110101000000";
        ram[189] = "0b00111111000001110001011110111001";
        ram[190] = "0b00111111000000111111000100011000";
        ram[191] = "0b00111111000000001100100111011001";
        ram[192] = "0b00111110111110110100010011110111";
        ram[193] = "0b00111110111101001111011011111000";
        ram[194] = "0b00111110111011101010101010110000";
        ram[195] = "0b00111110111010000110000100011010";
        ram[196] = "0b00111110111000100001101100101111";
        ram[197] = "0b00111110110110111101100111101010";
        ram[198] = "0b00111110110101011001111001000011";
        ram[199] = "0b00111110110011110110100100110010";
        ram[200] = "0b00111110110010010011101110101110";
        ram[201] = "0b00111110110000110001011010101110";
        ram[202] = "0b00111110101111001111101100100101";
        ram[203] = "0b00111110101101101110101000000110";
        ram[204] = "0b00111110101100001110010001000011";
        ram[205] = "0b00111110101010101110101011001100";
        ram[206] = "0b00111110101001001111111010001101";
        ram[207] = "0b00111110100111110010000001110100";
        ram[208] = "0b00111110100110010101000101101001";
        ram[209] = "0b00111110100100111001001001010011";
        ram[210] = "0b00111110100011011110010000010111";
        ram[211] = "0b00111110100010000100011110011000";
        ram[212] = "0b00111110100000101011110110110011";
        ram[213] = "0b00111110011110101000111010001100";
        ram[214] = "0b00111110011011111100101001010101";
        ram[215] = "0b00111110011001010011000001101011";
        ram[216] = "0b00111110010110101100001001110110";
        ram[217] = "0b00111110010100001000001000010011";
        ram[218] = "0b00111110010001100111000011011100";
        ram[219] = "0b00111110001111001001000001100000";
        ram[220] = "0b00111110001100101110001000101000";
        ram[221] = "0b00111110001010010110011110110111";
        ram[222] = "0b00111110001000000010001010000011";
        ram[223] = "0b00111110000101110001010000000000";
        ram[224] = "0b00111110000011100011110110010100";
        ram[225] = "0b00111110000001011010000010100000";
        ram[226] = "0b00111101111110100111110011110011";
        ram[227] = "0b00111101111010100011000011011110";
        ram[228] = "0b00111101110110100101111110001001";
        ram[229] = "0b00111101110010110000101101101001";
        ram[230] = "0b00111101101111000011011011100000";
        ram[231] = "0b00111101101011011110010000111101";
        ram[232] = "0b00111101101000000001010110111000";
        ram[233] = "0b00111101100100101100110101111000";
        ram[234] = "0b00111101100001100000110110001100";
        ram[235] = "0b00111101011100111010111111100001";
        ram[236] = "0b00111101010111000101110100010101";
        ram[237] = "0b00111101010001100010011001010101";
        ram[238] = "0b00111101001100010000111100010100";
        ram[239] = "0b00111101000111010001101010011010";
        ram[240] = "0b00111101000010100100110000000000";
        ram[241] = "0b00111100111100010100110001100101";
        ram[242] = "0b00111100110100000101011111100001";
        ram[243] = "0b00111100101100011011111110010000";
        ram[244] = "0b00111100100101011000100000110110";
        ram[245] = "0b00111100011101110110110001101011";
        ram[246] = "0b00111100010010001001101100100000";
        ram[247] = "0b00111100000111101010001111010100";
        ram[248] = "0b00111011111100110001101000011011";
        ram[249] = "0b00111011101100101011100100011100";
        ram[250] = "0b00111011011110000101110101100000";
        ram[251] = "0b00111011000111110000011010011110";
        ram[252] = "0b00111010101100101111011110101011";
        ram[253] = "0b00111010000111110001111101011000";
        ram[254] = "0b00111001000111110010010110000111";
        ram[255] = "0b00000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();


SC_METHOD(prc_write_1);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


void prc_write_1()
{
    if (ce1.read() == sc_dt::Log_1) 
    {
            if(address1.read().is_01() && address1.read().to_uint()<AddressRange)
              q1 = ram[address1.read().to_uint()];
            else
              q1 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(mult_window_Hann256) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 256;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in <sc_lv<AddressWidth> > address1;
sc_core::sc_in<sc_logic> ce1;
sc_core::sc_out <sc_lv<DataWidth> > q1;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


mult_window_Hann256_ram* meminst;


SC_CTOR(mult_window_Hann256) {
meminst = new mult_window_Hann256_ram("mult_window_Hann256_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->address1(address1);
meminst->ce1(ce1);
meminst->q1(q1);

meminst->reset(reset);
meminst->clk(clk);
}
~mult_window_Hann256() {
    delete meminst;
}


};//endmodule
#endif
