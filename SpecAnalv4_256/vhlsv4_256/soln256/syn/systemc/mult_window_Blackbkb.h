// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __mult_window_Blackbkb_H__
#define __mult_window_Blackbkb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct mult_window_Blackbkb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 256;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in <sc_lv<AddressWidth> > address1;
sc_core::sc_in <sc_logic> ce1;
sc_core::sc_out <sc_lv<DataWidth> > q1;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(mult_window_Blackbkb_ram) {
        ram[0] = "0b10100011100000000000000000000000";
        ram[1] = "0b00111000011001010011101110100001";
        ram[2] = "0b00111001011001010110001000110001";
        ram[3] = "0b00111010000000010010101101011011";
        ram[4] = "0b00111010011001011111110000101110";
        ram[5] = "0b00111010101101000000011100000100";
        ram[6] = "0b00111011000000011110110110101001";
        ram[7] = "0b00111011001100010101011110001010";
        ram[8] = "0b00111011011010000101111110110011";
        ram[9] = "0b00111011100100111001010010001100";
        ram[10] = "0b00111011101101101110110101111000";
        ram[11] = "0b00111011110111100101000001001011";
        ram[12] = "0b00111100000001001110101001011000";
        ram[13] = "0b00111100000111001100101000011100";
        ram[14] = "0b00111100001101101101010100011111";
        ram[15] = "0b00111100010100110001100111101101";
        ram[16] = "0b00111100011100011010011111011001";
        ram[17] = "0b00111100100010010100011101111100";
        ram[18] = "0b00111100100110101111000000000110";
        ram[19] = "0b00111100101011011101011000111011";
        ram[20] = "0b00111100110000100000001100010000";
        ram[21] = "0b00111100110101110111111110111010";
        ram[22] = "0b00111100111011100101010110100011";
        ram[23] = "0b00111101000000110100011100101111";
        ram[24] = "0b00111101000100000001100111010001";
        ram[25] = "0b00111101000111011010011110011101";
        ram[26] = "0b00111101001010111111010110000011";
        ram[27] = "0b00111101001110110000100001110001";
        ram[28] = "0b00111101010010101110010101010011";
        ram[29] = "0b00111101010110111001000100001100";
        ram[30] = "0b00111101011011010001000001110010";
        ram[31] = "0b00111101011111110110100001000101";
        ram[32] = "0b00111101100010010100111010010111";
        ram[33] = "0b00111101100100110101100111011100";
        ram[34] = "0b00111101100111011101100000100101";
        ram[35] = "0b00111101101010001100101110010000";
        ram[36] = "0b00111101101101000011011000100110";
        ram[37] = "0b00111101110000000001100111010011";
        ram[38] = "0b00111101110011000111100001101011";
        ram[39] = "0b00111101110110010101001110011110";
        ram[40] = "0b00111101111001101010110011111110";
        ram[41] = "0b00111101111101001000010111111000";
        ram[42] = "0b00111110000000010110111111101010";
        ram[43] = "0b00111110000010001101110111010111";
        ram[44] = "0b00111110000100001000110100111101";
        ram[45] = "0b00111110000110000111111001111111";
        ram[46] = "0b00111110001000001011000111101001";
        ram[47] = "0b00111110001010010010011110101110";
        ram[48] = "0b00111110001100011101111111100110";
        ram[49] = "0b00111110001110101101101010010000";
        ram[50] = "0b00111110010001000001011110010001";
        ram[51] = "0b00111110010011011001011010110000";
        ram[52] = "0b00111110010101110101011110011000";
        ram[53] = "0b00111110011000010101100111010101";
        ram[54] = "0b00111110011010111001110011011001";
        ram[55] = "0b00111110011101100001111111110010";
        ram[56] = "0b00111110100000000111000100101010";
        ram[57] = "0b00111110100001011111000110001000";
        ram[58] = "0b00111110100010111001000010001100";
        ram[59] = "0b00111110100100010100110110100001";
        ram[60] = "0b00111110100101110010100000011111";
        ram[61] = "0b00111110100111010001111101001111";
        ram[62] = "0b00111110101000110011001001101011";
        ram[63] = "0b00111110101010010110000010011100";
        ram[64] = "0b00111110101011111010100011111001";
        ram[65] = "0b00111110101101100000101010001110";
        ram[66] = "0b00111110101111001000010001010001";
        ram[67] = "0b00111110110000110001010100101110";
        ram[68] = "0b00111110110010011011101111111111";
        ram[69] = "0b00111110110100000111011110001110";
        ram[70] = "0b00111110110101110100011010011000";
        ram[71] = "0b00111110110111100010011111001011";
        ram[72] = "0b00111110111001010001100111000110";
        ram[73] = "0b00111110111011000001101100011010";
        ram[74] = "0b00111110111100110010101001001110";
        ram[75] = "0b00111110111110100100010111011000";
        ram[76] = "0b00111111000000001011011000010010";
        ram[77] = "0b00111111000001000100110111001001";
        ram[78] = "0b00111111000001111110100100111100";
        ram[79] = "0b00111111000010111000011110001110";
        ram[80] = "0b00111111000011110010011111100000";
        ram[81] = "0b00111111000100101100100101001111";
        ram[82] = "0b00111111000101100110101011101111";
        ram[83] = "0b00111111000110100000101111010101";
        ram[84] = "0b00111111000111011010101100010001";
        ram[85] = "0b00111111001000010100011110101110";
        ram[86] = "0b00111111001001001110000010110110";
        ram[87] = "0b00111111001010000111010100110001";
        ram[88] = "0b00111111001011000000010000100010";
        ram[89] = "0b00111111001011111000110010001111";
        ram[90] = "0b00111111001100110000110101111000";
        ram[91] = "0b00111111001101101000010111100001";
        ram[92] = "0b00111111001110011111010011001001";
        ram[93] = "0b00111111001111010101100100110011";
        ram[94] = "0b00111111010000001011001000100001";
        ram[95] = "0b00111111010000111111111010010101";
        ram[96] = "0b00111111010001110011110110010101";
        ram[97] = "0b00111111010010100110111000100110";
        ram[98] = "0b00111111010011011000111101010001";
        ram[99] = "0b00111111010100001010000000100010";
        ram[100] = "0b00111111010100111001111110101000";
        ram[101] = "0b00111111010101101000110011110110";
        ram[102] = "0b00111111010110010110011100100001";
        ram[103] = "0b00111111010111000010110101000101";
        ram[104] = "0b00111111010111101101111010000010";
        ram[105] = "0b00111111011000010111100111111101";
        ram[106] = "0b00111111011000111111111011100010";
        ram[107] = "0b00111111011001100110110001100001";
        ram[108] = "0b00111111011010001100000110110100";
        ram[109] = "0b00111111011010101111111000010111";
        ram[110] = "0b00111111011011010010000011010011";
        ram[111] = "0b00111111011011110010100100110011";
        ram[112] = "0b00111111011100010001011010001111";
        ram[113] = "0b00111111011100101110100001000011";
        ram[114] = "0b00111111011101001001110110110111";
        ram[115] = "0b00111111011101100011011001011001";
        ram[116] = "0b00111111011101111011000110100010";
        ram[117] = "0b00111111011110010000111100010100";
        ram[118] = "0b00111111011110100100111000111011";
        ram[119] = "0b00111111011110110110111010101011";
        ram[120] = "0b00111111011111000111000000000110";
        ram[121] = "0b00111111011111010101000111110011";
        ram[122] = "0b00111111011111100001010000101000";
        ram[123] = "0b00111111011111101011011001100011";
        ram[124] = "0b00111111011111110011100001101110";
        ram[125] = "0b00111111011111111001101000011101";
        ram[126] = "0b00111111011111111101101101001110";
        ram[127] = "0b00111111011111111111101111101100";
        ram[128] = "0b00111111011111111111101111101100";
        ram[129] = "0b00111111011111111101101101001110";
        ram[130] = "0b00111111011111111001101000011101";
        ram[131] = "0b00111111011111110011100001101110";
        ram[132] = "0b00111111011111101011011001100011";
        ram[133] = "0b00111111011111100001010000101000";
        ram[134] = "0b00111111011111010101000111110011";
        ram[135] = "0b00111111011111000111000000000110";
        ram[136] = "0b00111111011110110110111010101011";
        ram[137] = "0b00111111011110100100111000111011";
        ram[138] = "0b00111111011110010000111100010100";
        ram[139] = "0b00111111011101111011000110100010";
        ram[140] = "0b00111111011101100011011001011001";
        ram[141] = "0b00111111011101001001110110110111";
        ram[142] = "0b00111111011100101110100001000011";
        ram[143] = "0b00111111011100010001011010001111";
        ram[144] = "0b00111111011011110010100100110011";
        ram[145] = "0b00111111011011010010000011010011";
        ram[146] = "0b00111111011010101111111000010111";
        ram[147] = "0b00111111011010001100000110110100";
        ram[148] = "0b00111111011001100110110001100001";
        ram[149] = "0b00111111011000111111111011100010";
        ram[150] = "0b00111111011000010111100111111101";
        ram[151] = "0b00111111010111101101111010000010";
        ram[152] = "0b00111111010111000010110101000101";
        ram[153] = "0b00111111010110010110011100100001";
        ram[154] = "0b00111111010101101000110011110110";
        ram[155] = "0b00111111010100111001111110101000";
        ram[156] = "0b00111111010100001010000000100010";
        ram[157] = "0b00111111010011011000111101010001";
        ram[158] = "0b00111111010010100110111000100110";
        ram[159] = "0b00111111010001110011110110010101";
        ram[160] = "0b00111111010000111111111010010101";
        ram[161] = "0b00111111010000001011001000100001";
        ram[162] = "0b00111111001111010101100100110011";
        ram[163] = "0b00111111001110011111010011001001";
        ram[164] = "0b00111111001101101000010111100001";
        ram[165] = "0b00111111001100110000110101111000";
        ram[166] = "0b00111111001011111000110010001111";
        ram[167] = "0b00111111001011000000010000100010";
        ram[168] = "0b00111111001010000111010100110001";
        ram[169] = "0b00111111001001001110000010110110";
        ram[170] = "0b00111111001000010100011110101110";
        ram[171] = "0b00111111000111011010101100010001";
        ram[172] = "0b00111111000110100000101111010101";
        ram[173] = "0b00111111000101100110101011101111";
        ram[174] = "0b00111111000100101100100101001111";
        ram[175] = "0b00111111000011110010011111100000";
        ram[176] = "0b00111111000010111000011110001110";
        ram[177] = "0b00111111000001111110100100111100";
        ram[178] = "0b00111111000001000100110111001001";
        ram[179] = "0b00111111000000001011011000010010";
        ram[180] = "0b00111110111110100100010111011000";
        ram[181] = "0b00111110111100110010101001001110";
        ram[182] = "0b00111110111011000001101100011010";
        ram[183] = "0b00111110111001010001100111000110";
        ram[184] = "0b00111110110111100010011111001011";
        ram[185] = "0b00111110110101110100011010011000";
        ram[186] = "0b00111110110100000111011110001110";
        ram[187] = "0b00111110110010011011101111111111";
        ram[188] = "0b00111110110000110001010100101110";
        ram[189] = "0b00111110101111001000010001010001";
        ram[190] = "0b00111110101101100000101010001110";
        ram[191] = "0b00111110101011111010100011111001";
        ram[192] = "0b00111110101010010110000010011100";
        ram[193] = "0b00111110101000110011001001101011";
        ram[194] = "0b00111110100111010001111101001111";
        ram[195] = "0b00111110100101110010100000011111";
        ram[196] = "0b00111110100100010100110110100001";
        ram[197] = "0b00111110100010111001000010001100";
        ram[198] = "0b00111110100001011111000110001000";
        ram[199] = "0b00111110100000000111000100101010";
        ram[200] = "0b00111110011101100001111111110010";
        ram[201] = "0b00111110011010111001110011011001";
        ram[202] = "0b00111110011000010101100111010101";
        ram[203] = "0b00111110010101110101011110011000";
        ram[204] = "0b00111110010011011001011010110000";
        ram[205] = "0b00111110010001000001011110010001";
        ram[206] = "0b00111110001110101101101010010000";
        ram[207] = "0b00111110001100011101111111100110";
        ram[208] = "0b00111110001010010010011110101110";
        ram[209] = "0b00111110001000001011000111101001";
        ram[210] = "0b00111110000110000111111001111111";
        ram[211] = "0b00111110000100001000110100111101";
        ram[212] = "0b00111110000010001101110111010111";
        ram[213] = "0b00111110000000010110111111101010";
        ram[214] = "0b00111101111101001000010111111000";
        ram[215] = "0b00111101111001101010110011111110";
        ram[216] = "0b00111101110110010101001110011110";
        ram[217] = "0b00111101110011000111100001101011";
        ram[218] = "0b00111101110000000001100111010011";
        ram[219] = "0b00111101101101000011011000100110";
        ram[220] = "0b00111101101010001100101110010000";
        ram[221] = "0b00111101100111011101100000100101";
        ram[222] = "0b00111101100100110101100111011100";
        ram[223] = "0b00111101100010010100111010010111";
        ram[224] = "0b00111101011111110110100001000101";
        ram[225] = "0b00111101011011010001000001110010";
        ram[226] = "0b00111101010110111001000100001100";
        ram[227] = "0b00111101010010101110010101010011";
        ram[228] = "0b00111101001110110000100001110001";
        ram[229] = "0b00111101001010111111010110000011";
        ram[230] = "0b00111101000111011010011110011101";
        ram[231] = "0b00111101000100000001100111010001";
        ram[232] = "0b00111101000000110100011100101111";
        ram[233] = "0b00111100111011100101010110100011";
        ram[234] = "0b00111100110101110111111110111010";
        ram[235] = "0b00111100110000100000001100010000";
        ram[236] = "0b00111100101011011101011000111011";
        ram[237] = "0b00111100100110101111000000000110";
        ram[238] = "0b00111100100010010100011101111100";
        ram[239] = "0b00111100011100011010011111011001";
        ram[240] = "0b00111100010100110001100111101101";
        ram[241] = "0b00111100001101101101010100011111";
        ram[242] = "0b00111100000111001100101000011100";
        ram[243] = "0b00111100000001001110101001011000";
        ram[244] = "0b00111011110111100101000001001011";
        ram[245] = "0b00111011101101101110110101111000";
        ram[246] = "0b00111011100100111001010010001100";
        ram[247] = "0b00111011011010000101111110110011";
        ram[248] = "0b00111011001100010101011110001010";
        ram[249] = "0b00111011000000011110110110101001";
        ram[250] = "0b00111010101101000000011100000100";
        ram[251] = "0b00111010011001011111110000101110";
        ram[252] = "0b00111010000000010010101101011011";
        ram[253] = "0b00111001011001010110001000110001";
        ram[254] = "0b00111000011001010011101110100001";
        ram[255] = "0b10100011100000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();


SC_METHOD(prc_write_1);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


void prc_write_1()
{
    if (ce1.read() == sc_dt::Log_1) 
    {
            if(address1.read().is_01() && address1.read().to_uint()<AddressRange)
              q1 = ram[address1.read().to_uint()];
            else
              q1 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(mult_window_Blackbkb) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 256;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in <sc_lv<AddressWidth> > address1;
sc_core::sc_in<sc_logic> ce1;
sc_core::sc_out <sc_lv<DataWidth> > q1;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


mult_window_Blackbkb_ram* meminst;


SC_CTOR(mult_window_Blackbkb) {
meminst = new mult_window_Blackbkb_ram("mult_window_Blackbkb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->address1(address1);
meminst->ce1(ce1);
meminst->q1(q1);

meminst->reset(reset);
meminst->clk(clk);
}
~mult_window_Blackbkb() {
    delete meminst;
}


};//endmodule
#endif
