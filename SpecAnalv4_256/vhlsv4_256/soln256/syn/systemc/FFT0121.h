// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _FFT0121_HH_
#define _FFT0121_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "FFT_fsub_32ns_32ncud.h"
#include "FFT_fadd_32ns_32ndEe.h"
#include "FFT_fmul_32ns_32neOg.h"
#include "FFT0121_W_M_real142.h"
#include "FFT0121_W_M_imag135.h"

namespace ap_rtl {

struct FFT0121 : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > data_IN_M_real_address0;
    sc_out< sc_logic > data_IN_M_real_ce0;
    sc_in< sc_lv<32> > data_IN_M_real_q0;
    sc_out< sc_lv<8> > data_IN_M_real_address1;
    sc_out< sc_logic > data_IN_M_real_ce1;
    sc_in< sc_lv<32> > data_IN_M_real_q1;
    sc_out< sc_lv<8> > data_IN_M_imag_address0;
    sc_out< sc_logic > data_IN_M_imag_ce0;
    sc_in< sc_lv<32> > data_IN_M_imag_q0;
    sc_out< sc_lv<8> > data_IN_M_imag_address1;
    sc_out< sc_logic > data_IN_M_imag_ce1;
    sc_in< sc_lv<32> > data_IN_M_imag_q1;
    sc_out< sc_lv<8> > data_OUT1_M_imag_address0;
    sc_out< sc_logic > data_OUT1_M_imag_ce0;
    sc_out< sc_logic > data_OUT1_M_imag_we0;
    sc_out< sc_lv<32> > data_OUT1_M_imag_d0;
    sc_out< sc_lv<8> > data_OUT1_M_imag_address1;
    sc_out< sc_logic > data_OUT1_M_imag_ce1;
    sc_out< sc_logic > data_OUT1_M_imag_we1;
    sc_out< sc_lv<32> > data_OUT1_M_imag_d1;
    sc_out< sc_lv<8> > data_OUT1_M_real_address0;
    sc_out< sc_logic > data_OUT1_M_real_ce0;
    sc_out< sc_logic > data_OUT1_M_real_we0;
    sc_out< sc_lv<32> > data_OUT1_M_real_d0;
    sc_out< sc_lv<8> > data_OUT1_M_real_address1;
    sc_out< sc_logic > data_OUT1_M_real_ce1;
    sc_out< sc_logic > data_OUT1_M_real_we1;
    sc_out< sc_lv<32> > data_OUT1_M_real_d1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    FFT0121(sc_module_name name);
    SC_HAS_PROCESS(FFT0121);

    ~FFT0121();

    sc_trace_file* mVcdFile;

    FFT0121_W_M_real142* W_M_real142_U;
    FFT0121_W_M_imag135* W_M_imag135_U;
    FFT_fsub_32ns_32ncud<1,5,32,32,32>* FFT_fsub_32ns_32ncud_U39;
    FFT_fadd_32ns_32ndEe<1,5,32,32,32>* FFT_fadd_32ns_32ndEe_U40;
    FFT_fsub_32ns_32ncud<1,5,32,32,32>* FFT_fsub_32ns_32ncud_U41;
    FFT_fsub_32ns_32ncud<1,5,32,32,32>* FFT_fsub_32ns_32ncud_U42;
    FFT_fadd_32ns_32ndEe<1,5,32,32,32>* FFT_fadd_32ns_32ndEe_U43;
    FFT_fadd_32ns_32ndEe<1,5,32,32,32>* FFT_fadd_32ns_32ndEe_U44;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U45;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U46;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U47;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U48;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > W_M_real142_address0;
    sc_signal< sc_logic > W_M_real142_ce0;
    sc_signal< sc_lv<32> > W_M_real142_q0;
    sc_signal< sc_lv<7> > W_M_imag135_address0;
    sc_signal< sc_logic > W_M_imag135_ce0;
    sc_signal< sc_lv<32> > W_M_imag135_q0;
    sc_signal< sc_lv<32> > butterfly_span_0_i_reg_176;
    sc_signal< sc_lv<32> > butterfly_pass_0_i_reg_187;
    sc_signal< sc_lv<8> > i_0_i_reg_198;
    sc_signal< sc_lv<1> > icmp_ln86_fu_249_p2;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln86_reg_352_pp0_iter15_reg;
    sc_signal< sc_lv<8> > i_fu_255_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > Ulimit_fu_273_p2;
    sc_signal< sc_lv<32> > Ulimit_reg_361;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter1_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter2_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter3_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter4_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter5_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter6_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter7_reg;
    sc_signal< sc_lv<32> > Ulimit_reg_361_pp0_iter8_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_fu_291_p1;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter1_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter2_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter3_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter4_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter5_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter6_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter7_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter8_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter9_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter10_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter11_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter12_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter13_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter14_reg;
    sc_signal< sc_lv<64> > sext_ln91_8_reg_376_pp0_iter15_reg;
    sc_signal< sc_lv<32> > select_ln94_fu_331_p3;
    sc_signal< sc_lv<32> > butterfly_pass_16_fu_339_p3;
    sc_signal< sc_lv<32> > p_r_M_real_reg_402;
    sc_signal< sc_lv<32> > p_r_M_imag_reg_408;
    sc_signal< sc_lv<32> > p_t_real_reg_414;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > p_t_imag_reg_420;
    sc_signal< sc_lv<32> > grp_fu_233_p2;
    sc_signal< sc_lv<32> > tmp_i_i_i_reg_426;
    sc_signal< sc_lv<32> > grp_fu_237_p2;
    sc_signal< sc_lv<32> > tmp_3_i_i_i_reg_431;
    sc_signal< sc_lv<32> > grp_fu_241_p2;
    sc_signal< sc_lv<32> > tmp_5_i_i_i_reg_436;
    sc_signal< sc_lv<32> > grp_fu_245_p2;
    sc_signal< sc_lv<32> > tmp_6_i_i_i_reg_441;
    sc_signal< sc_lv<64> > sext_ln92_fu_347_p1;
    sc_signal< sc_lv<64> > sext_ln92_reg_446;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter10_reg;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter11_reg;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter12_reg;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter13_reg;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter14_reg;
    sc_signal< sc_lv<64> > sext_ln92_reg_446_pp0_iter15_reg;
    sc_signal< sc_lv<32> > grp_fu_209_p2;
    sc_signal< sc_lv<32> > Product_M_real_reg_462;
    sc_signal< sc_lv<32> > grp_fu_213_p2;
    sc_signal< sc_lv<32> > Product_M_imag_reg_468;
    sc_signal< sc_lv<32> > p_r_M_real_9_reg_474;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<32> > p_r_M_imag_9_reg_480;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > complex_M_real_writ_reg_486;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > complex_M_imag_writ_reg_491;
    sc_signal< sc_lv<32> > grp_fu_225_p2;
    sc_signal< sc_lv<32> > complex_M_real_writ_9_reg_496;
    sc_signal< sc_lv<32> > grp_fu_229_p2;
    sc_signal< sc_lv<32> > complex_M_imag_writ_9_reg_501;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_lv<64> > sext_ln91_fu_285_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > shl_ln89_fu_267_p2;
    sc_signal< sc_lv<32> > index_fu_261_p2;
    sc_signal< sc_lv<32> > Llimit_fu_279_p2;
    sc_signal< sc_lv<1> > icmp_ln96_fu_311_p2;
    sc_signal< sc_lv<32> > butterfly_pass_fu_317_p2;
    sc_signal< sc_lv<1> > tmp_fu_297_p3;
    sc_signal< sc_lv<32> > butterfly_span_fu_305_p2;
    sc_signal< sc_lv<32> > butterfly_pass_15_fu_323_p3;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Llimit_fu_279_p2();
    void thread_Ulimit_fu_273_p2();
    void thread_W_M_imag135_address0();
    void thread_W_M_imag135_ce0();
    void thread_W_M_real142_address0();
    void thread_W_M_real142_ce0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state19();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_butterfly_pass_15_fu_323_p3();
    void thread_butterfly_pass_16_fu_339_p3();
    void thread_butterfly_pass_fu_317_p2();
    void thread_butterfly_span_fu_305_p2();
    void thread_data_IN_M_imag_address0();
    void thread_data_IN_M_imag_address1();
    void thread_data_IN_M_imag_ce0();
    void thread_data_IN_M_imag_ce1();
    void thread_data_IN_M_real_address0();
    void thread_data_IN_M_real_address1();
    void thread_data_IN_M_real_ce0();
    void thread_data_IN_M_real_ce1();
    void thread_data_OUT1_M_imag_address0();
    void thread_data_OUT1_M_imag_address1();
    void thread_data_OUT1_M_imag_ce0();
    void thread_data_OUT1_M_imag_ce1();
    void thread_data_OUT1_M_imag_d0();
    void thread_data_OUT1_M_imag_d1();
    void thread_data_OUT1_M_imag_we0();
    void thread_data_OUT1_M_imag_we1();
    void thread_data_OUT1_M_real_address0();
    void thread_data_OUT1_M_real_address1();
    void thread_data_OUT1_M_real_ce0();
    void thread_data_OUT1_M_real_ce1();
    void thread_data_OUT1_M_real_d0();
    void thread_data_OUT1_M_real_d1();
    void thread_data_OUT1_M_real_we0();
    void thread_data_OUT1_M_real_we1();
    void thread_i_fu_255_p2();
    void thread_icmp_ln86_fu_249_p2();
    void thread_icmp_ln96_fu_311_p2();
    void thread_index_fu_261_p2();
    void thread_select_ln94_fu_331_p3();
    void thread_sext_ln91_8_fu_291_p1();
    void thread_sext_ln91_fu_285_p1();
    void thread_sext_ln92_fu_347_p1();
    void thread_shl_ln89_fu_267_p2();
    void thread_tmp_fu_297_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
