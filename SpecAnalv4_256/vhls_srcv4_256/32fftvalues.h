#ifndef __32FFTVALUES_H__
#define __32FFTVALUES_H__
#define FFT_LENGTH 256


/*const int rev_32[]={

0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23,15,31,

};*/

const int rev_256[]={

0, 128, 64, 192, 32, 160, 96, 224, 16, 144, 80, 208, 48, 176, 112, 240, 8, 136, 72, 200, 40, 168, 104, 232, 24, 152, 
88, 216, 56, 184, 120, 248, 4, 132, 68, 196, 36, 164, 100, 228, 20, 148, 84, 212, 52, 180, 116, 244, 12, 140, 76, 204, 
44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82, 210, 50, 178, 114, 
242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 
150, 86, 214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 
193, 33, 161, 97, 225, 17, 145, 81, 209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 
185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85, 213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 
237, 29, 157, 93, 221, 61, 189, 125, 253, 3, 131, 67, 195, 35, 163, 99, 227, 19, 147, 83, 211, 51, 179, 115, 243, 11, 
139, 75, 203, 43, 171, 107, 235, 27, 155, 91, 219, 59, 187, 123, 251, 7, 135, 71, 199, 39, 167, 103, 231, 23, 151, 87, 
215, 55, 183, 119, 247, 15, 143, 79, 207, 47, 175, 111, 239, 31, 159, 95, 223, 63, 191, 127, 255,

};




const float scale = 1.0;

const data_comp W[FFT_LENGTH/2] = {

	data_comp(cos(2 * M_PI *0/ FFT_LENGTH) * scale,-sin(2 * M_PI *0/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *1/ FFT_LENGTH) * scale,-sin(2 * M_PI *1/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *2/ FFT_LENGTH) * scale,-sin(2 * M_PI *2/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *3/ FFT_LENGTH) * scale,-sin(2 * M_PI *3/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *4/ FFT_LENGTH) * scale,-sin(2 * M_PI *4/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *5/ FFT_LENGTH) * scale,-sin(2 * M_PI *5/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *6/ FFT_LENGTH) * scale,-sin(2 * M_PI *6/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *7/ FFT_LENGTH) * scale,-sin(2 * M_PI *7/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *8/ FFT_LENGTH) * scale,-sin(2 * M_PI *8/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *9/ FFT_LENGTH) * scale,-sin(2 * M_PI *9/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *10/ FFT_LENGTH) * scale,-sin(2 * M_PI *10/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *11/ FFT_LENGTH) * scale,-sin(2 * M_PI *11/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *12/ FFT_LENGTH) * scale,-sin(2 * M_PI *12/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *13/ FFT_LENGTH) * scale,-sin(2 * M_PI *13/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *14/ FFT_LENGTH) * scale,-sin(2 * M_PI *14/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *15/ FFT_LENGTH) * scale,-sin(2 * M_PI *15/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *16/ FFT_LENGTH) * scale,-sin(2 * M_PI *16/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *17/ FFT_LENGTH) * scale,-sin(2 * M_PI *17/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *18/ FFT_LENGTH) * scale,-sin(2 * M_PI *18/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *19/ FFT_LENGTH) * scale,-sin(2 * M_PI *19/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *20/ FFT_LENGTH) * scale,-sin(2 * M_PI *20/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *21/ FFT_LENGTH) * scale,-sin(2 * M_PI *21/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *22/ FFT_LENGTH) * scale,-sin(2 * M_PI *22/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *23/ FFT_LENGTH) * scale,-sin(2 * M_PI *23/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *24/ FFT_LENGTH) * scale,-sin(2 * M_PI *24/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *25/ FFT_LENGTH) * scale,-sin(2 * M_PI *25/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *26/ FFT_LENGTH) * scale,-sin(2 * M_PI *26/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *27/ FFT_LENGTH) * scale,-sin(2 * M_PI *27/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *28/ FFT_LENGTH) * scale,-sin(2 * M_PI *28/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *29/ FFT_LENGTH) * scale,-sin(2 * M_PI *29/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *30/ FFT_LENGTH) * scale,-sin(2 * M_PI *30/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *31/ FFT_LENGTH) * scale,-sin(2 * M_PI *31/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *32/ FFT_LENGTH) * scale,-sin(2 * M_PI *32/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *33/ FFT_LENGTH) * scale,-sin(2 * M_PI *33/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *34/ FFT_LENGTH) * scale,-sin(2 * M_PI *34/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *35/ FFT_LENGTH) * scale,-sin(2 * M_PI *35/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *36/ FFT_LENGTH) * scale,-sin(2 * M_PI *36/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *37/ FFT_LENGTH) * scale,-sin(2 * M_PI *37/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *38/ FFT_LENGTH) * scale,-sin(2 * M_PI *38/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *39/ FFT_LENGTH) * scale,-sin(2 * M_PI *39/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *40/ FFT_LENGTH) * scale,-sin(2 * M_PI *40/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *41/ FFT_LENGTH) * scale,-sin(2 * M_PI *41/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *42/ FFT_LENGTH) * scale,-sin(2 * M_PI *42/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *43/ FFT_LENGTH) * scale,-sin(2 * M_PI *43/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *44/ FFT_LENGTH) * scale,-sin(2 * M_PI *44/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *45/ FFT_LENGTH) * scale,-sin(2 * M_PI *45/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *46/ FFT_LENGTH) * scale,-sin(2 * M_PI *46/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *47/ FFT_LENGTH) * scale,-sin(2 * M_PI *47/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *48/ FFT_LENGTH) * scale,-sin(2 * M_PI *48/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *49/ FFT_LENGTH) * scale,-sin(2 * M_PI *49/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *50/ FFT_LENGTH) * scale,-sin(2 * M_PI *50/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *51/ FFT_LENGTH) * scale,-sin(2 * M_PI *51/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *52/ FFT_LENGTH) * scale,-sin(2 * M_PI *52/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *53/ FFT_LENGTH) * scale,-sin(2 * M_PI *53/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *54/ FFT_LENGTH) * scale,-sin(2 * M_PI *54/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *55/ FFT_LENGTH) * scale,-sin(2 * M_PI *55/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *56/ FFT_LENGTH) * scale,-sin(2 * M_PI *56/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *57/ FFT_LENGTH) * scale,-sin(2 * M_PI *57/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *58/ FFT_LENGTH) * scale,-sin(2 * M_PI *58/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *59/ FFT_LENGTH) * scale,-sin(2 * M_PI *59/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *60/ FFT_LENGTH) * scale,-sin(2 * M_PI *60/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *61/ FFT_LENGTH) * scale,-sin(2 * M_PI *61/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *62/ FFT_LENGTH) * scale,-sin(2 * M_PI *62/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *63/ FFT_LENGTH) * scale,-sin(2 * M_PI *63/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *64/ FFT_LENGTH) * scale,-sin(2 * M_PI *64/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *65/ FFT_LENGTH) * scale,-sin(2 * M_PI *65/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *66/ FFT_LENGTH) * scale,-sin(2 * M_PI *66/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *67/ FFT_LENGTH) * scale,-sin(2 * M_PI *67/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *68/ FFT_LENGTH) * scale,-sin(2 * M_PI *68/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *69/ FFT_LENGTH) * scale,-sin(2 * M_PI *69/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *70/ FFT_LENGTH) * scale,-sin(2 * M_PI *70/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *71/ FFT_LENGTH) * scale,-sin(2 * M_PI *71/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *72/ FFT_LENGTH) * scale,-sin(2 * M_PI *72/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *73/ FFT_LENGTH) * scale,-sin(2 * M_PI *73/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *74/ FFT_LENGTH) * scale,-sin(2 * M_PI *74/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *75/ FFT_LENGTH) * scale,-sin(2 * M_PI *75/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *76/ FFT_LENGTH) * scale,-sin(2 * M_PI *76/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *77/ FFT_LENGTH) * scale,-sin(2 * M_PI *77/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *78/ FFT_LENGTH) * scale,-sin(2 * M_PI *78/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *79/ FFT_LENGTH) * scale,-sin(2 * M_PI *79/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *80/ FFT_LENGTH) * scale,-sin(2 * M_PI *80/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *81/ FFT_LENGTH) * scale,-sin(2 * M_PI *81/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *82/ FFT_LENGTH) * scale,-sin(2 * M_PI *82/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *83/ FFT_LENGTH) * scale,-sin(2 * M_PI *83/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *84/ FFT_LENGTH) * scale,-sin(2 * M_PI *84/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *85/ FFT_LENGTH) * scale,-sin(2 * M_PI *85/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *86/ FFT_LENGTH) * scale,-sin(2 * M_PI *86/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *87/ FFT_LENGTH) * scale,-sin(2 * M_PI *87/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *88/ FFT_LENGTH) * scale,-sin(2 * M_PI *88/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *89/ FFT_LENGTH) * scale,-sin(2 * M_PI *89/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *90/ FFT_LENGTH) * scale,-sin(2 * M_PI *90/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *91/ FFT_LENGTH) * scale,-sin(2 * M_PI *91/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *92/ FFT_LENGTH) * scale,-sin(2 * M_PI *92/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *93/ FFT_LENGTH) * scale,-sin(2 * M_PI *93/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *94/ FFT_LENGTH) * scale,-sin(2 * M_PI *94/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *95/ FFT_LENGTH) * scale,-sin(2 * M_PI *95/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *96/ FFT_LENGTH) * scale,-sin(2 * M_PI *96/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *97/ FFT_LENGTH) * scale,-sin(2 * M_PI *97/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *98/ FFT_LENGTH) * scale,-sin(2 * M_PI *98/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *99/ FFT_LENGTH) * scale,-sin(2 * M_PI *99/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *100/ FFT_LENGTH) * scale,-sin(2 * M_PI *100/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *101/ FFT_LENGTH) * scale,-sin(2 * M_PI *101/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *102/ FFT_LENGTH) * scale,-sin(2 * M_PI *102/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *103/ FFT_LENGTH) * scale,-sin(2 * M_PI *103/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *104/ FFT_LENGTH) * scale,-sin(2 * M_PI *104/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *105/ FFT_LENGTH) * scale,-sin(2 * M_PI *105/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *106/ FFT_LENGTH) * scale,-sin(2 * M_PI *106/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *107/ FFT_LENGTH) * scale,-sin(2 * M_PI *107/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *108/ FFT_LENGTH) * scale,-sin(2 * M_PI *108/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *109/ FFT_LENGTH) * scale,-sin(2 * M_PI *109/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *110/ FFT_LENGTH) * scale,-sin(2 * M_PI *110/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *111/ FFT_LENGTH) * scale,-sin(2 * M_PI *111/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *112/ FFT_LENGTH) * scale,-sin(2 * M_PI *112/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *113/ FFT_LENGTH) * scale,-sin(2 * M_PI *113/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *114/ FFT_LENGTH) * scale,-sin(2 * M_PI *114/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *115/ FFT_LENGTH) * scale,-sin(2 * M_PI *115/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *116/ FFT_LENGTH) * scale,-sin(2 * M_PI *116/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *117/ FFT_LENGTH) * scale,-sin(2 * M_PI *117/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *118/ FFT_LENGTH) * scale,-sin(2 * M_PI *118/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *119/ FFT_LENGTH) * scale,-sin(2 * M_PI *119/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *120/ FFT_LENGTH) * scale,-sin(2 * M_PI *120/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *121/ FFT_LENGTH) * scale,-sin(2 * M_PI *121/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *122/ FFT_LENGTH) * scale,-sin(2 * M_PI *122/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *123/ FFT_LENGTH) * scale,-sin(2 * M_PI *123/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *124/ FFT_LENGTH) * scale,-sin(2 * M_PI *124/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *125/ FFT_LENGTH) * scale,-sin(2 * M_PI *125/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *126/ FFT_LENGTH) * scale,-sin(2 * M_PI *126/ FFT_LENGTH) * scale),
    data_comp(cos(2 * M_PI *127/ FFT_LENGTH) * scale,-sin(2 * M_PI *127/ FFT_LENGTH) * scale),

};

const float Hann256[FFT_LENGTH] = {
	    0.00000000e+00, 1.51774011e-04, 6.07003903e-04, 1.36541331e-03,
        2.42654180e-03, 3.78974516e-03, 5.45419581e-03, 7.41888327e-03,
        9.68261477e-03, 1.22440160e-02, 1.51015320e-02, 1.82534279e-02,
        2.16977902e-02, 2.54325280e-02, 2.94553737e-02, 3.37638853e-02,
        3.83554469e-02, 4.32272712e-02, 4.83764003e-02, 5.37997084e-02,
        5.94939029e-02, 6.54555268e-02, 7.16809611e-02, 7.81664261e-02,
        8.49079846e-02, 9.19015438e-02, 9.91428580e-02, 1.06627531e-01,
        1.14351019e-01, 1.22308633e-01, 1.30495541e-01, 1.38906775e-01,
        1.47537227e-01, 1.56381657e-01, 1.65434697e-01, 1.74690850e-01,
        1.84144497e-01, 1.93789898e-01, 2.03621199e-01, 2.13632430e-01,
        2.23817514e-01, 2.34170266e-01, 2.44684403e-01, 2.55353542e-01,
        2.66171204e-01, 2.77130822e-01, 2.88225744e-01, 2.99449233e-01,
        3.10794475e-01, 3.22254583e-01, 3.33822600e-01, 3.45491503e-01,
        3.57254207e-01, 3.69103571e-01, 3.81032402e-01, 3.93033458e-01,
        4.05099453e-01, 4.17223062e-01, 4.29396924e-01, 4.41613649e-01,
        4.53865820e-01, 4.66145999e-01, 4.78446731e-01, 4.90760548e-01,
        5.03079973e-01, 5.15397529e-01, 5.27705737e-01, 5.39997126e-01,
        5.52264232e-01, 5.64499608e-01, 5.76695827e-01, 5.88845485e-01,
        6.00941205e-01, 6.12975643e-01, 6.24941495e-01, 6.36831495e-01,
        6.48638425e-01, 6.60355118e-01, 6.71974459e-01, 6.83489396e-01,
        6.94892937e-01, 7.06178159e-01, 7.17338211e-01, 7.28366318e-01,
        7.39255785e-01, 7.50000000e-01, 7.60592441e-01, 7.71026678e-01,
        7.81296376e-01, 7.91395299e-01, 8.01317318e-01, 8.11056408e-01,
        8.20606657e-01, 8.29962267e-01, 8.39117559e-01, 8.48066973e-01,
        8.56805077e-01, 8.65326566e-01, 8.73626267e-01, 8.81699141e-01,
        8.89540287e-01, 8.97144945e-01, 9.04508497e-01, 9.11626474e-01,
        9.18494554e-01, 9.25108568e-01, 9.31464500e-01, 9.37558491e-01,
        9.43386843e-01, 9.48946016e-01, 9.54232636e-01, 9.59243493e-01,
        9.63975545e-01, 9.68425919e-01, 9.72591914e-01, 9.76471000e-01,
        9.80060823e-01, 9.83359202e-01, 9.86364136e-01, 9.89073800e-01,
        9.91486550e-01, 9.93600920e-01, 9.95415627e-01, 9.96929568e-01,
        9.98141826e-01, 9.99051664e-01, 9.99658530e-01, 9.99962055e-01,
        9.99962055e-01, 9.99658530e-01, 9.99051664e-01, 9.98141826e-01,
        9.96929568e-01, 9.95415627e-01, 9.93600920e-01, 9.91486550e-01,
        9.89073800e-01, 9.86364136e-01, 9.83359202e-01, 9.80060823e-01,
        9.76471000e-01, 9.72591914e-01, 9.68425919e-01, 9.63975545e-01,
        9.59243493e-01, 9.54232636e-01, 9.48946016e-01, 9.43386843e-01,
        9.37558491e-01, 9.31464500e-01, 9.25108568e-01, 9.18494554e-01,
        9.11626474e-01, 9.04508497e-01, 8.97144945e-01, 8.89540287e-01,
        8.81699141e-01, 8.73626267e-01, 8.65326566e-01, 8.56805077e-01,
        8.48066973e-01, 8.39117559e-01, 8.29962267e-01, 8.20606657e-01,
        8.11056408e-01, 8.01317318e-01, 7.91395299e-01, 7.81296376e-01,
        7.71026678e-01, 7.60592441e-01, 7.50000000e-01, 7.39255785e-01,
        7.28366318e-01, 7.17338211e-01, 7.06178159e-01, 6.94892937e-01,
        6.83489396e-01, 6.71974459e-01, 6.60355118e-01, 6.48638425e-01,
        6.36831495e-01, 6.24941495e-01, 6.12975643e-01, 6.00941205e-01,
        5.88845485e-01, 5.76695827e-01, 5.64499608e-01, 5.52264232e-01,
        5.39997126e-01, 5.27705737e-01, 5.15397529e-01, 5.03079973e-01,
        4.90760548e-01, 4.78446731e-01, 4.66145999e-01, 4.53865820e-01,
        4.41613649e-01, 4.29396924e-01, 4.17223062e-01, 4.05099453e-01,
        3.93033458e-01, 3.81032402e-01, 3.69103571e-01, 3.57254207e-01,
        3.45491503e-01, 3.33822600e-01, 3.22254583e-01, 3.10794475e-01,
        2.99449233e-01, 2.88225744e-01, 2.77130822e-01, 2.66171204e-01,
        2.55353542e-01, 2.44684403e-01, 2.34170266e-01, 2.23817514e-01,
        2.13632430e-01, 2.03621199e-01, 1.93789898e-01, 1.84144497e-01,
        1.74690850e-01, 1.65434697e-01, 1.56381657e-01, 1.47537227e-01,
        1.38906775e-01, 1.30495541e-01, 1.22308633e-01, 1.14351019e-01,
        1.06627531e-01, 9.91428580e-02, 9.19015438e-02, 8.49079846e-02,
        7.81664261e-02, 7.16809611e-02, 6.54555268e-02, 5.94939029e-02,
        5.37997084e-02, 4.83764003e-02, 4.32272712e-02, 3.83554469e-02,
        3.37638853e-02, 2.94553737e-02, 2.54325280e-02, 2.16977902e-02,
        1.82534279e-02, 1.51015320e-02, 1.22440160e-02, 9.68261477e-03,
        7.41888327e-03, 5.45419581e-03, 3.78974516e-03, 2.42654180e-03,
        1.36541331e-03, 6.07003903e-04, 1.51774011e-04, 0.00000000e+00
}; 

const float Hamm256[FFT_LENGTH] = {
		0.08      , 0.08013963, 0.08055844, 0.08125618, 0.08223242,
       0.08348657, 0.08501786, 0.08682537, 0.08890801, 0.09126449,
       0.09389341, 0.09679315, 0.09996197, 0.10339793, 0.10709894,
       0.11106277, 0.11528701, 0.11976909, 0.12450629, 0.12949573,
       0.13473439, 0.14021908, 0.14594648, 0.15191311, 0.15811535,
       0.16454942, 0.17121143, 0.17809733, 0.18520294, 0.19252394,
       0.2000559 , 0.20779423, 0.21573425, 0.22387112, 0.23219992,
       0.24071558, 0.24941294, 0.25828671, 0.2673315 , 0.27654184,
       0.28591211, 0.29543665, 0.30510965, 0.31492526, 0.32487751,
       0.33496036, 0.34516768, 0.35549329, 0.36593092, 0.37647422,
       0.38711679, 0.39785218, 0.40867387, 0.41957529, 0.43054981,
       0.44159078, 0.4526915 , 0.46384522, 0.47504517, 0.48628456,
       0.49755655, 0.50885432, 0.52017099, 0.5314997 , 0.54283358,
       0.55416573, 0.56548928, 0.57679736, 0.58808309, 0.59933964,
       0.61056016, 0.62173785, 0.63286591, 0.64393759, 0.65494618,
       0.66588498, 0.67674735, 0.68752671, 0.6982165 , 0.70881024,
       0.7193015 , 0.72968391, 0.73995115, 0.75009701, 0.76011532,
       0.77      , 0.77974505, 0.78934454, 0.79879267, 0.80808368,
       0.81721193, 0.8261719 , 0.83495812, 0.84356529, 0.85198815,
       0.86022162, 0.86826067, 0.87610044, 0.88373617, 0.89116321,
       0.89837706, 0.90537335, 0.91214782, 0.91869636, 0.92501499,
       0.93109988, 0.93694734, 0.94255381, 0.9479159 , 0.95303033,
       0.95789403, 0.96250401, 0.9668575 , 0.97095185, 0.97478456,
       0.97835332, 0.98165596, 0.98469047, 0.98745501, 0.9899479 ,
       0.99216763, 0.99411285, 0.99578238, 0.9971752 , 0.99829048,
       0.99912753, 0.99968585, 0.99996509, 0.99996509, 0.99968585,
       0.99912753, 0.99829048, 0.9971752 , 0.99578238, 0.99411285,
       0.99216763, 0.9899479 , 0.98745501, 0.98469047, 0.98165596,
       0.97835332, 0.97478456, 0.97095185, 0.9668575 , 0.96250401,
       0.95789403, 0.95303033, 0.9479159 , 0.94255381, 0.93694734,
       0.93109988, 0.92501499, 0.91869636, 0.91214782, 0.90537335,
       0.89837706, 0.89116321, 0.88373617, 0.87610044, 0.86826067,
       0.86022162, 0.85198815, 0.84356529, 0.83495812, 0.8261719 ,
       0.81721193, 0.80808368, 0.79879267, 0.78934454, 0.77974505,
       0.77      , 0.76011532, 0.75009701, 0.73995115, 0.72968391,
       0.7193015 , 0.70881024, 0.6982165 , 0.68752671, 0.67674735,
       0.66588498, 0.65494618, 0.64393759, 0.63286591, 0.62173785,
       0.61056016, 0.59933964, 0.58808309, 0.57679736, 0.56548928,
       0.55416573, 0.54283358, 0.5314997 , 0.52017099, 0.50885432,
       0.49755655, 0.48628456, 0.47504517, 0.46384522, 0.4526915 ,
       0.44159078, 0.43054981, 0.41957529, 0.40867387, 0.39785218,
       0.38711679, 0.37647422, 0.36593092, 0.35549329, 0.34516768,
       0.33496036, 0.32487751, 0.31492526, 0.30510965, 0.29543665,
       0.28591211, 0.27654184, 0.2673315 , 0.25828671, 0.24941294,
       0.24071558, 0.23219992, 0.22387112, 0.21573425, 0.20779423,
       0.2000559 , 0.19252394, 0.18520294, 0.17809733, 0.17121143,
       0.16454942, 0.15811535, 0.15191311, 0.14594648, 0.14021908,
       0.13473439, 0.12949573, 0.12450629, 0.11976909, 0.11528701,
       0.11106277, 0.10709894, 0.10339793, 0.09996197, 0.09679315,
       0.09389341, 0.09126449, 0.08890801, 0.08682537, 0.08501786,
       0.08348657, 0.08223242, 0.08125618, 0.08055844, 0.08013963,
       0.08      
};

const float Blackman256[FFT_LENGTH] = {
		-1.38777878e-17,  5.46533866e-05,  2.18757215e-04,  4.92741977e-04,
        8.77323434e-04,  1.37350005e-03,  1.98254937e-03,  2.70602347e-03,
        3.54574325e-03,  4.50379196e-03,  5.58250753e-03,  6.78447413e-03,
        8.11251272e-03,  9.56967070e-03,  1.11592107e-02,  1.28845987e-02,
        1.47494907e-02,  1.67577197e-02,  1.89132808e-02,  2.12203165e-02,
        2.36831007e-02,  2.63060223e-02,  2.90935685e-02,  3.20503071e-02,
        3.51808686e-02,  3.84899278e-02,  4.19821849e-02,  4.56623466e-02,
        4.95351063e-02,  5.36051248e-02,  5.78770101e-02,  6.23552979e-02,
        6.70444308e-02,  7.19487390e-02,  7.70724198e-02,  8.24195175e-02,
        8.79939041e-02,  9.37992593e-02,  9.98390510e-02,  1.06116516e-01,
        1.12634644e-01,  1.19396153e-01,  1.26403478e-01,  1.33658751e-01,
        1.41163783e-01,  1.48920051e-01,  1.56928678e-01,  1.65190423e-01,
        1.73705663e-01,  1.82474381e-01,  1.91496154e-01,  2.00770143e-01,
        2.10295078e-01,  2.20069251e-01,  2.30090508e-01,  2.40356237e-01,
        2.50863366e-01,  2.61608356e-01,  2.72587192e-01,  2.83795387e-01,
        2.95227972e-01,  3.06879499e-01,  3.18744039e-01,  3.30815183e-01,
        3.43086045e-01,  3.55549263e-01,  3.68197007e-01,  3.81020978e-01,
        3.94012424e-01,  4.07162136e-01,  4.20460467e-01,  4.33897338e-01,
        4.47462246e-01,  4.61144281e-01,  4.74932136e-01,  4.88814124e-01,
        5.02778189e-01,  5.16811927e-01,  5.30902597e-01,  5.45037145e-01,
        5.59202221e-01,  5.73384196e-01,  5.87569186e-01,  6.01743070e-01,
        6.15891516e-01,  6.30000000e-01,  6.44053831e-01,  6.58038173e-01,
        6.71938072e-01,  6.85738481e-01,  6.99424279e-01,  7.12980305e-01,
        7.26391380e-01,  7.39642330e-01,  7.52718019e-01,  7.65603368e-01,
        7.78283390e-01,  7.90743207e-01,  8.02968084e-01,  8.14943451e-01,
        8.26654934e-01,  8.38088373e-01,  8.49229857e-01,  8.60065741e-01,
        8.70582677e-01,  8.80767636e-01,  8.90607933e-01,  9.00091249e-01,
        9.09205654e-01,  9.17939632e-01,  9.26282100e-01,  9.34222428e-01,
        9.41750461e-01,  9.48856538e-01,  9.55531509e-01,  9.61766753e-01,
        9.67554195e-01,  9.72886318e-01,  9.77756183e-01,  9.82157437e-01,
        9.86084328e-01,  9.89531715e-01,  9.92495078e-01,  9.94970526e-01,
        9.96954805e-01,  9.98445305e-01,  9.99440064e-01,  9.99937771e-01,
        9.99937771e-01,  9.99440064e-01,  9.98445305e-01,  9.96954805e-01,
        9.94970526e-01,  9.92495078e-01,  9.89531715e-01,  9.86084328e-01,
        9.82157437e-01,  9.77756183e-01,  9.72886318e-01,  9.67554195e-01,
        9.61766753e-01,  9.55531509e-01,  9.48856538e-01,  9.41750461e-01,
        9.34222428e-01,  9.26282100e-01,  9.17939632e-01,  9.09205654e-01,
        9.00091249e-01,  8.90607933e-01,  8.80767636e-01,  8.70582677e-01,
        8.60065741e-01,  8.49229857e-01,  8.38088373e-01,  8.26654934e-01,
        8.14943451e-01,  8.02968084e-01,  7.90743207e-01,  7.78283390e-01,
        7.65603368e-01,  7.52718019e-01,  7.39642330e-01,  7.26391380e-01,
        7.12980305e-01,  6.99424279e-01,  6.85738481e-01,  6.71938072e-01,
        6.58038173e-01,  6.44053831e-01,  6.30000000e-01,  6.15891516e-01,
        6.01743070e-01,  5.87569186e-01,  5.73384196e-01,  5.59202221e-01,
        5.45037145e-01,  5.30902597e-01,  5.16811927e-01,  5.02778189e-01,
        4.88814124e-01,  4.74932136e-01,  4.61144281e-01,  4.47462246e-01,
        4.33897338e-01,  4.20460467e-01,  4.07162136e-01,  3.94012424e-01,
        3.81020978e-01,  3.68197007e-01,  3.55549263e-01,  3.43086045e-01,
        3.30815183e-01,  3.18744039e-01,  3.06879499e-01,  2.95227972e-01,
        2.83795387e-01,  2.72587192e-01,  2.61608356e-01,  2.50863366e-01,
        2.40356237e-01,  2.30090508e-01,  2.20069251e-01,  2.10295078e-01,
        2.00770143e-01,  1.91496154e-01,  1.82474381e-01,  1.73705663e-01,
        1.65190423e-01,  1.56928678e-01,  1.48920051e-01,  1.41163783e-01,
        1.33658751e-01,  1.26403478e-01,  1.19396153e-01,  1.12634644e-01,
        1.06116516e-01,  9.98390510e-02,  9.37992593e-02,  8.79939041e-02,
        8.24195175e-02,  7.70724198e-02,  7.19487390e-02,  6.70444308e-02,
        6.23552979e-02,  5.78770101e-02,  5.36051248e-02,  4.95351063e-02,
        4.56623466e-02,  4.19821849e-02,  3.84899278e-02,  3.51808686e-02,
        3.20503071e-02,  2.90935685e-02,  2.63060223e-02,  2.36831007e-02,
        2.12203165e-02,  1.89132808e-02,  1.67577197e-02,  1.47494907e-02,
        1.28845987e-02,  1.11592107e-02,  9.56967070e-03,  8.11251272e-03,
        6.78447413e-03,  5.58250753e-03,  4.50379196e-03,  3.54574325e-03,
        2.70602347e-03,  1.98254937e-03,  1.37350005e-03,  8.77323434e-04,
        4.92741977e-04,  2.18757215e-04,  5.46533866e-05, -1.38777878e-17
};
#endif



