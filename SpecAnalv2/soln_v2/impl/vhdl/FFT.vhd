-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 10;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC );
end;


architecture behav of FFT is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "FFT,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.358000,HLS_SYN_LAT=271,HLS_SYN_TPT=36,HLS_SYN_MEM=54,HLS_SYN_DSP=120,HLS_SYN_FF=14290,HLS_SYN_LUT=22618,HLS_VERSION=2020_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal data_IN_M_real_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_IN_M_imag_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_codeRepl113_pr_U0_ap_start : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_ap_done : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_ap_continue : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_ap_idle : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_ap_ready : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_data_IN_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl113_pr_U0_data_IN_M_real_ce0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_data_IN_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl113_pr_U0_data_IN_M_imag_ce0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl113_pr_U0_xin_M_imag_ce0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_imag_we0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_codeRepl113_pr_U0_xin_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl113_pr_U0_xin_M_real_ce0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_real_we0 : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_xin_M_real : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_xin_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_xin_M_real : STD_LOGIC;
    signal ap_channel_done_xin_M_imag : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_xin_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_xin_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_xin_M_imag : STD_LOGIC;
    signal bitreverse_U0_ap_start : STD_LOGIC;
    signal bitreverse_U0_ap_done : STD_LOGIC;
    signal bitreverse_U0_ap_continue : STD_LOGIC;
    signal bitreverse_U0_ap_idle : STD_LOGIC;
    signal bitreverse_U0_ap_ready : STD_LOGIC;
    signal bitreverse_U0_xin_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitreverse_U0_xin_M_real_ce0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitreverse_U0_data_OUT0_M_real_ce0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_real_we0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitreverse_U0_xin_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitreverse_U0_xin_M_imag_ce0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitreverse_U0_data_OUT0_M_imag_ce0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_imag_we0 : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_data_OUT0_M_imag : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT0_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT0_M_imag : STD_LOGIC;
    signal ap_channel_done_data_OUT0_M_real : STD_LOGIC;
    signal bitreverse_U0_data_OUT0_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT0_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT0_M_real : STD_LOGIC;
    signal FFT053_U0_ap_start : STD_LOGIC;
    signal FFT053_U0_ap_done : STD_LOGIC;
    signal FFT053_U0_ap_continue : STD_LOGIC;
    signal FFT053_U0_ap_idle : STD_LOGIC;
    signal FFT053_U0_ap_ready : STD_LOGIC;
    signal FFT053_U0_data_IN_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_IN_M_real_ce0 : STD_LOGIC;
    signal FFT053_U0_data_IN_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_IN_M_real_ce1 : STD_LOGIC;
    signal FFT053_U0_data_IN_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_IN_M_imag_ce0 : STD_LOGIC;
    signal FFT053_U0_data_IN_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_IN_M_imag_ce1 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_OUT1_M_imag_ce0 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_we0 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT053_U0_data_OUT1_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_OUT1_M_imag_ce1 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_we1 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT053_U0_data_OUT1_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_OUT1_M_real_ce0 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_real_we0 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT053_U0_data_OUT1_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT053_U0_data_OUT1_M_real_ce1 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_real_we1 : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_real_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_data_OUT1_M_real : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT1_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT1_M_real : STD_LOGIC;
    signal ap_channel_done_data_OUT1_M_imag : STD_LOGIC;
    signal FFT053_U0_data_OUT1_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT1_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT1_M_imag : STD_LOGIC;
    signal FFT054_U0_ap_start : STD_LOGIC;
    signal FFT054_U0_ap_done : STD_LOGIC;
    signal FFT054_U0_ap_continue : STD_LOGIC;
    signal FFT054_U0_ap_idle : STD_LOGIC;
    signal FFT054_U0_ap_ready : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT2_M_imag_ce0 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_we0 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT054_U0_data_OUT2_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT2_M_imag_ce1 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_we1 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT054_U0_data_OUT2_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT2_M_real_ce0 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_real_we0 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT054_U0_data_OUT2_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT2_M_real_ce1 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_real_we1 : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_real_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT054_U0_data_OUT1_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT1_M_real_ce0 : STD_LOGIC;
    signal FFT054_U0_data_OUT1_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT1_M_real_ce1 : STD_LOGIC;
    signal FFT054_U0_data_OUT1_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT1_M_imag_ce0 : STD_LOGIC;
    signal FFT054_U0_data_OUT1_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT054_U0_data_OUT1_M_imag_ce1 : STD_LOGIC;
    signal ap_channel_done_data_OUT2_M_real : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT2_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT2_M_real : STD_LOGIC;
    signal ap_channel_done_data_OUT2_M_imag : STD_LOGIC;
    signal FFT054_U0_data_OUT2_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT2_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT2_M_imag : STD_LOGIC;
    signal FFT055_U0_ap_start : STD_LOGIC;
    signal FFT055_U0_ap_done : STD_LOGIC;
    signal FFT055_U0_ap_continue : STD_LOGIC;
    signal FFT055_U0_ap_idle : STD_LOGIC;
    signal FFT055_U0_ap_ready : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT3_M_imag_ce0 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_we0 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT055_U0_data_OUT3_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT3_M_imag_ce1 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_we1 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT055_U0_data_OUT3_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT3_M_real_ce0 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_real_we0 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT055_U0_data_OUT3_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT3_M_real_ce1 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_real_we1 : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_real_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT055_U0_data_OUT2_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT2_M_real_ce0 : STD_LOGIC;
    signal FFT055_U0_data_OUT2_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT2_M_real_ce1 : STD_LOGIC;
    signal FFT055_U0_data_OUT2_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT2_M_imag_ce0 : STD_LOGIC;
    signal FFT055_U0_data_OUT2_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT055_U0_data_OUT2_M_imag_ce1 : STD_LOGIC;
    signal ap_channel_done_data_OUT3_M_real : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT3_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT3_M_real : STD_LOGIC;
    signal ap_channel_done_data_OUT3_M_imag : STD_LOGIC;
    signal FFT055_U0_data_OUT3_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT3_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT3_M_imag : STD_LOGIC;
    signal FFT056_U0_ap_start : STD_LOGIC;
    signal FFT056_U0_ap_done : STD_LOGIC;
    signal FFT056_U0_ap_continue : STD_LOGIC;
    signal FFT056_U0_ap_idle : STD_LOGIC;
    signal FFT056_U0_ap_ready : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT4_M_imag_ce0 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_we0 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT056_U0_data_OUT4_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT4_M_imag_ce1 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_we1 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT056_U0_data_OUT4_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT4_M_real_ce0 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_real_we0 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT056_U0_data_OUT4_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT4_M_real_ce1 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_real_we1 : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_real_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT056_U0_data_OUT3_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT3_M_real_ce0 : STD_LOGIC;
    signal FFT056_U0_data_OUT3_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT3_M_real_ce1 : STD_LOGIC;
    signal FFT056_U0_data_OUT3_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT3_M_imag_ce0 : STD_LOGIC;
    signal FFT056_U0_data_OUT3_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT056_U0_data_OUT3_M_imag_ce1 : STD_LOGIC;
    signal ap_channel_done_data_OUT4_M_real : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT4_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT4_M_real : STD_LOGIC;
    signal ap_channel_done_data_OUT4_M_imag : STD_LOGIC;
    signal FFT056_U0_data_OUT4_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_OUT4_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_OUT4_M_imag : STD_LOGIC;
    signal FFT057_U0_ap_start : STD_LOGIC;
    signal FFT057_U0_ap_done : STD_LOGIC;
    signal FFT057_U0_ap_continue : STD_LOGIC;
    signal FFT057_U0_ap_idle : STD_LOGIC;
    signal FFT057_U0_ap_ready : STD_LOGIC;
    signal FFT057_U0_data_OUT4_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_data_OUT4_M_real_ce0 : STD_LOGIC;
    signal FFT057_U0_data_OUT4_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_data_OUT4_M_real_ce1 : STD_LOGIC;
    signal FFT057_U0_data_OUT4_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_data_OUT4_M_imag_ce0 : STD_LOGIC;
    signal FFT057_U0_data_OUT4_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_data_OUT4_M_imag_ce1 : STD_LOGIC;
    signal FFT057_U0_xout_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_xout_M_real_ce0 : STD_LOGIC;
    signal FFT057_U0_xout_M_real_we0 : STD_LOGIC;
    signal FFT057_U0_xout_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT057_U0_xout_M_real_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_xout_M_real_ce1 : STD_LOGIC;
    signal FFT057_U0_xout_M_real_we1 : STD_LOGIC;
    signal FFT057_U0_xout_M_real_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT057_U0_xout_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_xout_M_imag_ce0 : STD_LOGIC;
    signal FFT057_U0_xout_M_imag_we0 : STD_LOGIC;
    signal FFT057_U0_xout_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal FFT057_U0_xout_M_imag_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FFT057_U0_xout_M_imag_ce1 : STD_LOGIC;
    signal FFT057_U0_xout_M_imag_we1 : STD_LOGIC;
    signal FFT057_U0_xout_M_imag_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_xout_M_imag : STD_LOGIC;
    signal FFT057_U0_xout_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_xout_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_xout_M_imag : STD_LOGIC;
    signal ap_channel_done_xout_M_real : STD_LOGIC;
    signal FFT057_U0_xout_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_xout_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_xout_M_real : STD_LOGIC;
    signal Block_codeRepl11320_U0_ap_start : STD_LOGIC;
    signal Block_codeRepl11320_U0_ap_done : STD_LOGIC;
    signal Block_codeRepl11320_U0_ap_continue : STD_LOGIC;
    signal Block_codeRepl11320_U0_ap_idle : STD_LOGIC;
    signal Block_codeRepl11320_U0_ap_ready : STD_LOGIC;
    signal Block_codeRepl11320_U0_data_OUT_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl11320_U0_data_OUT_M_real_ce0 : STD_LOGIC;
    signal Block_codeRepl11320_U0_data_OUT_M_real_we0 : STD_LOGIC;
    signal Block_codeRepl11320_U0_data_OUT_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_codeRepl11320_U0_data_OUT_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl11320_U0_data_OUT_M_imag_ce0 : STD_LOGIC;
    signal Block_codeRepl11320_U0_data_OUT_M_imag_we0 : STD_LOGIC;
    signal Block_codeRepl11320_U0_data_OUT_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_codeRepl11320_U0_xout_M_imag_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl11320_U0_xout_M_imag_ce0 : STD_LOGIC;
    signal Block_codeRepl11320_U0_xout_M_real_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_codeRepl11320_U0_xout_M_real_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal xin_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xin_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xin_M_imag_i_full_n : STD_LOGIC;
    signal xin_M_imag_t_empty_n : STD_LOGIC;
    signal xin_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xin_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xin_M_real_i_full_n : STD_LOGIC;
    signal xin_M_real_t_empty_n : STD_LOGIC;
    signal data_OUT0_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_real_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_real_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_real_i_full_n : STD_LOGIC;
    signal data_OUT0_M_real_t_empty_n : STD_LOGIC;
    signal data_OUT0_M_real_t_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_real_t_we1 : STD_LOGIC;
    signal data_OUT0_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_imag_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_imag_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_imag_i_full_n : STD_LOGIC;
    signal data_OUT0_M_imag_t_empty_n : STD_LOGIC;
    signal data_OUT0_M_imag_t_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT0_M_imag_t_we1 : STD_LOGIC;
    signal data_OUT1_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_imag_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_imag_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_imag_i_full_n : STD_LOGIC;
    signal data_OUT1_M_imag_t_empty_n : STD_LOGIC;
    signal data_OUT1_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_real_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_real_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT1_M_real_i_full_n : STD_LOGIC;
    signal data_OUT1_M_real_t_empty_n : STD_LOGIC;
    signal data_OUT2_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_imag_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_imag_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_imag_i_full_n : STD_LOGIC;
    signal data_OUT2_M_imag_t_empty_n : STD_LOGIC;
    signal data_OUT2_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_real_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_real_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT2_M_real_i_full_n : STD_LOGIC;
    signal data_OUT2_M_real_t_empty_n : STD_LOGIC;
    signal data_OUT3_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_imag_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_imag_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_imag_i_full_n : STD_LOGIC;
    signal data_OUT3_M_imag_t_empty_n : STD_LOGIC;
    signal data_OUT3_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_real_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_real_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT3_M_real_i_full_n : STD_LOGIC;
    signal data_OUT3_M_real_t_empty_n : STD_LOGIC;
    signal data_OUT4_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_imag_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_imag_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_imag_i_full_n : STD_LOGIC;
    signal data_OUT4_M_imag_t_empty_n : STD_LOGIC;
    signal data_OUT4_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_real_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_real_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT4_M_real_i_full_n : STD_LOGIC;
    signal data_OUT4_M_real_t_empty_n : STD_LOGIC;
    signal xout_M_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xout_M_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xout_M_real_i_full_n : STD_LOGIC;
    signal xout_M_real_t_empty_n : STD_LOGIC;
    signal xout_M_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xout_M_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xout_M_imag_i_full_n : STD_LOGIC;
    signal xout_M_imag_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_start_full_n : STD_LOGIC;
    signal Block_codeRepl113_pr_U0_start_write : STD_LOGIC;
    signal bitreverse_U0_start_full_n : STD_LOGIC;
    signal bitreverse_U0_start_write : STD_LOGIC;
    signal FFT053_U0_start_full_n : STD_LOGIC;
    signal FFT053_U0_start_write : STD_LOGIC;
    signal FFT054_U0_start_full_n : STD_LOGIC;
    signal FFT054_U0_start_write : STD_LOGIC;
    signal FFT055_U0_start_full_n : STD_LOGIC;
    signal FFT055_U0_start_write : STD_LOGIC;
    signal FFT056_U0_start_full_n : STD_LOGIC;
    signal FFT056_U0_start_write : STD_LOGIC;
    signal FFT057_U0_start_full_n : STD_LOGIC;
    signal FFT057_U0_start_write : STD_LOGIC;
    signal Block_codeRepl11320_U0_start_full_n : STD_LOGIC;
    signal Block_codeRepl11320_U0_start_write : STD_LOGIC;

    component Block_codeRepl113_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_IN_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_ce0 : OUT STD_LOGIC;
        data_IN_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_ce0 : OUT STD_LOGIC;
        data_IN_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        xin_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xin_M_imag_ce0 : OUT STD_LOGIC;
        xin_M_imag_we0 : OUT STD_LOGIC;
        xin_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xin_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xin_M_real_ce0 : OUT STD_LOGIC;
        xin_M_real_we0 : OUT STD_LOGIC;
        xin_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bitreverse IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xin_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xin_M_real_ce0 : OUT STD_LOGIC;
        xin_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT0_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT0_M_real_ce0 : OUT STD_LOGIC;
        data_OUT0_M_real_we0 : OUT STD_LOGIC;
        data_OUT0_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xin_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xin_M_imag_ce0 : OUT STD_LOGIC;
        xin_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT0_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT0_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT0_M_imag_we0 : OUT STD_LOGIC;
        data_OUT0_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT053 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_IN_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_ce0 : OUT STD_LOGIC;
        data_IN_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_IN_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_ce1 : OUT STD_LOGIC;
        data_IN_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_ce0 : OUT STD_LOGIC;
        data_IN_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_ce1 : OUT STD_LOGIC;
        data_IN_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT1_M_imag_we0 : OUT STD_LOGIC;
        data_OUT1_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT1_M_imag_we1 : OUT STD_LOGIC;
        data_OUT1_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_real_ce0 : OUT STD_LOGIC;
        data_OUT1_M_real_we0 : OUT STD_LOGIC;
        data_OUT1_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_real_ce1 : OUT STD_LOGIC;
        data_OUT1_M_real_we1 : OUT STD_LOGIC;
        data_OUT1_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT054 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_OUT2_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT2_M_imag_we0 : OUT STD_LOGIC;
        data_OUT2_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT2_M_imag_we1 : OUT STD_LOGIC;
        data_OUT2_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_real_ce0 : OUT STD_LOGIC;
        data_OUT2_M_real_we0 : OUT STD_LOGIC;
        data_OUT2_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_real_ce1 : OUT STD_LOGIC;
        data_OUT2_M_real_we1 : OUT STD_LOGIC;
        data_OUT2_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_real_ce0 : OUT STD_LOGIC;
        data_OUT1_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_real_ce1 : OUT STD_LOGIC;
        data_OUT1_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT1_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT1_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT1_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT1_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT055 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_OUT3_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT3_M_imag_we0 : OUT STD_LOGIC;
        data_OUT3_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT3_M_imag_we1 : OUT STD_LOGIC;
        data_OUT3_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_real_ce0 : OUT STD_LOGIC;
        data_OUT3_M_real_we0 : OUT STD_LOGIC;
        data_OUT3_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_real_ce1 : OUT STD_LOGIC;
        data_OUT3_M_real_we1 : OUT STD_LOGIC;
        data_OUT3_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_real_ce0 : OUT STD_LOGIC;
        data_OUT2_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_real_ce1 : OUT STD_LOGIC;
        data_OUT2_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT2_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT2_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT2_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT2_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT056 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_OUT4_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT4_M_imag_we0 : OUT STD_LOGIC;
        data_OUT4_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT4_M_imag_we1 : OUT STD_LOGIC;
        data_OUT4_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_real_ce0 : OUT STD_LOGIC;
        data_OUT4_M_real_we0 : OUT STD_LOGIC;
        data_OUT4_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_real_ce1 : OUT STD_LOGIC;
        data_OUT4_M_real_we1 : OUT STD_LOGIC;
        data_OUT4_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_real_ce0 : OUT STD_LOGIC;
        data_OUT3_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_real_ce1 : OUT STD_LOGIC;
        data_OUT3_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT3_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT3_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT3_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT3_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT057 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_OUT4_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_real_ce0 : OUT STD_LOGIC;
        data_OUT4_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_real_ce1 : OUT STD_LOGIC;
        data_OUT4_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT4_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT4_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT4_M_imag_ce1 : OUT STD_LOGIC;
        data_OUT4_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        xout_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_real_ce0 : OUT STD_LOGIC;
        xout_M_real_we0 : OUT STD_LOGIC;
        xout_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xout_M_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_real_ce1 : OUT STD_LOGIC;
        xout_M_real_we1 : OUT STD_LOGIC;
        xout_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xout_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_imag_ce0 : OUT STD_LOGIC;
        xout_M_imag_we0 : OUT STD_LOGIC;
        xout_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xout_M_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_imag_ce1 : OUT STD_LOGIC;
        xout_M_imag_we1 : OUT STD_LOGIC;
        xout_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_codeRepl11320_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_real_ce0 : OUT STD_LOGIC;
        data_OUT_M_real_we0 : OUT STD_LOGIC;
        data_OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_imag_ce0 : OUT STD_LOGIC;
        data_OUT_M_imag_we0 : OUT STD_LOGIC;
        data_OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xout_M_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_imag_ce0 : OUT STD_LOGIC;
        xout_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        xout_M_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        xout_M_real_ce0 : OUT STD_LOGIC;
        xout_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_xin_M_imag IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FFT_data_OUT0_M_reOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FFT_data_OUT1_M_ig8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FFT_xout_M_real IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FFT_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        data_IN_M_real_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_ce0 : IN STD_LOGIC;
        data_IN_M_real_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_IN_M_imag_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_ce0 : IN STD_LOGIC;
        data_IN_M_imag_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_OUT_M_real_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_real_ce0 : IN STD_LOGIC;
        data_OUT_M_real_we0 : IN STD_LOGIC;
        data_OUT_M_real_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_OUT_M_imag_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_imag_ce0 : IN STD_LOGIC;
        data_OUT_M_imag_we0 : IN STD_LOGIC;
        data_OUT_M_imag_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    FFT_AXILiteS_s_axi_U : component FFT_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        data_IN_M_real_address0 => Block_codeRepl113_pr_U0_data_IN_M_real_address0,
        data_IN_M_real_ce0 => Block_codeRepl113_pr_U0_data_IN_M_real_ce0,
        data_IN_M_real_q0 => data_IN_M_real_q0,
        data_IN_M_imag_address0 => Block_codeRepl113_pr_U0_data_IN_M_imag_address0,
        data_IN_M_imag_ce0 => Block_codeRepl113_pr_U0_data_IN_M_imag_ce0,
        data_IN_M_imag_q0 => data_IN_M_imag_q0,
        data_OUT_M_real_address0 => Block_codeRepl11320_U0_data_OUT_M_real_address0,
        data_OUT_M_real_ce0 => Block_codeRepl11320_U0_data_OUT_M_real_ce0,
        data_OUT_M_real_we0 => Block_codeRepl11320_U0_data_OUT_M_real_we0,
        data_OUT_M_real_d0 => Block_codeRepl11320_U0_data_OUT_M_real_d0,
        data_OUT_M_imag_address0 => Block_codeRepl11320_U0_data_OUT_M_imag_address0,
        data_OUT_M_imag_ce0 => Block_codeRepl11320_U0_data_OUT_M_imag_ce0,
        data_OUT_M_imag_we0 => Block_codeRepl11320_U0_data_OUT_M_imag_we0,
        data_OUT_M_imag_d0 => Block_codeRepl11320_U0_data_OUT_M_imag_d0);

    Block_codeRepl113_pr_U0 : component Block_codeRepl113_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_codeRepl113_pr_U0_ap_start,
        ap_done => Block_codeRepl113_pr_U0_ap_done,
        ap_continue => Block_codeRepl113_pr_U0_ap_continue,
        ap_idle => Block_codeRepl113_pr_U0_ap_idle,
        ap_ready => Block_codeRepl113_pr_U0_ap_ready,
        data_IN_M_real_address0 => Block_codeRepl113_pr_U0_data_IN_M_real_address0,
        data_IN_M_real_ce0 => Block_codeRepl113_pr_U0_data_IN_M_real_ce0,
        data_IN_M_real_q0 => data_IN_M_real_q0,
        data_IN_M_imag_address0 => Block_codeRepl113_pr_U0_data_IN_M_imag_address0,
        data_IN_M_imag_ce0 => Block_codeRepl113_pr_U0_data_IN_M_imag_ce0,
        data_IN_M_imag_q0 => data_IN_M_imag_q0,
        xin_M_imag_address0 => Block_codeRepl113_pr_U0_xin_M_imag_address0,
        xin_M_imag_ce0 => Block_codeRepl113_pr_U0_xin_M_imag_ce0,
        xin_M_imag_we0 => Block_codeRepl113_pr_U0_xin_M_imag_we0,
        xin_M_imag_d0 => Block_codeRepl113_pr_U0_xin_M_imag_d0,
        xin_M_real_address0 => Block_codeRepl113_pr_U0_xin_M_real_address0,
        xin_M_real_ce0 => Block_codeRepl113_pr_U0_xin_M_real_ce0,
        xin_M_real_we0 => Block_codeRepl113_pr_U0_xin_M_real_we0,
        xin_M_real_d0 => Block_codeRepl113_pr_U0_xin_M_real_d0);

    bitreverse_U0 : component bitreverse
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => bitreverse_U0_ap_start,
        ap_done => bitreverse_U0_ap_done,
        ap_continue => bitreverse_U0_ap_continue,
        ap_idle => bitreverse_U0_ap_idle,
        ap_ready => bitreverse_U0_ap_ready,
        xin_M_real_address0 => bitreverse_U0_xin_M_real_address0,
        xin_M_real_ce0 => bitreverse_U0_xin_M_real_ce0,
        xin_M_real_q0 => xin_M_real_t_q0,
        data_OUT0_M_real_address0 => bitreverse_U0_data_OUT0_M_real_address0,
        data_OUT0_M_real_ce0 => bitreverse_U0_data_OUT0_M_real_ce0,
        data_OUT0_M_real_we0 => bitreverse_U0_data_OUT0_M_real_we0,
        data_OUT0_M_real_d0 => bitreverse_U0_data_OUT0_M_real_d0,
        xin_M_imag_address0 => bitreverse_U0_xin_M_imag_address0,
        xin_M_imag_ce0 => bitreverse_U0_xin_M_imag_ce0,
        xin_M_imag_q0 => xin_M_imag_t_q0,
        data_OUT0_M_imag_address0 => bitreverse_U0_data_OUT0_M_imag_address0,
        data_OUT0_M_imag_ce0 => bitreverse_U0_data_OUT0_M_imag_ce0,
        data_OUT0_M_imag_we0 => bitreverse_U0_data_OUT0_M_imag_we0,
        data_OUT0_M_imag_d0 => bitreverse_U0_data_OUT0_M_imag_d0);

    FFT053_U0 : component FFT053
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FFT053_U0_ap_start,
        ap_done => FFT053_U0_ap_done,
        ap_continue => FFT053_U0_ap_continue,
        ap_idle => FFT053_U0_ap_idle,
        ap_ready => FFT053_U0_ap_ready,
        data_IN_M_real_address0 => FFT053_U0_data_IN_M_real_address0,
        data_IN_M_real_ce0 => FFT053_U0_data_IN_M_real_ce0,
        data_IN_M_real_q0 => data_OUT0_M_real_t_q0,
        data_IN_M_real_address1 => FFT053_U0_data_IN_M_real_address1,
        data_IN_M_real_ce1 => FFT053_U0_data_IN_M_real_ce1,
        data_IN_M_real_q1 => data_OUT0_M_real_t_q1,
        data_IN_M_imag_address0 => FFT053_U0_data_IN_M_imag_address0,
        data_IN_M_imag_ce0 => FFT053_U0_data_IN_M_imag_ce0,
        data_IN_M_imag_q0 => data_OUT0_M_imag_t_q0,
        data_IN_M_imag_address1 => FFT053_U0_data_IN_M_imag_address1,
        data_IN_M_imag_ce1 => FFT053_U0_data_IN_M_imag_ce1,
        data_IN_M_imag_q1 => data_OUT0_M_imag_t_q1,
        data_OUT1_M_imag_address0 => FFT053_U0_data_OUT1_M_imag_address0,
        data_OUT1_M_imag_ce0 => FFT053_U0_data_OUT1_M_imag_ce0,
        data_OUT1_M_imag_we0 => FFT053_U0_data_OUT1_M_imag_we0,
        data_OUT1_M_imag_d0 => FFT053_U0_data_OUT1_M_imag_d0,
        data_OUT1_M_imag_address1 => FFT053_U0_data_OUT1_M_imag_address1,
        data_OUT1_M_imag_ce1 => FFT053_U0_data_OUT1_M_imag_ce1,
        data_OUT1_M_imag_we1 => FFT053_U0_data_OUT1_M_imag_we1,
        data_OUT1_M_imag_d1 => FFT053_U0_data_OUT1_M_imag_d1,
        data_OUT1_M_real_address0 => FFT053_U0_data_OUT1_M_real_address0,
        data_OUT1_M_real_ce0 => FFT053_U0_data_OUT1_M_real_ce0,
        data_OUT1_M_real_we0 => FFT053_U0_data_OUT1_M_real_we0,
        data_OUT1_M_real_d0 => FFT053_U0_data_OUT1_M_real_d0,
        data_OUT1_M_real_address1 => FFT053_U0_data_OUT1_M_real_address1,
        data_OUT1_M_real_ce1 => FFT053_U0_data_OUT1_M_real_ce1,
        data_OUT1_M_real_we1 => FFT053_U0_data_OUT1_M_real_we1,
        data_OUT1_M_real_d1 => FFT053_U0_data_OUT1_M_real_d1);

    FFT054_U0 : component FFT054
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FFT054_U0_ap_start,
        ap_done => FFT054_U0_ap_done,
        ap_continue => FFT054_U0_ap_continue,
        ap_idle => FFT054_U0_ap_idle,
        ap_ready => FFT054_U0_ap_ready,
        data_OUT2_M_imag_address0 => FFT054_U0_data_OUT2_M_imag_address0,
        data_OUT2_M_imag_ce0 => FFT054_U0_data_OUT2_M_imag_ce0,
        data_OUT2_M_imag_we0 => FFT054_U0_data_OUT2_M_imag_we0,
        data_OUT2_M_imag_d0 => FFT054_U0_data_OUT2_M_imag_d0,
        data_OUT2_M_imag_address1 => FFT054_U0_data_OUT2_M_imag_address1,
        data_OUT2_M_imag_ce1 => FFT054_U0_data_OUT2_M_imag_ce1,
        data_OUT2_M_imag_we1 => FFT054_U0_data_OUT2_M_imag_we1,
        data_OUT2_M_imag_d1 => FFT054_U0_data_OUT2_M_imag_d1,
        data_OUT2_M_real_address0 => FFT054_U0_data_OUT2_M_real_address0,
        data_OUT2_M_real_ce0 => FFT054_U0_data_OUT2_M_real_ce0,
        data_OUT2_M_real_we0 => FFT054_U0_data_OUT2_M_real_we0,
        data_OUT2_M_real_d0 => FFT054_U0_data_OUT2_M_real_d0,
        data_OUT2_M_real_address1 => FFT054_U0_data_OUT2_M_real_address1,
        data_OUT2_M_real_ce1 => FFT054_U0_data_OUT2_M_real_ce1,
        data_OUT2_M_real_we1 => FFT054_U0_data_OUT2_M_real_we1,
        data_OUT2_M_real_d1 => FFT054_U0_data_OUT2_M_real_d1,
        data_OUT1_M_real_address0 => FFT054_U0_data_OUT1_M_real_address0,
        data_OUT1_M_real_ce0 => FFT054_U0_data_OUT1_M_real_ce0,
        data_OUT1_M_real_q0 => data_OUT1_M_real_t_q0,
        data_OUT1_M_real_address1 => FFT054_U0_data_OUT1_M_real_address1,
        data_OUT1_M_real_ce1 => FFT054_U0_data_OUT1_M_real_ce1,
        data_OUT1_M_real_q1 => data_OUT1_M_real_t_q1,
        data_OUT1_M_imag_address0 => FFT054_U0_data_OUT1_M_imag_address0,
        data_OUT1_M_imag_ce0 => FFT054_U0_data_OUT1_M_imag_ce0,
        data_OUT1_M_imag_q0 => data_OUT1_M_imag_t_q0,
        data_OUT1_M_imag_address1 => FFT054_U0_data_OUT1_M_imag_address1,
        data_OUT1_M_imag_ce1 => FFT054_U0_data_OUT1_M_imag_ce1,
        data_OUT1_M_imag_q1 => data_OUT1_M_imag_t_q1);

    FFT055_U0 : component FFT055
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FFT055_U0_ap_start,
        ap_done => FFT055_U0_ap_done,
        ap_continue => FFT055_U0_ap_continue,
        ap_idle => FFT055_U0_ap_idle,
        ap_ready => FFT055_U0_ap_ready,
        data_OUT3_M_imag_address0 => FFT055_U0_data_OUT3_M_imag_address0,
        data_OUT3_M_imag_ce0 => FFT055_U0_data_OUT3_M_imag_ce0,
        data_OUT3_M_imag_we0 => FFT055_U0_data_OUT3_M_imag_we0,
        data_OUT3_M_imag_d0 => FFT055_U0_data_OUT3_M_imag_d0,
        data_OUT3_M_imag_address1 => FFT055_U0_data_OUT3_M_imag_address1,
        data_OUT3_M_imag_ce1 => FFT055_U0_data_OUT3_M_imag_ce1,
        data_OUT3_M_imag_we1 => FFT055_U0_data_OUT3_M_imag_we1,
        data_OUT3_M_imag_d1 => FFT055_U0_data_OUT3_M_imag_d1,
        data_OUT3_M_real_address0 => FFT055_U0_data_OUT3_M_real_address0,
        data_OUT3_M_real_ce0 => FFT055_U0_data_OUT3_M_real_ce0,
        data_OUT3_M_real_we0 => FFT055_U0_data_OUT3_M_real_we0,
        data_OUT3_M_real_d0 => FFT055_U0_data_OUT3_M_real_d0,
        data_OUT3_M_real_address1 => FFT055_U0_data_OUT3_M_real_address1,
        data_OUT3_M_real_ce1 => FFT055_U0_data_OUT3_M_real_ce1,
        data_OUT3_M_real_we1 => FFT055_U0_data_OUT3_M_real_we1,
        data_OUT3_M_real_d1 => FFT055_U0_data_OUT3_M_real_d1,
        data_OUT2_M_real_address0 => FFT055_U0_data_OUT2_M_real_address0,
        data_OUT2_M_real_ce0 => FFT055_U0_data_OUT2_M_real_ce0,
        data_OUT2_M_real_q0 => data_OUT2_M_real_t_q0,
        data_OUT2_M_real_address1 => FFT055_U0_data_OUT2_M_real_address1,
        data_OUT2_M_real_ce1 => FFT055_U0_data_OUT2_M_real_ce1,
        data_OUT2_M_real_q1 => data_OUT2_M_real_t_q1,
        data_OUT2_M_imag_address0 => FFT055_U0_data_OUT2_M_imag_address0,
        data_OUT2_M_imag_ce0 => FFT055_U0_data_OUT2_M_imag_ce0,
        data_OUT2_M_imag_q0 => data_OUT2_M_imag_t_q0,
        data_OUT2_M_imag_address1 => FFT055_U0_data_OUT2_M_imag_address1,
        data_OUT2_M_imag_ce1 => FFT055_U0_data_OUT2_M_imag_ce1,
        data_OUT2_M_imag_q1 => data_OUT2_M_imag_t_q1);

    FFT056_U0 : component FFT056
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FFT056_U0_ap_start,
        ap_done => FFT056_U0_ap_done,
        ap_continue => FFT056_U0_ap_continue,
        ap_idle => FFT056_U0_ap_idle,
        ap_ready => FFT056_U0_ap_ready,
        data_OUT4_M_imag_address0 => FFT056_U0_data_OUT4_M_imag_address0,
        data_OUT4_M_imag_ce0 => FFT056_U0_data_OUT4_M_imag_ce0,
        data_OUT4_M_imag_we0 => FFT056_U0_data_OUT4_M_imag_we0,
        data_OUT4_M_imag_d0 => FFT056_U0_data_OUT4_M_imag_d0,
        data_OUT4_M_imag_address1 => FFT056_U0_data_OUT4_M_imag_address1,
        data_OUT4_M_imag_ce1 => FFT056_U0_data_OUT4_M_imag_ce1,
        data_OUT4_M_imag_we1 => FFT056_U0_data_OUT4_M_imag_we1,
        data_OUT4_M_imag_d1 => FFT056_U0_data_OUT4_M_imag_d1,
        data_OUT4_M_real_address0 => FFT056_U0_data_OUT4_M_real_address0,
        data_OUT4_M_real_ce0 => FFT056_U0_data_OUT4_M_real_ce0,
        data_OUT4_M_real_we0 => FFT056_U0_data_OUT4_M_real_we0,
        data_OUT4_M_real_d0 => FFT056_U0_data_OUT4_M_real_d0,
        data_OUT4_M_real_address1 => FFT056_U0_data_OUT4_M_real_address1,
        data_OUT4_M_real_ce1 => FFT056_U0_data_OUT4_M_real_ce1,
        data_OUT4_M_real_we1 => FFT056_U0_data_OUT4_M_real_we1,
        data_OUT4_M_real_d1 => FFT056_U0_data_OUT4_M_real_d1,
        data_OUT3_M_real_address0 => FFT056_U0_data_OUT3_M_real_address0,
        data_OUT3_M_real_ce0 => FFT056_U0_data_OUT3_M_real_ce0,
        data_OUT3_M_real_q0 => data_OUT3_M_real_t_q0,
        data_OUT3_M_real_address1 => FFT056_U0_data_OUT3_M_real_address1,
        data_OUT3_M_real_ce1 => FFT056_U0_data_OUT3_M_real_ce1,
        data_OUT3_M_real_q1 => data_OUT3_M_real_t_q1,
        data_OUT3_M_imag_address0 => FFT056_U0_data_OUT3_M_imag_address0,
        data_OUT3_M_imag_ce0 => FFT056_U0_data_OUT3_M_imag_ce0,
        data_OUT3_M_imag_q0 => data_OUT3_M_imag_t_q0,
        data_OUT3_M_imag_address1 => FFT056_U0_data_OUT3_M_imag_address1,
        data_OUT3_M_imag_ce1 => FFT056_U0_data_OUT3_M_imag_ce1,
        data_OUT3_M_imag_q1 => data_OUT3_M_imag_t_q1);

    FFT057_U0 : component FFT057
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FFT057_U0_ap_start,
        ap_done => FFT057_U0_ap_done,
        ap_continue => FFT057_U0_ap_continue,
        ap_idle => FFT057_U0_ap_idle,
        ap_ready => FFT057_U0_ap_ready,
        data_OUT4_M_real_address0 => FFT057_U0_data_OUT4_M_real_address0,
        data_OUT4_M_real_ce0 => FFT057_U0_data_OUT4_M_real_ce0,
        data_OUT4_M_real_q0 => data_OUT4_M_real_t_q0,
        data_OUT4_M_real_address1 => FFT057_U0_data_OUT4_M_real_address1,
        data_OUT4_M_real_ce1 => FFT057_U0_data_OUT4_M_real_ce1,
        data_OUT4_M_real_q1 => data_OUT4_M_real_t_q1,
        data_OUT4_M_imag_address0 => FFT057_U0_data_OUT4_M_imag_address0,
        data_OUT4_M_imag_ce0 => FFT057_U0_data_OUT4_M_imag_ce0,
        data_OUT4_M_imag_q0 => data_OUT4_M_imag_t_q0,
        data_OUT4_M_imag_address1 => FFT057_U0_data_OUT4_M_imag_address1,
        data_OUT4_M_imag_ce1 => FFT057_U0_data_OUT4_M_imag_ce1,
        data_OUT4_M_imag_q1 => data_OUT4_M_imag_t_q1,
        xout_M_real_address0 => FFT057_U0_xout_M_real_address0,
        xout_M_real_ce0 => FFT057_U0_xout_M_real_ce0,
        xout_M_real_we0 => FFT057_U0_xout_M_real_we0,
        xout_M_real_d0 => FFT057_U0_xout_M_real_d0,
        xout_M_real_address1 => FFT057_U0_xout_M_real_address1,
        xout_M_real_ce1 => FFT057_U0_xout_M_real_ce1,
        xout_M_real_we1 => FFT057_U0_xout_M_real_we1,
        xout_M_real_d1 => FFT057_U0_xout_M_real_d1,
        xout_M_imag_address0 => FFT057_U0_xout_M_imag_address0,
        xout_M_imag_ce0 => FFT057_U0_xout_M_imag_ce0,
        xout_M_imag_we0 => FFT057_U0_xout_M_imag_we0,
        xout_M_imag_d0 => FFT057_U0_xout_M_imag_d0,
        xout_M_imag_address1 => FFT057_U0_xout_M_imag_address1,
        xout_M_imag_ce1 => FFT057_U0_xout_M_imag_ce1,
        xout_M_imag_we1 => FFT057_U0_xout_M_imag_we1,
        xout_M_imag_d1 => FFT057_U0_xout_M_imag_d1);

    Block_codeRepl11320_U0 : component Block_codeRepl11320_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_codeRepl11320_U0_ap_start,
        ap_done => Block_codeRepl11320_U0_ap_done,
        ap_continue => Block_codeRepl11320_U0_ap_continue,
        ap_idle => Block_codeRepl11320_U0_ap_idle,
        ap_ready => Block_codeRepl11320_U0_ap_ready,
        data_OUT_M_real_address0 => Block_codeRepl11320_U0_data_OUT_M_real_address0,
        data_OUT_M_real_ce0 => Block_codeRepl11320_U0_data_OUT_M_real_ce0,
        data_OUT_M_real_we0 => Block_codeRepl11320_U0_data_OUT_M_real_we0,
        data_OUT_M_real_d0 => Block_codeRepl11320_U0_data_OUT_M_real_d0,
        data_OUT_M_imag_address0 => Block_codeRepl11320_U0_data_OUT_M_imag_address0,
        data_OUT_M_imag_ce0 => Block_codeRepl11320_U0_data_OUT_M_imag_ce0,
        data_OUT_M_imag_we0 => Block_codeRepl11320_U0_data_OUT_M_imag_we0,
        data_OUT_M_imag_d0 => Block_codeRepl11320_U0_data_OUT_M_imag_d0,
        xout_M_imag_address0 => Block_codeRepl11320_U0_xout_M_imag_address0,
        xout_M_imag_ce0 => Block_codeRepl11320_U0_xout_M_imag_ce0,
        xout_M_imag_q0 => xout_M_imag_t_q0,
        xout_M_real_address0 => Block_codeRepl11320_U0_xout_M_real_address0,
        xout_M_real_ce0 => Block_codeRepl11320_U0_xout_M_real_ce0,
        xout_M_real_q0 => xout_M_real_t_q0);

    xin_M_imag_U : component FFT_xin_M_imag
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Block_codeRepl113_pr_U0_xin_M_imag_address0,
        i_ce0 => Block_codeRepl113_pr_U0_xin_M_imag_ce0,
        i_we0 => Block_codeRepl113_pr_U0_xin_M_imag_we0,
        i_d0 => Block_codeRepl113_pr_U0_xin_M_imag_d0,
        i_q0 => xin_M_imag_i_q0,
        t_address0 => bitreverse_U0_xin_M_imag_address0,
        t_ce0 => bitreverse_U0_xin_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => xin_M_imag_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => xin_M_imag_i_full_n,
        i_write => ap_channel_done_xin_M_imag,
        t_empty_n => xin_M_imag_t_empty_n,
        t_read => bitreverse_U0_ap_ready);

    xin_M_real_U : component FFT_xin_M_imag
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Block_codeRepl113_pr_U0_xin_M_real_address0,
        i_ce0 => Block_codeRepl113_pr_U0_xin_M_real_ce0,
        i_we0 => Block_codeRepl113_pr_U0_xin_M_real_we0,
        i_d0 => Block_codeRepl113_pr_U0_xin_M_real_d0,
        i_q0 => xin_M_real_i_q0,
        t_address0 => bitreverse_U0_xin_M_real_address0,
        t_ce0 => bitreverse_U0_xin_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => xin_M_real_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => xin_M_real_i_full_n,
        i_write => ap_channel_done_xin_M_real,
        t_empty_n => xin_M_real_t_empty_n,
        t_read => bitreverse_U0_ap_ready);

    data_OUT0_M_real_U : component FFT_data_OUT0_M_reOg
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => bitreverse_U0_data_OUT0_M_real_address0,
        i_ce0 => bitreverse_U0_data_OUT0_M_real_ce0,
        i_we0 => bitreverse_U0_data_OUT0_M_real_we0,
        i_d0 => bitreverse_U0_data_OUT0_M_real_d0,
        i_q0 => data_OUT0_M_real_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => data_OUT0_M_real_i_q1,
        t_address0 => FFT053_U0_data_IN_M_real_address0,
        t_ce0 => FFT053_U0_data_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT0_M_real_t_q0,
        t_address1 => FFT053_U0_data_IN_M_real_address1,
        t_ce1 => FFT053_U0_data_IN_M_real_ce1,
        t_q1 => data_OUT0_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT0_M_real_i_full_n,
        i_write => ap_channel_done_data_OUT0_M_real,
        t_empty_n => data_OUT0_M_real_t_empty_n,
        t_read => FFT053_U0_ap_ready);

    data_OUT0_M_imag_U : component FFT_data_OUT0_M_reOg
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => bitreverse_U0_data_OUT0_M_imag_address0,
        i_ce0 => bitreverse_U0_data_OUT0_M_imag_ce0,
        i_we0 => bitreverse_U0_data_OUT0_M_imag_we0,
        i_d0 => bitreverse_U0_data_OUT0_M_imag_d0,
        i_q0 => data_OUT0_M_imag_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => data_OUT0_M_imag_i_q1,
        t_address0 => FFT053_U0_data_IN_M_imag_address0,
        t_ce0 => FFT053_U0_data_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT0_M_imag_t_q0,
        t_address1 => FFT053_U0_data_IN_M_imag_address1,
        t_ce1 => FFT053_U0_data_IN_M_imag_ce1,
        t_q1 => data_OUT0_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT0_M_imag_i_full_n,
        i_write => ap_channel_done_data_OUT0_M_imag,
        t_empty_n => data_OUT0_M_imag_t_empty_n,
        t_read => FFT053_U0_ap_ready);

    data_OUT1_M_imag_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT053_U0_data_OUT1_M_imag_address0,
        i_ce0 => FFT053_U0_data_OUT1_M_imag_ce0,
        i_we0 => FFT053_U0_data_OUT1_M_imag_we0,
        i_d0 => FFT053_U0_data_OUT1_M_imag_d0,
        i_q0 => data_OUT1_M_imag_i_q0,
        i_address1 => FFT053_U0_data_OUT1_M_imag_address1,
        i_ce1 => FFT053_U0_data_OUT1_M_imag_ce1,
        i_we1 => FFT053_U0_data_OUT1_M_imag_we1,
        i_d1 => FFT053_U0_data_OUT1_M_imag_d1,
        i_q1 => data_OUT1_M_imag_i_q1,
        t_address0 => FFT054_U0_data_OUT1_M_imag_address0,
        t_ce0 => FFT054_U0_data_OUT1_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT1_M_imag_t_q0,
        t_address1 => FFT054_U0_data_OUT1_M_imag_address1,
        t_ce1 => FFT054_U0_data_OUT1_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT1_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT1_M_imag_i_full_n,
        i_write => ap_channel_done_data_OUT1_M_imag,
        t_empty_n => data_OUT1_M_imag_t_empty_n,
        t_read => FFT054_U0_ap_ready);

    data_OUT1_M_real_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT053_U0_data_OUT1_M_real_address0,
        i_ce0 => FFT053_U0_data_OUT1_M_real_ce0,
        i_we0 => FFT053_U0_data_OUT1_M_real_we0,
        i_d0 => FFT053_U0_data_OUT1_M_real_d0,
        i_q0 => data_OUT1_M_real_i_q0,
        i_address1 => FFT053_U0_data_OUT1_M_real_address1,
        i_ce1 => FFT053_U0_data_OUT1_M_real_ce1,
        i_we1 => FFT053_U0_data_OUT1_M_real_we1,
        i_d1 => FFT053_U0_data_OUT1_M_real_d1,
        i_q1 => data_OUT1_M_real_i_q1,
        t_address0 => FFT054_U0_data_OUT1_M_real_address0,
        t_ce0 => FFT054_U0_data_OUT1_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT1_M_real_t_q0,
        t_address1 => FFT054_U0_data_OUT1_M_real_address1,
        t_ce1 => FFT054_U0_data_OUT1_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT1_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT1_M_real_i_full_n,
        i_write => ap_channel_done_data_OUT1_M_real,
        t_empty_n => data_OUT1_M_real_t_empty_n,
        t_read => FFT054_U0_ap_ready);

    data_OUT2_M_imag_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT054_U0_data_OUT2_M_imag_address0,
        i_ce0 => FFT054_U0_data_OUT2_M_imag_ce0,
        i_we0 => FFT054_U0_data_OUT2_M_imag_we0,
        i_d0 => FFT054_U0_data_OUT2_M_imag_d0,
        i_q0 => data_OUT2_M_imag_i_q0,
        i_address1 => FFT054_U0_data_OUT2_M_imag_address1,
        i_ce1 => FFT054_U0_data_OUT2_M_imag_ce1,
        i_we1 => FFT054_U0_data_OUT2_M_imag_we1,
        i_d1 => FFT054_U0_data_OUT2_M_imag_d1,
        i_q1 => data_OUT2_M_imag_i_q1,
        t_address0 => FFT055_U0_data_OUT2_M_imag_address0,
        t_ce0 => FFT055_U0_data_OUT2_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT2_M_imag_t_q0,
        t_address1 => FFT055_U0_data_OUT2_M_imag_address1,
        t_ce1 => FFT055_U0_data_OUT2_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT2_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT2_M_imag_i_full_n,
        i_write => ap_channel_done_data_OUT2_M_imag,
        t_empty_n => data_OUT2_M_imag_t_empty_n,
        t_read => FFT055_U0_ap_ready);

    data_OUT2_M_real_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT054_U0_data_OUT2_M_real_address0,
        i_ce0 => FFT054_U0_data_OUT2_M_real_ce0,
        i_we0 => FFT054_U0_data_OUT2_M_real_we0,
        i_d0 => FFT054_U0_data_OUT2_M_real_d0,
        i_q0 => data_OUT2_M_real_i_q0,
        i_address1 => FFT054_U0_data_OUT2_M_real_address1,
        i_ce1 => FFT054_U0_data_OUT2_M_real_ce1,
        i_we1 => FFT054_U0_data_OUT2_M_real_we1,
        i_d1 => FFT054_U0_data_OUT2_M_real_d1,
        i_q1 => data_OUT2_M_real_i_q1,
        t_address0 => FFT055_U0_data_OUT2_M_real_address0,
        t_ce0 => FFT055_U0_data_OUT2_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT2_M_real_t_q0,
        t_address1 => FFT055_U0_data_OUT2_M_real_address1,
        t_ce1 => FFT055_U0_data_OUT2_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT2_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT2_M_real_i_full_n,
        i_write => ap_channel_done_data_OUT2_M_real,
        t_empty_n => data_OUT2_M_real_t_empty_n,
        t_read => FFT055_U0_ap_ready);

    data_OUT3_M_imag_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT055_U0_data_OUT3_M_imag_address0,
        i_ce0 => FFT055_U0_data_OUT3_M_imag_ce0,
        i_we0 => FFT055_U0_data_OUT3_M_imag_we0,
        i_d0 => FFT055_U0_data_OUT3_M_imag_d0,
        i_q0 => data_OUT3_M_imag_i_q0,
        i_address1 => FFT055_U0_data_OUT3_M_imag_address1,
        i_ce1 => FFT055_U0_data_OUT3_M_imag_ce1,
        i_we1 => FFT055_U0_data_OUT3_M_imag_we1,
        i_d1 => FFT055_U0_data_OUT3_M_imag_d1,
        i_q1 => data_OUT3_M_imag_i_q1,
        t_address0 => FFT056_U0_data_OUT3_M_imag_address0,
        t_ce0 => FFT056_U0_data_OUT3_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT3_M_imag_t_q0,
        t_address1 => FFT056_U0_data_OUT3_M_imag_address1,
        t_ce1 => FFT056_U0_data_OUT3_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT3_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT3_M_imag_i_full_n,
        i_write => ap_channel_done_data_OUT3_M_imag,
        t_empty_n => data_OUT3_M_imag_t_empty_n,
        t_read => FFT056_U0_ap_ready);

    data_OUT3_M_real_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT055_U0_data_OUT3_M_real_address0,
        i_ce0 => FFT055_U0_data_OUT3_M_real_ce0,
        i_we0 => FFT055_U0_data_OUT3_M_real_we0,
        i_d0 => FFT055_U0_data_OUT3_M_real_d0,
        i_q0 => data_OUT3_M_real_i_q0,
        i_address1 => FFT055_U0_data_OUT3_M_real_address1,
        i_ce1 => FFT055_U0_data_OUT3_M_real_ce1,
        i_we1 => FFT055_U0_data_OUT3_M_real_we1,
        i_d1 => FFT055_U0_data_OUT3_M_real_d1,
        i_q1 => data_OUT3_M_real_i_q1,
        t_address0 => FFT056_U0_data_OUT3_M_real_address0,
        t_ce0 => FFT056_U0_data_OUT3_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT3_M_real_t_q0,
        t_address1 => FFT056_U0_data_OUT3_M_real_address1,
        t_ce1 => FFT056_U0_data_OUT3_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT3_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT3_M_real_i_full_n,
        i_write => ap_channel_done_data_OUT3_M_real,
        t_empty_n => data_OUT3_M_real_t_empty_n,
        t_read => FFT056_U0_ap_ready);

    data_OUT4_M_imag_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT056_U0_data_OUT4_M_imag_address0,
        i_ce0 => FFT056_U0_data_OUT4_M_imag_ce0,
        i_we0 => FFT056_U0_data_OUT4_M_imag_we0,
        i_d0 => FFT056_U0_data_OUT4_M_imag_d0,
        i_q0 => data_OUT4_M_imag_i_q0,
        i_address1 => FFT056_U0_data_OUT4_M_imag_address1,
        i_ce1 => FFT056_U0_data_OUT4_M_imag_ce1,
        i_we1 => FFT056_U0_data_OUT4_M_imag_we1,
        i_d1 => FFT056_U0_data_OUT4_M_imag_d1,
        i_q1 => data_OUT4_M_imag_i_q1,
        t_address0 => FFT057_U0_data_OUT4_M_imag_address0,
        t_ce0 => FFT057_U0_data_OUT4_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT4_M_imag_t_q0,
        t_address1 => FFT057_U0_data_OUT4_M_imag_address1,
        t_ce1 => FFT057_U0_data_OUT4_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT4_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT4_M_imag_i_full_n,
        i_write => ap_channel_done_data_OUT4_M_imag,
        t_empty_n => data_OUT4_M_imag_t_empty_n,
        t_read => FFT057_U0_ap_ready);

    data_OUT4_M_real_U : component FFT_data_OUT1_M_ig8j
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT056_U0_data_OUT4_M_real_address0,
        i_ce0 => FFT056_U0_data_OUT4_M_real_ce0,
        i_we0 => FFT056_U0_data_OUT4_M_real_we0,
        i_d0 => FFT056_U0_data_OUT4_M_real_d0,
        i_q0 => data_OUT4_M_real_i_q0,
        i_address1 => FFT056_U0_data_OUT4_M_real_address1,
        i_ce1 => FFT056_U0_data_OUT4_M_real_ce1,
        i_we1 => FFT056_U0_data_OUT4_M_real_we1,
        i_d1 => FFT056_U0_data_OUT4_M_real_d1,
        i_q1 => data_OUT4_M_real_i_q1,
        t_address0 => FFT057_U0_data_OUT4_M_real_address0,
        t_ce0 => FFT057_U0_data_OUT4_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => data_OUT4_M_real_t_q0,
        t_address1 => FFT057_U0_data_OUT4_M_real_address1,
        t_ce1 => FFT057_U0_data_OUT4_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        t_q1 => data_OUT4_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_OUT4_M_real_i_full_n,
        i_write => ap_channel_done_data_OUT4_M_real,
        t_empty_n => data_OUT4_M_real_t_empty_n,
        t_read => FFT057_U0_ap_ready);

    xout_M_real_U : component FFT_xout_M_real
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT057_U0_xout_M_real_address0,
        i_ce0 => FFT057_U0_xout_M_real_ce0,
        i_we0 => FFT057_U0_xout_M_real_we0,
        i_d0 => FFT057_U0_xout_M_real_d0,
        i_q0 => xout_M_real_i_q0,
        i_address1 => FFT057_U0_xout_M_real_address1,
        i_ce1 => FFT057_U0_xout_M_real_ce1,
        i_we1 => FFT057_U0_xout_M_real_we1,
        i_d1 => FFT057_U0_xout_M_real_d1,
        t_address0 => Block_codeRepl11320_U0_xout_M_real_address0,
        t_ce0 => Block_codeRepl11320_U0_xout_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => xout_M_real_t_q0,
        t_address1 => ap_const_lv5_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => xout_M_real_i_full_n,
        i_write => ap_channel_done_xout_M_real,
        t_empty_n => xout_M_real_t_empty_n,
        t_read => Block_codeRepl11320_U0_ap_ready);

    xout_M_imag_U : component FFT_xout_M_real
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => FFT057_U0_xout_M_imag_address0,
        i_ce0 => FFT057_U0_xout_M_imag_ce0,
        i_we0 => FFT057_U0_xout_M_imag_we0,
        i_d0 => FFT057_U0_xout_M_imag_d0,
        i_q0 => xout_M_imag_i_q0,
        i_address1 => FFT057_U0_xout_M_imag_address1,
        i_ce1 => FFT057_U0_xout_M_imag_ce1,
        i_we1 => FFT057_U0_xout_M_imag_we1,
        i_d1 => FFT057_U0_xout_M_imag_d1,
        t_address0 => Block_codeRepl11320_U0_xout_M_imag_address0,
        t_ce0 => Block_codeRepl11320_U0_xout_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => xout_M_imag_t_q0,
        t_address1 => ap_const_lv5_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => xout_M_imag_i_full_n,
        i_write => ap_channel_done_xout_M_imag,
        t_empty_n => xout_M_imag_t_empty_n,
        t_read => Block_codeRepl11320_U0_ap_ready);





    ap_sync_reg_channel_write_data_OUT0_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT0_M_imag <= ap_const_logic_0;
            else
                if (((bitreverse_U0_ap_done and bitreverse_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT0_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT0_M_imag <= ap_sync_channel_write_data_OUT0_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT0_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT0_M_real <= ap_const_logic_0;
            else
                if (((bitreverse_U0_ap_done and bitreverse_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT0_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT0_M_real <= ap_sync_channel_write_data_OUT0_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT1_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT1_M_imag <= ap_const_logic_0;
            else
                if (((FFT053_U0_ap_done and FFT053_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT1_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT1_M_imag <= ap_sync_channel_write_data_OUT1_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT1_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT1_M_real <= ap_const_logic_0;
            else
                if (((FFT053_U0_ap_done and FFT053_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT1_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT1_M_real <= ap_sync_channel_write_data_OUT1_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT2_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT2_M_imag <= ap_const_logic_0;
            else
                if (((FFT054_U0_ap_done and FFT054_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT2_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT2_M_imag <= ap_sync_channel_write_data_OUT2_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT2_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT2_M_real <= ap_const_logic_0;
            else
                if (((FFT054_U0_ap_done and FFT054_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT2_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT2_M_real <= ap_sync_channel_write_data_OUT2_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT3_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT3_M_imag <= ap_const_logic_0;
            else
                if (((FFT055_U0_ap_done and FFT055_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT3_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT3_M_imag <= ap_sync_channel_write_data_OUT3_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT3_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT3_M_real <= ap_const_logic_0;
            else
                if (((FFT055_U0_ap_done and FFT055_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT3_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT3_M_real <= ap_sync_channel_write_data_OUT3_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT4_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT4_M_imag <= ap_const_logic_0;
            else
                if (((FFT056_U0_ap_done and FFT056_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT4_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT4_M_imag <= ap_sync_channel_write_data_OUT4_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_OUT4_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_data_OUT4_M_real <= ap_const_logic_0;
            else
                if (((FFT056_U0_ap_done and FFT056_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_OUT4_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_OUT4_M_real <= ap_sync_channel_write_data_OUT4_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_xin_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_xin_M_imag <= ap_const_logic_0;
            else
                if (((Block_codeRepl113_pr_U0_ap_done and Block_codeRepl113_pr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_xin_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_xin_M_imag <= ap_sync_channel_write_xin_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_xin_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_xin_M_real <= ap_const_logic_0;
            else
                if (((Block_codeRepl113_pr_U0_ap_done and Block_codeRepl113_pr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_xin_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_xin_M_real <= ap_sync_channel_write_xin_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_xout_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_xout_M_imag <= ap_const_logic_0;
            else
                if (((FFT057_U0_ap_done and FFT057_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_xout_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_xout_M_imag <= ap_sync_channel_write_xout_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_xout_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_xout_M_real <= ap_const_logic_0;
            else
                if (((FFT057_U0_ap_done and FFT057_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_xout_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_xout_M_real <= ap_sync_channel_write_xout_M_real;
                end if; 
            end if;
        end if;
    end process;

    Block_codeRepl11320_U0_ap_continue <= ap_const_logic_1;
    Block_codeRepl11320_U0_ap_start <= (xout_M_real_t_empty_n and xout_M_imag_t_empty_n);
    Block_codeRepl11320_U0_start_full_n <= ap_const_logic_1;
    Block_codeRepl11320_U0_start_write <= ap_const_logic_0;
    Block_codeRepl113_pr_U0_ap_continue <= (ap_sync_channel_write_xin_M_real and ap_sync_channel_write_xin_M_imag);
    Block_codeRepl113_pr_U0_ap_start <= ap_start;
    Block_codeRepl113_pr_U0_start_full_n <= ap_const_logic_1;
    Block_codeRepl113_pr_U0_start_write <= ap_const_logic_0;
    Block_codeRepl113_pr_U0_xin_M_imag_full_n <= xin_M_imag_i_full_n;
    Block_codeRepl113_pr_U0_xin_M_real_full_n <= xin_M_real_i_full_n;
    FFT053_U0_ap_continue <= (ap_sync_channel_write_data_OUT1_M_real and ap_sync_channel_write_data_OUT1_M_imag);
    FFT053_U0_ap_start <= (data_OUT0_M_real_t_empty_n and data_OUT0_M_imag_t_empty_n);
    FFT053_U0_data_OUT1_M_imag_full_n <= data_OUT1_M_imag_i_full_n;
    FFT053_U0_data_OUT1_M_real_full_n <= data_OUT1_M_real_i_full_n;
    FFT053_U0_start_full_n <= ap_const_logic_1;
    FFT053_U0_start_write <= ap_const_logic_0;
    FFT054_U0_ap_continue <= (ap_sync_channel_write_data_OUT2_M_real and ap_sync_channel_write_data_OUT2_M_imag);
    FFT054_U0_ap_start <= (data_OUT1_M_real_t_empty_n and data_OUT1_M_imag_t_empty_n);
    FFT054_U0_data_OUT2_M_imag_full_n <= data_OUT2_M_imag_i_full_n;
    FFT054_U0_data_OUT2_M_real_full_n <= data_OUT2_M_real_i_full_n;
    FFT054_U0_start_full_n <= ap_const_logic_1;
    FFT054_U0_start_write <= ap_const_logic_0;
    FFT055_U0_ap_continue <= (ap_sync_channel_write_data_OUT3_M_real and ap_sync_channel_write_data_OUT3_M_imag);
    FFT055_U0_ap_start <= (data_OUT2_M_real_t_empty_n and data_OUT2_M_imag_t_empty_n);
    FFT055_U0_data_OUT3_M_imag_full_n <= data_OUT3_M_imag_i_full_n;
    FFT055_U0_data_OUT3_M_real_full_n <= data_OUT3_M_real_i_full_n;
    FFT055_U0_start_full_n <= ap_const_logic_1;
    FFT055_U0_start_write <= ap_const_logic_0;
    FFT056_U0_ap_continue <= (ap_sync_channel_write_data_OUT4_M_real and ap_sync_channel_write_data_OUT4_M_imag);
    FFT056_U0_ap_start <= (data_OUT3_M_real_t_empty_n and data_OUT3_M_imag_t_empty_n);
    FFT056_U0_data_OUT4_M_imag_full_n <= data_OUT4_M_imag_i_full_n;
    FFT056_U0_data_OUT4_M_real_full_n <= data_OUT4_M_real_i_full_n;
    FFT056_U0_start_full_n <= ap_const_logic_1;
    FFT056_U0_start_write <= ap_const_logic_0;
    FFT057_U0_ap_continue <= (ap_sync_channel_write_xout_M_real and ap_sync_channel_write_xout_M_imag);
    FFT057_U0_ap_start <= (data_OUT4_M_real_t_empty_n and data_OUT4_M_imag_t_empty_n);
    FFT057_U0_start_full_n <= ap_const_logic_1;
    FFT057_U0_start_write <= ap_const_logic_0;
    FFT057_U0_xout_M_imag_full_n <= xout_M_imag_i_full_n;
    FFT057_U0_xout_M_real_full_n <= xout_M_real_i_full_n;
    ap_channel_done_data_OUT0_M_imag <= ((ap_sync_reg_channel_write_data_OUT0_M_imag xor ap_const_logic_1) and bitreverse_U0_ap_done);
    ap_channel_done_data_OUT0_M_real <= ((ap_sync_reg_channel_write_data_OUT0_M_real xor ap_const_logic_1) and bitreverse_U0_ap_done);
    ap_channel_done_data_OUT1_M_imag <= ((ap_sync_reg_channel_write_data_OUT1_M_imag xor ap_const_logic_1) and FFT053_U0_ap_done);
    ap_channel_done_data_OUT1_M_real <= ((ap_sync_reg_channel_write_data_OUT1_M_real xor ap_const_logic_1) and FFT053_U0_ap_done);
    ap_channel_done_data_OUT2_M_imag <= ((ap_sync_reg_channel_write_data_OUT2_M_imag xor ap_const_logic_1) and FFT054_U0_ap_done);
    ap_channel_done_data_OUT2_M_real <= ((ap_sync_reg_channel_write_data_OUT2_M_real xor ap_const_logic_1) and FFT054_U0_ap_done);
    ap_channel_done_data_OUT3_M_imag <= ((ap_sync_reg_channel_write_data_OUT3_M_imag xor ap_const_logic_1) and FFT055_U0_ap_done);
    ap_channel_done_data_OUT3_M_real <= ((ap_sync_reg_channel_write_data_OUT3_M_real xor ap_const_logic_1) and FFT055_U0_ap_done);
    ap_channel_done_data_OUT4_M_imag <= ((ap_sync_reg_channel_write_data_OUT4_M_imag xor ap_const_logic_1) and FFT056_U0_ap_done);
    ap_channel_done_data_OUT4_M_real <= ((ap_sync_reg_channel_write_data_OUT4_M_real xor ap_const_logic_1) and FFT056_U0_ap_done);
    ap_channel_done_xin_M_imag <= ((ap_sync_reg_channel_write_xin_M_imag xor ap_const_logic_1) and Block_codeRepl113_pr_U0_ap_done);
    ap_channel_done_xin_M_real <= ((ap_sync_reg_channel_write_xin_M_real xor ap_const_logic_1) and Block_codeRepl113_pr_U0_ap_done);
    ap_channel_done_xout_M_imag <= ((ap_sync_reg_channel_write_xout_M_imag xor ap_const_logic_1) and FFT057_U0_ap_done);
    ap_channel_done_xout_M_real <= ((ap_sync_reg_channel_write_xout_M_real xor ap_const_logic_1) and FFT057_U0_ap_done);
    ap_done <= Block_codeRepl11320_U0_ap_done;
    ap_idle <= ((xout_M_imag_t_empty_n xor ap_const_logic_1) and (xout_M_real_t_empty_n xor ap_const_logic_1) and (data_OUT4_M_real_t_empty_n xor ap_const_logic_1) and (data_OUT4_M_imag_t_empty_n xor ap_const_logic_1) and (data_OUT3_M_real_t_empty_n xor ap_const_logic_1) and (data_OUT3_M_imag_t_empty_n xor ap_const_logic_1) and (data_OUT2_M_real_t_empty_n xor ap_const_logic_1) and (data_OUT2_M_imag_t_empty_n xor ap_const_logic_1) and (data_OUT1_M_real_t_empty_n xor ap_const_logic_1) and (data_OUT1_M_imag_t_empty_n xor ap_const_logic_1) and (data_OUT0_M_imag_t_empty_n xor ap_const_logic_1) and (data_OUT0_M_real_t_empty_n xor ap_const_logic_1) and (xin_M_real_t_empty_n xor ap_const_logic_1) and (xin_M_imag_t_empty_n xor ap_const_logic_1) and bitreverse_U0_ap_idle and FFT057_U0_ap_idle and FFT056_U0_ap_idle and FFT055_U0_ap_idle and FFT054_U0_ap_idle and FFT053_U0_ap_idle and Block_codeRepl113_pr_U0_ap_idle and Block_codeRepl11320_U0_ap_idle);
    ap_ready <= Block_codeRepl113_pr_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_channel_write_data_OUT0_M_imag <= ((bitreverse_U0_data_OUT0_M_imag_full_n and ap_channel_done_data_OUT0_M_imag) or ap_sync_reg_channel_write_data_OUT0_M_imag);
    ap_sync_channel_write_data_OUT0_M_real <= ((bitreverse_U0_data_OUT0_M_real_full_n and ap_channel_done_data_OUT0_M_real) or ap_sync_reg_channel_write_data_OUT0_M_real);
    ap_sync_channel_write_data_OUT1_M_imag <= ((ap_channel_done_data_OUT1_M_imag and FFT053_U0_data_OUT1_M_imag_full_n) or ap_sync_reg_channel_write_data_OUT1_M_imag);
    ap_sync_channel_write_data_OUT1_M_real <= ((ap_channel_done_data_OUT1_M_real and FFT053_U0_data_OUT1_M_real_full_n) or ap_sync_reg_channel_write_data_OUT1_M_real);
    ap_sync_channel_write_data_OUT2_M_imag <= ((ap_channel_done_data_OUT2_M_imag and FFT054_U0_data_OUT2_M_imag_full_n) or ap_sync_reg_channel_write_data_OUT2_M_imag);
    ap_sync_channel_write_data_OUT2_M_real <= ((ap_channel_done_data_OUT2_M_real and FFT054_U0_data_OUT2_M_real_full_n) or ap_sync_reg_channel_write_data_OUT2_M_real);
    ap_sync_channel_write_data_OUT3_M_imag <= ((ap_channel_done_data_OUT3_M_imag and FFT055_U0_data_OUT3_M_imag_full_n) or ap_sync_reg_channel_write_data_OUT3_M_imag);
    ap_sync_channel_write_data_OUT3_M_real <= ((ap_channel_done_data_OUT3_M_real and FFT055_U0_data_OUT3_M_real_full_n) or ap_sync_reg_channel_write_data_OUT3_M_real);
    ap_sync_channel_write_data_OUT4_M_imag <= ((ap_channel_done_data_OUT4_M_imag and FFT056_U0_data_OUT4_M_imag_full_n) or ap_sync_reg_channel_write_data_OUT4_M_imag);
    ap_sync_channel_write_data_OUT4_M_real <= ((ap_channel_done_data_OUT4_M_real and FFT056_U0_data_OUT4_M_real_full_n) or ap_sync_reg_channel_write_data_OUT4_M_real);
    ap_sync_channel_write_xin_M_imag <= ((ap_channel_done_xin_M_imag and Block_codeRepl113_pr_U0_xin_M_imag_full_n) or ap_sync_reg_channel_write_xin_M_imag);
    ap_sync_channel_write_xin_M_real <= ((ap_channel_done_xin_M_real and Block_codeRepl113_pr_U0_xin_M_real_full_n) or ap_sync_reg_channel_write_xin_M_real);
    ap_sync_channel_write_xout_M_imag <= ((ap_channel_done_xout_M_imag and FFT057_U0_xout_M_imag_full_n) or ap_sync_reg_channel_write_xout_M_imag);
    ap_sync_channel_write_xout_M_real <= ((ap_channel_done_xout_M_real and FFT057_U0_xout_M_real_full_n) or ap_sync_reg_channel_write_xout_M_real);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_codeRepl11320_U0_ap_done;
    ap_sync_ready <= Block_codeRepl113_pr_U0_ap_ready;
    bitreverse_U0_ap_continue <= (ap_sync_channel_write_data_OUT0_M_real and ap_sync_channel_write_data_OUT0_M_imag);
    bitreverse_U0_ap_start <= (xin_M_real_t_empty_n and xin_M_imag_t_empty_n);
    bitreverse_U0_data_OUT0_M_imag_full_n <= data_OUT0_M_imag_i_full_n;
    bitreverse_U0_data_OUT0_M_real_full_n <= data_OUT0_M_real_i_full_n;
    bitreverse_U0_start_full_n <= ap_const_logic_1;
    bitreverse_U0_start_write <= ap_const_logic_0;
    data_OUT0_M_imag_t_d1 <= ap_const_lv32_0;
    data_OUT0_M_imag_t_we1 <= ap_const_logic_0;
    data_OUT0_M_real_t_d1 <= ap_const_lv32_0;
    data_OUT0_M_real_t_we1 <= ap_const_logic_0;
end behav;
