// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _FFT0_HH_
#define _FFT0_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "FFT_fsub_32ns_32nbkb.h"
#include "FFT_faddfsub_32nscud.h"
#include "FFT_fadd_32ns_32ndEe.h"
#include "FFT_fmul_32ns_32neOg.h"
#include "FFT0_W_M_real.h"
#include "FFT0_W_M_imag.h"

namespace ap_rtl {

struct FFT0 : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<6> > FFT_stage;
    sc_in< sc_lv<6> > pass_check;
    sc_in< sc_lv<4> > index_shift;
    sc_in< sc_lv<4> > pass_shift;
    sc_out< sc_lv<5> > data_IN_M_real_address0;
    sc_out< sc_logic > data_IN_M_real_ce0;
    sc_in< sc_lv<32> > data_IN_M_real_q0;
    sc_out< sc_lv<5> > data_IN_M_imag_address0;
    sc_out< sc_logic > data_IN_M_imag_ce0;
    sc_in< sc_lv<32> > data_IN_M_imag_q0;
    sc_out< sc_lv<5> > data_OUT_M_real_address0;
    sc_out< sc_logic > data_OUT_M_real_ce0;
    sc_out< sc_logic > data_OUT_M_real_we0;
    sc_out< sc_lv<32> > data_OUT_M_real_d0;
    sc_out< sc_lv<5> > data_OUT_M_imag_address0;
    sc_out< sc_logic > data_OUT_M_imag_ce0;
    sc_out< sc_logic > data_OUT_M_imag_we0;
    sc_out< sc_lv<32> > data_OUT_M_imag_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    FFT0(sc_module_name name);
    SC_HAS_PROCESS(FFT0);

    ~FFT0();

    sc_trace_file* mVcdFile;

    FFT0_W_M_real* W_M_real_U;
    FFT0_W_M_imag* W_M_imag_U;
    FFT_fsub_32ns_32nbkb<1,5,32,32,32>* FFT_fsub_32ns_32nbkb_U1;
    FFT_faddfsub_32nscud<1,5,32,32,32>* FFT_faddfsub_32nscud_U2;
    FFT_fadd_32ns_32ndEe<1,5,32,32,32>* FFT_fadd_32ns_32ndEe_U3;
    FFT_fadd_32ns_32ndEe<1,5,32,32,32>* FFT_fadd_32ns_32ndEe_U4;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U5;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U6;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U7;
    FFT_fmul_32ns_32neOg<1,4,32,32,32>* FFT_fmul_32ns_32neOg_U8;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > W_M_real_address0;
    sc_signal< sc_logic > W_M_real_ce0;
    sc_signal< sc_lv<32> > W_M_real_q0;
    sc_signal< sc_lv<4> > W_M_imag_address0;
    sc_signal< sc_logic > W_M_imag_ce0;
    sc_signal< sc_lv<32> > W_M_imag_q0;
    sc_signal< sc_lv<32> > reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > reg_253;
    sc_signal< sc_lv<32> > grp_fu_213_p2;
    sc_signal< sc_lv<32> > reg_261;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > reg_268;
    sc_signal< sc_lv<32> > pass_shift_cast_fu_275_p1;
    sc_signal< sc_lv<32> > pass_shift_cast_reg_409;
    sc_signal< sc_lv<32> > index_shift_cast_fu_279_p1;
    sc_signal< sc_lv<32> > index_shift_cast_reg_414;
    sc_signal< sc_lv<32> > FFT_stage_cast1_fu_283_p1;
    sc_signal< sc_lv<32> > FFT_stage_cast1_reg_419;
    sc_signal< sc_lv<32> > zext_ln33_fu_297_p1;
    sc_signal< sc_lv<32> > zext_ln33_reg_424;
    sc_signal< sc_lv<32> > zext_ln35_fu_311_p1;
    sc_signal< sc_lv<32> > zext_ln35_reg_429;
    sc_signal< sc_lv<5> > i_fu_321_p2;
    sc_signal< sc_lv<5> > i_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > index_fu_327_p2;
    sc_signal< sc_lv<32> > index_reg_442;
    sc_signal< sc_lv<1> > icmp_ln26_fu_315_p2;
    sc_signal< sc_lv<32> > Ulimit_fu_337_p2;
    sc_signal< sc_lv<32> > Ulimit_reg_447;
    sc_signal< sc_lv<32> > select_ln33_fu_373_p3;
    sc_signal< sc_lv<32> > select_ln33_reg_453;
    sc_signal< sc_lv<32> > butterfly_pass_2_fu_381_p3;
    sc_signal< sc_lv<32> > butterfly_pass_2_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > sext_ln30_1_fu_398_p1;
    sc_signal< sc_lv<64> > sext_ln30_1_reg_473;
    sc_signal< sc_lv<32> > p_r_M_real_reg_489;
    sc_signal< sc_lv<32> > p_r_M_imag_reg_495;
    sc_signal< sc_lv<32> > grp_fu_229_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_233_p2;
    sc_signal< sc_lv<32> > tmp_3_i_i_reg_506;
    sc_signal< sc_lv<32> > grp_fu_237_p2;
    sc_signal< sc_lv<32> > tmp_5_i_i_reg_511;
    sc_signal< sc_lv<32> > grp_fu_241_p2;
    sc_signal< sc_lv<32> > tmp_6_i_i_reg_516;
    sc_signal< sc_lv<64> > sext_ln31_fu_404_p1;
    sc_signal< sc_lv<64> > sext_ln31_reg_521;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > complex_M_real_writ_1_reg_537;
    sc_signal< sc_lv<32> > grp_fu_225_p2;
    sc_signal< sc_lv<32> > complex_M_imag_writ_1_reg_542;
    sc_signal< sc_lv<32> > butterfly_span_0_reg_180;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<32> > butterfly_pass_0_reg_191;
    sc_signal< sc_lv<5> > i_0_reg_202;
    sc_signal< sc_lv<64> > sext_ln30_fu_393_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > grp_fu_213_p0;
    sc_signal< sc_lv<32> > grp_fu_213_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > grp_fu_217_p0;
    sc_signal< sc_lv<32> > grp_fu_217_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > trunc_ln33_fu_287_p1;
    sc_signal< sc_lv<5> > add_ln33_fu_291_p2;
    sc_signal< sc_lv<5> > trunc_ln35_fu_301_p1;
    sc_signal< sc_lv<5> > add_ln35_fu_305_p2;
    sc_signal< sc_lv<32> > shl_ln28_fu_332_p2;
    sc_signal< sc_lv<1> > icmp_ln35_fu_354_p2;
    sc_signal< sc_lv<32> > butterfly_pass_fu_359_p2;
    sc_signal< sc_lv<1> > icmp_ln33_fu_343_p2;
    sc_signal< sc_lv<32> > butterfly_span_fu_348_p2;
    sc_signal< sc_lv<32> > butterfly_pass_1_fu_365_p3;
    sc_signal< sc_lv<32> > Llimit_fu_389_p2;
    sc_signal< sc_lv<2> > grp_fu_217_opcode;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_state7;
    static const sc_lv<20> ap_ST_fsm_state8;
    static const sc_lv<20> ap_ST_fsm_state9;
    static const sc_lv<20> ap_ST_fsm_state10;
    static const sc_lv<20> ap_ST_fsm_state11;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_state14;
    static const sc_lv<20> ap_ST_fsm_state15;
    static const sc_lv<20> ap_ST_fsm_state16;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_FFT_stage_cast1_fu_283_p1();
    void thread_Llimit_fu_389_p2();
    void thread_Ulimit_fu_337_p2();
    void thread_W_M_imag_address0();
    void thread_W_M_imag_ce0();
    void thread_W_M_real_address0();
    void thread_W_M_real_ce0();
    void thread_add_ln33_fu_291_p2();
    void thread_add_ln35_fu_305_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_butterfly_pass_1_fu_365_p3();
    void thread_butterfly_pass_2_fu_381_p3();
    void thread_butterfly_pass_fu_359_p2();
    void thread_butterfly_span_fu_348_p2();
    void thread_data_IN_M_imag_address0();
    void thread_data_IN_M_imag_ce0();
    void thread_data_IN_M_real_address0();
    void thread_data_IN_M_real_ce0();
    void thread_data_OUT_M_imag_address0();
    void thread_data_OUT_M_imag_ce0();
    void thread_data_OUT_M_imag_d0();
    void thread_data_OUT_M_imag_we0();
    void thread_data_OUT_M_real_address0();
    void thread_data_OUT_M_real_ce0();
    void thread_data_OUT_M_real_d0();
    void thread_data_OUT_M_real_we0();
    void thread_grp_fu_213_p0();
    void thread_grp_fu_213_p1();
    void thread_grp_fu_217_opcode();
    void thread_grp_fu_217_p0();
    void thread_grp_fu_217_p1();
    void thread_i_fu_321_p2();
    void thread_icmp_ln26_fu_315_p2();
    void thread_icmp_ln33_fu_343_p2();
    void thread_icmp_ln35_fu_354_p2();
    void thread_index_fu_327_p2();
    void thread_index_shift_cast_fu_279_p1();
    void thread_pass_shift_cast_fu_275_p1();
    void thread_select_ln33_fu_373_p3();
    void thread_sext_ln30_1_fu_398_p1();
    void thread_sext_ln30_fu_393_p1();
    void thread_sext_ln31_fu_404_p1();
    void thread_shl_ln28_fu_332_p2();
    void thread_trunc_ln33_fu_287_p1();
    void thread_trunc_ln35_fu_301_p1();
    void thread_zext_ln33_fu_297_p1();
    void thread_zext_ln35_fu_311_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
